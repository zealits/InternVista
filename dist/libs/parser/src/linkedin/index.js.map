{"version":3,"sources":["../../../../../libs/parser/src/linkedin/index.ts"],"sourcesContent":["import { createId } from \"@paralleldrive/cuid2\";\r\nimport {\r\n  defaultCertification,\r\n  defaultEducation,\r\n  defaultExperience,\r\n  defaultLanguage,\r\n  defaultProfile,\r\n  defaultProject,\r\n  defaultResumeData,\r\n  defaultSkill,\r\n  ResumeData,\r\n  resumeDataSchema,\r\n} from \"@reactive-resume/schema\";\r\nimport { extractUrl, Json, parseArrayLikeCSVEntry, parseCSV } from \"@reactive-resume/utils\";\r\nimport * as JSZip from \"jszip\";\r\nimport { Schema } from \"zod\";\r\n\r\nimport { Parser } from \"../interfaces/parser\";\r\nimport { LinkedIn, linkedInSchema } from \"./schema\";\r\n\r\nexport * from \"./schema\";\r\n\r\nexport class LinkedInParser implements Parser<JSZip, LinkedIn> {\r\n  schema: Schema;\r\n\r\n  constructor() {\r\n    this.schema = linkedInSchema;\r\n  }\r\n\r\n  async readFile(file: File): Promise<JSZip> {\r\n    const data = await JSZip.loadAsync(file);\r\n\r\n    if (Object.keys(data.files).length === 0) {\r\n      throw new Error(\"ParserError: There were no files found inside the zip archive.\");\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  async validate(data: JSZip) {\r\n    const result: Json = {};\r\n\r\n    for (const [name, file] of Object.entries(data.files)) {\r\n      for (const key of Object.keys(linkedInSchema.shape)) {\r\n        if (name.includes(key)) {\r\n          const content = await file.async(\"text\");\r\n          const jsonArray = await parseCSV(content);\r\n          result[key] = jsonArray;\r\n        }\r\n      }\r\n    }\r\n\r\n    return linkedInSchema.parse(result);\r\n  }\r\n\r\n  convert(data: LinkedIn) {\r\n    const result = JSON.parse(JSON.stringify(defaultResumeData)) as ResumeData;\r\n\r\n    // Profile\r\n    if (data.Profile && data.Profile.length > 0) {\r\n      const profile = data.Profile[0];\r\n      const twitterHandle = profile[\"Twitter Handles\"];\r\n\r\n      result.basics.name = `${profile[\"First Name\"]} ${profile[\"Last Name\"]}`;\r\n      result.basics.location = profile[\"Geo Location\"];\r\n      result.basics.headline = profile.Headline;\r\n      // profile.Websites is represented as an array-like structure f.e. [COMPANY:https://some.link,PORTFOLIO:...]\r\n      const extractFirstWebsiteLink = (entry: string) =>\r\n        (parseArrayLikeCSVEntry(entry)[0] ?? \"\").replace(/.*?:/, \"\");\r\n      result.basics.url.href = extractUrl(extractFirstWebsiteLink(profile.Websites)) ?? \"\";\r\n      result.sections.summary.content = profile.Summary;\r\n      if (twitterHandle) {\r\n        result.sections.profiles.items.push({\r\n          ...defaultProfile,\r\n          id: createId(),\r\n          icon: \"twitter\",\r\n          network: \"Twitter\",\r\n          username: twitterHandle,\r\n          url: { ...defaultProfile.url, href: `https://twitter.com/${twitterHandle}` },\r\n        });\r\n      }\r\n    }\r\n\r\n    // Email Addresses\r\n    if (data[\"Email Addresses\"] && data[\"Email Addresses\"].length > 0) {\r\n      const email = data[\"Email Addresses\"][0];\r\n\r\n      result.basics.email = email[\"Email Address\"];\r\n    }\r\n\r\n    // Positions\r\n    if (data[\"Positions\"] && data[\"Positions\"].length > 0) {\r\n      for (const position of data[\"Positions\"]) {\r\n        result.sections.experience.items.push({\r\n          ...defaultExperience,\r\n          id: createId(),\r\n          company: position[\"Company Name\"],\r\n          position: position.Title,\r\n          location: position.Location,\r\n          summary: position.Description ?? \"\",\r\n          date: `${position[\"Started On\"]} - ${position[\"Finished On\"] ?? \"Present\"}`,\r\n        });\r\n      }\r\n    }\r\n\r\n    // Education\r\n    if (data[\"Education\"] && data[\"Education\"].length > 0) {\r\n      for (const education of data[\"Education\"]) {\r\n        result.sections.education.items.push({\r\n          ...defaultEducation,\r\n          id: createId(),\r\n          institution: education[\"School Name\"],\r\n          studyType: education[\"Degree Name\"],\r\n          summary: education.Notes ?? \"\",\r\n          date: `${education[\"Start Date\"]} - ${education[\"End Date\"] ?? \"Present\"}`,\r\n        });\r\n      }\r\n    }\r\n\r\n    // Skills\r\n    if (data[\"Skills\"] && data[\"Skills\"].length > 0) {\r\n      for (const skill of data[\"Skills\"]) {\r\n        result.sections.skills.items.push({\r\n          ...defaultSkill,\r\n          id: createId(),\r\n          name: skill.Name,\r\n        });\r\n      }\r\n    }\r\n\r\n    // Languages\r\n    if (data[\"Languages\"] && data[\"Languages\"].length > 0) {\r\n      for (const language of data[\"Languages\"]) {\r\n        result.sections.languages.items.push({\r\n          ...defaultLanguage,\r\n          id: createId(),\r\n          name: language.Name,\r\n          description: language.Proficiency ?? \"\",\r\n        });\r\n      }\r\n    }\r\n\r\n    // Certifications\r\n    if (data[\"Certifications\"] && data[\"Certifications\"].length > 0) {\r\n      for (const certification of data[\"Certifications\"]) {\r\n        result.sections.certifications.items.push({\r\n          ...defaultCertification,\r\n          id: createId(),\r\n          name: certification.Name,\r\n          issuer: certification.Authority,\r\n          url: { ...defaultCertification.url, href: certification.Url },\r\n          date: `${certification[\"Started On\"]} - ${certification[\"Finished On\"] ?? \"Present\"}`,\r\n        });\r\n      }\r\n    }\r\n\r\n    // Projects\r\n    if (data[\"Projects\"] && data[\"Projects\"].length > 0) {\r\n      for (const project of data[\"Projects\"]) {\r\n        result.sections.projects.items.push({\r\n          ...defaultProject,\r\n          id: createId(),\r\n          name: project.Title,\r\n          description: project.Description,\r\n          url: { ...defaultProject.url, href: project.Url ?? \"\" },\r\n          date: `${project[\"Started On\"]} - ${project[\"Finished On\"] ?? \"Present\"}`,\r\n        });\r\n      }\r\n    }\r\n\r\n    return resumeDataSchema.parse(result);\r\n  }\r\n}\r\n"],"names":["LinkedInParser","readFile","file","data","JSZip","loadAsync","Object","keys","files","length","Error","validate","result","name","entries","key","linkedInSchema","shape","includes","content","async","jsonArray","parseCSV","parse","convert","JSON","stringify","defaultResumeData","Profile","profile","twitterHandle","basics","location","headline","Headline","extractFirstWebsiteLink","entry","parseArrayLikeCSVEntry","replace","extractUrl","url","href","Websites","sections","summary","Summary","profiles","items","push","defaultProfile","id","createId","icon","network","username","email","position","experience","defaultExperience","company","Title","Location","Description","date","education","defaultEducation","institution","studyType","Notes","skill","skills","defaultSkill","Name","language","languages","defaultLanguage","description","Proficiency","certification","certifications","defaultCertification","issuer","Authority","Url","project","projects","defaultProject","resumeDataSchema","constructor","schema"],"mappings":"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"}