import { jsxDEV as g } from "react/jsx-dev-runtime";
import * as W from "react";
import u, { createContext as Rs, forwardRef as R, useContext as Ks, useState as Es, useCallback as qr, useEffect as vr, useId as nm, useRef as nn } from "react";
import * as Kn from "@radix-ui/react-accordion";
import * as Qe from "@radix-ui/react-alert-dialog";
import * as rm from "@radix-ui/react-aspect-ratio";
import * as Ir from "@radix-ui/react-avatar";
import { Slot as Gu } from "@radix-ui/react-slot";
import * as Ho from "@radix-ui/react-checkbox";
import * as be from "@radix-ui/react-dialog";
import * as Cr from "@radix-ui/react-popover";
import { PopoverTrigger as sm } from "@radix-ui/react-popover";
import * as zn from "@radix-ui/react-scroll-area";
import * as Ee from "@radix-ui/react-context-menu";
import * as Ne from "@radix-ui/react-dropdown-menu";
import { useFormContext as im, FormProvider as om, Controller as am, get as Io, set as eo, appendErrors as lm, useForm as cm } from "react-hook-form";
import * as Yu from "@radix-ui/react-label";
import * as ns from "@radix-ui/react-hover-card";
import * as um from "@radix-ui/react-portal";
import * as wa from "react-resizable-panels";
import dm, { flushSync as fm } from "react-dom";
import * as Qu from "@radix-ui/react-toggle";
import * as Rr from "@radix-ui/react-tooltip";
import * as Ve from "@radix-ui/react-select";
import * as Xu from "@radix-ui/react-separator";
import * as jr from "@radix-ui/react-slider";
import * as Po from "@radix-ui/react-switch";
import * as nr from "@radix-ui/react-tabs";
import * as ft from "@radix-ui/react-toast";
import * as ed from "@radix-ui/react-toggle-group";
const mm = Rs({
  color: "currentColor",
  size: "1em",
  weight: "regular",
  mirrored: !1
});
var hm = Object.defineProperty, Js = Object.getOwnPropertySymbols, td = Object.prototype.hasOwnProperty, nd = Object.prototype.propertyIsEnumerable, il = (n, e, t) => e in n ? hm(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, ol = (n, e) => {
  for (var t in e || (e = {}))
    td.call(e, t) && il(n, t, e[t]);
  if (Js)
    for (var t of Js(e))
      nd.call(e, t) && il(n, t, e[t]);
  return n;
}, al = (n, e) => {
  var t = {};
  for (var r in n)
    td.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && Js)
    for (var r of Js(n))
      e.indexOf(r) < 0 && nd.call(n, r) && (t[r] = n[r]);
  return t;
};
const me = R((n, e) => {
  const t = n, {
    alt: r,
    color: s,
    size: i,
    weight: o,
    mirrored: a,
    children: l,
    weights: c
  } = t, d = al(t, [
    "alt",
    "color",
    "size",
    "weight",
    "mirrored",
    "children",
    "weights"
  ]), f = Ks(mm), {
    color: m = "currentColor",
    size: h,
    weight: p = "regular",
    mirrored: y = !1
  } = f, v = al(f, [
    "color",
    "size",
    "weight",
    "mirrored"
  ]);
  return /* @__PURE__ */ u.createElement(
    "svg",
    ol(ol({
      ref: e,
      xmlns: "http://www.w3.org/2000/svg",
      width: i ?? h,
      height: i ?? h,
      fill: s ?? m,
      viewBox: "0 0 256 256",
      transform: a || y ? "scale(-1, 1)" : void 0
    }, v), d),
    !!r && /* @__PURE__ */ u.createElement("title", null, r),
    l,
    c.get(o ?? p)
  );
});
me.displayName = "IconBase";
const pm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M244,56v48a12,12,0,0,1-12,12H184a12,12,0,1,1,0-24H201.1l-19-17.38c-.13-.12-.26-.24-.38-.37A76,76,0,1,0,127,204h1a75.53,75.53,0,0,0,52.15-20.72,12,12,0,0,1,16.49,17.45A99.45,99.45,0,0,1,128,228h-1.37A100,100,0,1,1,198.51,57.06L220,76.72V56a12,12,0,0,1,24,0Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M232,56v48H184Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M235.06,48.57a8,8,0,0,0-8.72,1.73L206.68,70,195.75,60a96,96,0,1,0-69.07,164H128a95.44,95.44,0,0,0,65.88-26.19,8,8,0,0,0-11-11.63A80,80,0,1,1,184.56,71.4l.25.24,10.55,9.65-17,17A8,8,0,0,0,184,112h48a8,8,0,0,0,8-8V56A8,8,0,0,0,235.06,48.57ZM224,96H203.31L224,75.28Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M240,56v48a8,8,0,0,1-8,8H184a8,8,0,0,1-5.66-13.66l17-17-10.55-9.65-.25-.24a80,80,0,1,0-1.67,114.78,8,8,0,1,1,11,11.63A95.44,95.44,0,0,1,128,224h-1.32A96,96,0,1,1,195.75,60l10.93,10L226.34,50.3A8,8,0,0,1,240,56Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M238,56v48a6,6,0,0,1-6,6H184a6,6,0,0,1,0-12h32.55l-30.38-27.8c-.06-.06-.12-.13-.19-.19a82,82,0,1,0-1.7,117.65,6,6,0,0,1,8.24,8.73A93.46,93.46,0,0,1,128,222h-1.28A94,94,0,1,1,194.37,61.4L226,90.35V56a6,6,0,1,1,12,0Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M240,56v48a8,8,0,0,1-8,8H184a8,8,0,0,1,0-16H211.4L184.81,71.64l-.25-.24a80,80,0,1,0-1.67,114.78,8,8,0,0,1,11,11.63A95.44,95.44,0,0,1,128,224h-1.32A96,96,0,1,1,195.75,60L224,85.8V56a8,8,0,1,1,16,0Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M236,56v48a4,4,0,0,1-4,4H184a4,4,0,0,1,0-8h37.7L187.53,68.69l-.13-.12a84,84,0,1,0-1.75,120.51,4,4,0,0,1,5.5,5.82A91.43,91.43,0,0,1,128,220h-1.26A92,92,0,1,1,193,62.84l35,32.05V56a4,4,0,1,1,8,0Z" }))
  ]
]), gm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M228,128a100,100,0,0,1-98.66,100H128a99.39,99.39,0,0,1-68.62-27.29,12,12,0,0,1,16.48-17.45,76,76,0,1,0-1.57-109c-.13.13-.25.25-.39.37L54.89,92H72a12,12,0,0,1,0,24H24a12,12,0,0,1-12-12V56a12,12,0,0,1,24,0V76.72L57.48,57.06A100,100,0,0,1,228,128Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M72,104H24V56Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M195.88,60.08A96.08,96.08,0,0,0,60.25,60L49.31,70,29.66,50.3A8,8,0,0,0,16,56v48a8,8,0,0,0,8,8H72a8,8,0,0,0,5.66-13.66l-17-17,10.54-9.65a3.07,3.07,0,0,0,.26-.25,80,80,0,1,1,1.65,114.78,8,8,0,0,0-11,11.63A95.38,95.38,0,0,0,128,224h1.32A96,96,0,0,0,195.88,60.08ZM32,96V75.28L52.69,96Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M224,128a96,96,0,0,1-94.71,96H128A95.38,95.38,0,0,1,62.1,197.8a8,8,0,0,1,11-11.63A80,80,0,1,0,71.43,71.39a3.07,3.07,0,0,1-.26.25L60.63,81.29l17,17A8,8,0,0,1,72,112H24a8,8,0,0,1-8-8V56A8,8,0,0,1,29.66,50.3L49.31,70,60.25,60A96,96,0,0,1,224,128Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M222,128a94,94,0,0,1-92.74,94H128a93.43,93.43,0,0,1-64.5-25.65,6,6,0,1,1,8.24-8.72A82,82,0,1,0,70,70l-.19.19L39.44,98H72a6,6,0,0,1,0,12H24a6,6,0,0,1-6-6V56a6,6,0,0,1,12,0V90.34L61.63,61.4A94,94,0,0,1,222,128Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M224,128a96,96,0,0,1-94.71,96H128A95.38,95.38,0,0,1,62.1,197.8a8,8,0,0,1,11-11.63A80,80,0,1,0,71.43,71.39a3.07,3.07,0,0,1-.26.25L44.59,96H72a8,8,0,0,1,0,16H24a8,8,0,0,1-8-8V56a8,8,0,0,1,16,0V85.8L60.25,60A96,96,0,0,1,224,128Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M220,128a92,92,0,0,1-90.77,92H128a91.47,91.47,0,0,1-63.13-25.1,4,4,0,1,1,5.5-5.82A84,84,0,1,0,68.6,68.57l-.13.12L34.3,100H72a4,4,0,0,1,0,8H24a4,4,0,0,1-4-4V56a4,4,0,0,1,8,0V94.89l35-32A92,92,0,0,1,220,128Z" }))
  ]
]), bm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M216.49,104.49l-80,80a12,12,0,0,1-17,0l-80-80a12,12,0,0,1,17-17L128,159l71.51-71.52a12,12,0,0,1,17,17Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M208,96l-80,80L48,96Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M215.39,92.94A8,8,0,0,0,208,88H48a8,8,0,0,0-5.66,13.66l80,80a8,8,0,0,0,11.32,0l80-80A8,8,0,0,0,215.39,92.94ZM128,164.69,67.31,104H188.69Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M213.66,101.66l-80,80a8,8,0,0,1-11.32,0l-80-80A8,8,0,0,1,48,88H208a8,8,0,0,1,5.66,13.66Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M212.24,100.24l-80,80a6,6,0,0,1-8.48,0l-80-80a6,6,0,0,1,8.48-8.48L128,167.51l75.76-75.75a6,6,0,0,1,8.48,8.48Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M213.66,101.66l-80,80a8,8,0,0,1-11.32,0l-80-80A8,8,0,0,1,53.66,90.34L128,164.69l74.34-74.35a8,8,0,0,1,11.32,11.32Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M210.83,98.83l-80,80a4,4,0,0,1-5.66,0l-80-80a4,4,0,0,1,5.66-5.66L128,170.34l77.17-77.17a4,4,0,1,1,5.66,5.66Z" }))
  ]
]), ym = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M184.49,136.49l-80,80a12,12,0,0,1-17-17L159,128,87.51,56.49a12,12,0,1,1,17-17l80,80A12,12,0,0,1,184.49,136.49Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M176,128,96,208V48Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M181.66,122.34l-80-80A8,8,0,0,0,88,48V208a8,8,0,0,0,13.66,5.66l80-80A8,8,0,0,0,181.66,122.34ZM104,188.69V67.31L164.69,128Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M181.66,133.66l-80,80A8,8,0,0,1,88,208V48a8,8,0,0,1,13.66-5.66l80,80A8,8,0,0,1,181.66,133.66Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M180.24,132.24l-80,80a6,6,0,0,1-8.48-8.48L167.51,128,91.76,52.24a6,6,0,0,1,8.48-8.48l80,80A6,6,0,0,1,180.24,132.24Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M181.66,133.66l-80,80a8,8,0,0,1-11.32-11.32L164.69,128,90.34,53.66a8,8,0,0,1,11.32-11.32l80,80A8,8,0,0,1,181.66,133.66Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M178.83,130.83l-80,80a4,4,0,0,1-5.66-5.66L170.34,128,93.17,50.83a4,4,0,0,1,5.66-5.66l80,80A4,4,0,0,1,178.83,130.83Z" }))
  ]
]), vm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M184.49,167.51a12,12,0,0,1,0,17l-48,48a12,12,0,0,1-17,0l-48-48a12,12,0,0,1,17-17L128,207l39.51-39.52A12,12,0,0,1,184.49,167.51Zm-96-79L128,49l39.51,39.52a12,12,0,0,0,17-17l-48-48a12,12,0,0,0-17,0l-48,48a12,12,0,0,0,17,17Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M80,176h96l-48,48ZM128,32,80,80h96Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M176,168H80a8,8,0,0,0-5.66,13.66l48,48a8,8,0,0,0,11.32,0l48-48A8,8,0,0,0,176,168Zm-48,44.69L99.31,184h57.38ZM80,88h96a8,8,0,0,0,5.66-13.66l-48-48a8,8,0,0,0-11.32,0l-48,48A8,8,0,0,0,80,88Zm48-44.69L156.69,72H99.31Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M72.61,83.06a8,8,0,0,1,1.73-8.72l48-48a8,8,0,0,1,11.32,0l48,48A8,8,0,0,1,176,88H80A8,8,0,0,1,72.61,83.06ZM176,168H80a8,8,0,0,0-5.66,13.66l48,48a8,8,0,0,0,11.32,0l48-48A8,8,0,0,0,176,168Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M180.24,171.76a6,6,0,0,1,0,8.48l-48,48a6,6,0,0,1-8.48,0l-48-48a6,6,0,0,1,8.48-8.48L128,215.51l43.76-43.75A6,6,0,0,1,180.24,171.76Zm-96-87.52L128,40.49l43.76,43.75a6,6,0,0,0,8.48-8.48l-48-48a6,6,0,0,0-8.48,0l-48,48a6,6,0,0,0,8.48,8.48Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M181.66,170.34a8,8,0,0,1,0,11.32l-48,48a8,8,0,0,1-11.32,0l-48-48a8,8,0,0,1,11.32-11.32L128,212.69l42.34-42.35A8,8,0,0,1,181.66,170.34Zm-96-84.68L128,43.31l42.34,42.35a8,8,0,0,0,11.32-11.32l-48-48a8,8,0,0,0-11.32,0l-48,48A8,8,0,0,0,85.66,85.66Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M178.83,173.17a4,4,0,0,1,0,5.66l-48,48a4,4,0,0,1-5.66,0l-48-48a4,4,0,0,1,5.66-5.66L128,218.34l45.17-45.17A4,4,0,0,1,178.83,173.17Zm-96-90.34L128,37.66l45.17,45.17a4,4,0,1,0,5.66-5.66l-48-48a4,4,0,0,0-5.66,0l-48,48a4,4,0,0,0,5.66,5.66Z" }))
  ]
]), xm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M232.49,80.49l-128,128a12,12,0,0,1-17,0l-56-56a12,12,0,1,1,17-17L96,183,215.51,63.51a12,12,0,0,1,17,17Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement(
      "path",
      {
        d: "M232,56V200a16,16,0,0,1-16,16H40a16,16,0,0,1-16-16V56A16,16,0,0,1,40,40H216A16,16,0,0,1,232,56Z",
        opacity: "0.2"
      }
    ), /* @__PURE__ */ u.createElement("path", { d: "M205.66,85.66l-96,96a8,8,0,0,1-11.32,0l-40-40a8,8,0,0,1,11.32-11.32L104,164.69l90.34-90.35a8,8,0,0,1,11.32,11.32Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M216,40H40A16,16,0,0,0,24,56V200a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A16,16,0,0,0,216,40ZM205.66,85.66l-96,96a8,8,0,0,1-11.32,0l-40-40a8,8,0,0,1,11.32-11.32L104,164.69l90.34-90.35a8,8,0,0,1,11.32,11.32Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M228.24,76.24l-128,128a6,6,0,0,1-8.48,0l-56-56a6,6,0,0,1,8.48-8.48L96,191.51,219.76,67.76a6,6,0,0,1,8.48,8.48Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M229.66,77.66l-128,128a8,8,0,0,1-11.32,0l-56-56a8,8,0,0,1,11.32-11.32L96,188.69,218.34,66.34a8,8,0,0,1,11.32,11.32Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M226.83,74.83l-128,128a4,4,0,0,1-5.66,0l-56-56a4,4,0,0,1,5.66-5.66L96,194.34,221.17,69.17a4,4,0,1,1,5.66,5.66Z" }))
  ]
]), wm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M51.51,104.49l-32-32a12,12,0,0,1,0-17l32-32a12,12,0,1,1,17,17L45,64,68.49,87.51a12,12,0,0,1-17,17Zm48,0a12,12,0,0,0,17,0l32-32a12,12,0,0,0,0-17l-32-32a12,12,0,1,0-17,17L123,64,99.51,87.51A12,12,0,0,0,99.51,104.49ZM200,36H180a12,12,0,0,0,0,24h16V196H60V140a12,12,0,0,0-24,0v60a20,20,0,0,0,20,20H200a20,20,0,0,0,20-20V56A20,20,0,0,0,200,36Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement(
      "path",
      {
        d: "M208,56V200a8,8,0,0,1-8,8H56a8,8,0,0,1-8-8V56a8,8,0,0,1,8-8H200A8,8,0,0,1,208,56Z",
        opacity: "0.2"
      }
    ), /* @__PURE__ */ u.createElement("path", { d: "M58.34,101.66l-32-32a8,8,0,0,1,0-11.32l32-32A8,8,0,0,1,69.66,37.66L43.31,64,69.66,90.34a8,8,0,0,1-11.32,11.32Zm40,0a8,8,0,0,0,11.32,0l32-32a8,8,0,0,0,0-11.32l-32-32A8,8,0,0,0,98.34,37.66L124.69,64,98.34,90.34A8,8,0,0,0,98.34,101.66ZM200,40H176a8,8,0,0,0,0,16h24V200H56V136a8,8,0,0,0-16,0v64a16,16,0,0,0,16,16H200a16,16,0,0,0,16-16V56A16,16,0,0,0,200,40Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M200,40H168a16,16,0,0,0-16-16H32A16,16,0,0,0,16,40v80a16,16,0,0,0,16,16h8v64a16,16,0,0,0,16,16H200a16,16,0,0,0,16-16V56A16,16,0,0,0,200,40ZM106.34,61.66a8,8,0,0,1,11.32-11.32l24,24a8,8,0,0,1,0,11.32l-24,24a8,8,0,0,1-11.32-11.32L124.69,80Zm-64,24a8,8,0,0,1,0-11.32l24-24A8,8,0,0,1,77.66,61.66L59.31,80,77.66,98.34a8,8,0,0,1-11.32,11.32ZM200,200H56V136h96a16,16,0,0,0,16-16V56h32Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M59.76,100.24l-32-32a6,6,0,0,1,0-8.48l32-32a6,6,0,1,1,8.48,8.48L40.49,64,68.24,91.76a6,6,0,1,1-8.48,8.48Zm40,0a6,6,0,0,0,8.48,0l32-32a6,6,0,0,0,0-8.48l-32-32a6,6,0,1,0-8.48,8.48L127.51,64,99.76,91.76A6,6,0,0,0,99.76,100.24ZM200,42H176a6,6,0,0,0,0,12h24a2,2,0,0,1,2,2V200a2,2,0,0,1-2,2H56a2,2,0,0,1-2-2V136a6,6,0,0,0-12,0v64a14,14,0,0,0,14,14H200a14,14,0,0,0,14-14V56A14,14,0,0,0,200,42Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M58.34,101.66l-32-32a8,8,0,0,1,0-11.32l32-32A8,8,0,0,1,69.66,37.66L43.31,64,69.66,90.34a8,8,0,0,1-11.32,11.32Zm40,0a8,8,0,0,0,11.32,0l32-32a8,8,0,0,0,0-11.32l-32-32A8,8,0,0,0,98.34,37.66L124.69,64,98.34,90.34A8,8,0,0,0,98.34,101.66ZM200,40H176a8,8,0,0,0,0,16h24V200H56V136a8,8,0,0,0-16,0v64a16,16,0,0,0,16,16H200a16,16,0,0,0,16-16V56A16,16,0,0,0,200,40Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M61.17,98.83l-32-32a4,4,0,0,1,0-5.66l32-32a4,4,0,0,1,5.66,5.66L37.66,64,66.83,93.17a4,4,0,0,1-5.66,5.66Zm40,0a4,4,0,0,0,5.66,0l32-32a4,4,0,0,0,0-5.66l-32-32a4,4,0,0,0-5.66,5.66L130.34,64,101.17,93.17A4,4,0,0,0,101.17,98.83ZM200,44H176a4,4,0,0,0,0,8h24a4,4,0,0,1,4,4V200a4,4,0,0,1-4,4H56a4,4,0,0,1-4-4V136a4,4,0,0,0-8,0v64a12,12,0,0,0,12,12H200a12,12,0,0,0,12-12V56A12,12,0,0,0,200,44Z" }))
  ]
]), Nm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M71.68,97.22,34.74,128l36.94,30.78a12,12,0,1,1-15.36,18.44l-48-40a12,12,0,0,1,0-18.44l48-40A12,12,0,0,1,71.68,97.22Zm176,21.56-48-40a12,12,0,1,0-15.36,18.44L221.26,128l-36.94,30.78a12,12,0,1,0,15.36,18.44l48-40a12,12,0,0,0,0-18.44ZM164.1,28.72a12,12,0,0,0-15.38,7.18l-64,176a12,12,0,0,0,7.18,15.37A11.79,11.79,0,0,0,96,228a12,12,0,0,0,11.28-7.9l64-176A12,12,0,0,0,164.1,28.72Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M240,128l-48,40H64L16,128,64,88H192Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M69.12,94.15,28.5,128l40.62,33.85a8,8,0,1,1-10.24,12.29l-48-40a8,8,0,0,1,0-12.29l48-40a8,8,0,0,1,10.24,12.3Zm176,27.7-48-40a8,8,0,1,0-10.24,12.3L227.5,128l-40.62,33.85a8,8,0,1,0,10.24,12.29l48-40a8,8,0,0,0,0-12.29ZM162.73,32.48a8,8,0,0,0-10.25,4.79l-64,176a8,8,0,0,0,4.79,10.26A8.14,8.14,0,0,0,96,224a8,8,0,0,0,7.52-5.27l64-176A8,8,0,0,0,162.73,32.48Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M216,40H40A16,16,0,0,0,24,56V200a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A16,16,0,0,0,216,40ZM92.8,145.6a8,8,0,1,1-9.6,12.8l-32-24a8,8,0,0,1,0-12.8l32-24a8,8,0,0,1,9.6,12.8L69.33,128Zm58.89-71.4-32,112a8,8,0,1,1-15.38-4.4l32-112a8,8,0,0,1,15.38,4.4Zm53.11,60.2-32,24a8,8,0,0,1-9.6-12.8L186.67,128,163.2,110.4a8,8,0,1,1,9.6-12.8l32,24a8,8,0,0,1,0,12.8Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M67.84,92.61,25.37,128l42.47,35.39a6,6,0,1,1-7.68,9.22l-48-40a6,6,0,0,1,0-9.22l48-40a6,6,0,0,1,7.68,9.22Zm176,30.78-48-40a6,6,0,1,0-7.68,9.22L230.63,128l-42.47,35.39a6,6,0,1,0,7.68,9.22l48-40a6,6,0,0,0,0-9.22Zm-81.79-89A6,6,0,0,0,154.36,38l-64,176A6,6,0,0,0,94,221.64a6.15,6.15,0,0,0,2,.36,6,6,0,0,0,5.64-3.95l64-176A6,6,0,0,0,162.05,34.36Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M69.12,94.15,28.5,128l40.62,33.85a8,8,0,1,1-10.24,12.29l-48-40a8,8,0,0,1,0-12.29l48-40a8,8,0,0,1,10.24,12.3Zm176,27.7-48-40a8,8,0,1,0-10.24,12.3L227.5,128l-40.62,33.85a8,8,0,1,0,10.24,12.29l48-40a8,8,0,0,0,0-12.29ZM162.73,32.48a8,8,0,0,0-10.25,4.79l-64,176a8,8,0,0,0,4.79,10.26A8.14,8.14,0,0,0,96,224a8,8,0,0,0,7.52-5.27l64-176A8,8,0,0,0,162.73,32.48Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M66.56,91.07,22.25,128l44.31,36.93A4,4,0,0,1,64,172a3.94,3.94,0,0,1-2.56-.93l-48-40a4,4,0,0,1,0-6.14l48-40a4,4,0,0,1,5.12,6.14Zm176,33.86-48-40a4,4,0,1,0-5.12,6.14L233.75,128l-44.31,36.93a4,4,0,1,0,5.12,6.14l48-40a4,4,0,0,0,0-6.14ZM161.37,36.24a4,4,0,0,0-5.13,2.39l-64,176a4,4,0,0,0,2.39,5.13A4.12,4.12,0,0,0,96,220a4,4,0,0,0,3.76-2.63l64-176A4,4,0,0,0,161.37,36.24Z" }))
  ]
]), km = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M128,96a32,32,0,1,0,32,32A32,32,0,0,0,128,96Zm0,40a8,8,0,1,1,8-8A8,8,0,0,1,128,136Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M152,128a24,24,0,1,1-24-24A24,24,0,0,1,152,128Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M128,96a32,32,0,1,0,32,32A32,32,0,0,0,128,96Zm0,48a16,16,0,1,1,16-16A16,16,0,0,1,128,144Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M156,128a28,28,0,1,1-28-28A28,28,0,0,1,156,128Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M128,98a30,30,0,1,0,30,30A30,30,0,0,0,128,98Zm0,48a18,18,0,1,1,18-18A18,18,0,0,1,128,146Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M128,96a32,32,0,1,0,32,32A32,32,0,0,0,128,96Zm0,48a16,16,0,1,1,16-16A16,16,0,0,1,128,144Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M128,100a28,28,0,1,0,28,28A28,28,0,0,0,128,100Zm0,48a20,20,0,1,1,20-20A20,20,0,0,1,128,148Z" }))
  ]
]), Mm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M108,60A16,16,0,1,1,92,44,16,16,0,0,1,108,60Zm56,16a16,16,0,1,0-16-16A16,16,0,0,0,164,76ZM92,112a16,16,0,1,0,16,16A16,16,0,0,0,92,112Zm72,0a16,16,0,1,0,16,16A16,16,0,0,0,164,112ZM92,180a16,16,0,1,0,16,16A16,16,0,0,0,92,180Zm72,0a16,16,0,1,0,16,16A16,16,0,0,0,164,180Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement(
      "path",
      {
        d: "M208,32V224a16,16,0,0,1-16,16H64a16,16,0,0,1-16-16V32A16,16,0,0,1,64,16H192A16,16,0,0,1,208,32Z",
        opacity: "0.2"
      }
    ), /* @__PURE__ */ u.createElement("path", { d: "M104,60A12,12,0,1,1,92,48,12,12,0,0,1,104,60Zm60,12a12,12,0,1,0-12-12A12,12,0,0,0,164,72ZM92,116a12,12,0,1,0,12,12A12,12,0,0,0,92,116Zm72,0a12,12,0,1,0,12,12A12,12,0,0,0,164,116ZM92,184a12,12,0,1,0,12,12A12,12,0,0,0,92,184Zm72,0a12,12,0,1,0,12,12A12,12,0,0,0,164,184Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M192,16H64A16,16,0,0,0,48,32V224a16,16,0,0,0,16,16H192a16,16,0,0,0,16-16V32A16,16,0,0,0,192,16ZM100,200a12,12,0,1,1,12-12A12,12,0,0,1,100,200Zm0-60a12,12,0,1,1,12-12A12,12,0,0,1,100,140Zm0-60a12,12,0,1,1,12-12A12,12,0,0,1,100,80Zm56,120a12,12,0,1,1,12-12A12,12,0,0,1,156,200Zm0-60a12,12,0,1,1,12-12A12,12,0,0,1,156,140Zm0-60a12,12,0,1,1,12-12A12,12,0,0,1,156,80Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M102,60A10,10,0,1,1,92,50,10,10,0,0,1,102,60Zm62,10a10,10,0,1,0-10-10A10,10,0,0,0,164,70ZM92,118a10,10,0,1,0,10,10A10,10,0,0,0,92,118Zm72,0a10,10,0,1,0,10,10A10,10,0,0,0,164,118ZM92,186a10,10,0,1,0,10,10A10,10,0,0,0,92,186Zm72,0a10,10,0,1,0,10,10A10,10,0,0,0,164,186Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M104,60A12,12,0,1,1,92,48,12,12,0,0,1,104,60Zm60,12a12,12,0,1,0-12-12A12,12,0,0,0,164,72ZM92,116a12,12,0,1,0,12,12A12,12,0,0,0,92,116Zm72,0a12,12,0,1,0,12,12A12,12,0,0,0,164,116ZM92,184a12,12,0,1,0,12,12A12,12,0,0,0,92,184Zm72,0a12,12,0,1,0,12,12A12,12,0,0,0,164,184Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M100,60a8,8,0,1,1-8-8A8,8,0,0,1,100,60Zm64,8a8,8,0,1,0-8-8A8,8,0,0,0,164,68ZM92,120a8,8,0,1,0,8,8A8,8,0,0,0,92,120Zm72,0a8,8,0,1,0,8,8A8,8,0,0,0,164,120ZM92,188a8,8,0,1,0,8,8A8,8,0,0,0,92,188Zm72,0a8,8,0,1,0,8,8A8,8,0,0,0,164,188Z" }))
  ]
]), Cm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M204.37,51.59A108,108,0,1,0,236,128,108.11,108.11,0,0,0,204.37,51.59ZM140,136H116V111.39l24-12Zm-40,71.25V160h56v47.25a84.73,84.73,0,0,1-56,0Zm87.4-19.84a84.53,84.53,0,0,1-7.4,6.55V156a20,20,0,0,0-16-19.6V80a12,12,0,0,0-17.37-10.73l-48,24A12,12,0,0,0,92,104v32.41A20,20,0,0,0,76,156v38a84.53,84.53,0,0,1-7.4-6.55,84,84,0,1,1,118.8,0Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement(
      "path",
      {
        d: "M195.88,195.88A95.7,95.7,0,0,1,168,215.29V152a8,8,0,0,0-8-8h-8V72L104,96v48H96a8,8,0,0,0-8,8v63.29a96,96,0,1,1,107.88-19.41Z",
        opacity: "0.2"
      }
    ), /* @__PURE__ */ u.createElement("path", { d: "M201.54,54.46A104,104,0,0,0,54.46,201.54,104,104,0,0,0,201.54,54.46ZM96,210V152h64v58a88.33,88.33,0,0,1-64,0Zm48-74H112V100.94l32-16Zm46.22,54.22A88.09,88.09,0,0,1,176,201.77V152a16,16,0,0,0-16-16V72a8,8,0,0,0-11.58-7.16l-48,24A8,8,0,0,0,96,96v40a16,16,0,0,0-16,16v49.77a88,88,0,1,1,110.22-11.55Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M201.54,54.46A104,104,0,0,0,54.46,201.54,104,104,0,0,0,201.54,54.46ZM96,210V152h64v58a88.33,88.33,0,0,1-64,0Zm94.22-19.78A88.09,88.09,0,0,1,176,201.77V152a16,16,0,0,0-16-16V72a8,8,0,0,0-11.58-7.16l-48,24A8,8,0,0,0,96,96v40a16,16,0,0,0-16,16v49.77a88,88,0,1,1,110.22-11.55Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M200.12,55.87A102,102,0,1,0,55.88,200.12,102,102,0,1,0,200.12,55.87ZM94,211.37V152a2,2,0,0,1,2-2h64a2,2,0,0,1,2,2v59.37a90.49,90.49,0,0,1-68,0ZM146,138H110V99.71l36-18Zm45.64,53.64h0A90.93,90.93,0,0,1,174,205.39V152a14,14,0,0,0-14-14h-2V72a6,6,0,0,0-8.68-5.37l-48,24A6,6,0,0,0,98,96v42H96a14,14,0,0,0-14,14v53.39a90.93,90.93,0,0,1-17.64-13.75,90,90,0,1,1,127.28,0Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M201.54,54.46A104,104,0,0,0,54.46,201.54,104,104,0,0,0,201.54,54.46ZM96,210V152h64v58a88.33,88.33,0,0,1-64,0Zm48-74H112V100.94l32-16Zm46.22,54.22A88.09,88.09,0,0,1,176,201.77V152a16,16,0,0,0-16-16V72a8,8,0,0,0-11.58-7.16l-48,24A8,8,0,0,0,96,96v40a16,16,0,0,0-16,16v49.77a88,88,0,1,1,110.22-11.55Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M198.71,57.29A100,100,0,1,0,57.29,198.71,100,100,0,1,0,198.71,57.29ZM92,212.7V152a4,4,0,0,1,4-4h64a4,4,0,0,1,4,4v60.7a92.42,92.42,0,0,1-72,0ZM148,140H108V98.47l40-20Zm45.05,53.05A92,92,0,0,1,172,208.83V152a12,12,0,0,0-12-12h-4V72a4,4,0,0,0-5.79-3.58l-48,24A4,4,0,0,0,100,96v44H96a12,12,0,0,0-12,12v56.83a92,92,0,1,1,109.05-15.78Z" }))
  ]
]), Rm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M144,96a16,16,0,1,1,16,16A16,16,0,0,1,144,96Zm92-40V200a20,20,0,0,1-20,20H40a20,20,0,0,1-20-20V56A20,20,0,0,1,40,36H216A20,20,0,0,1,236,56ZM44,60v79.72l33.86-33.86a20,20,0,0,1,28.28,0L147.31,147l17.18-17.17a20,20,0,0,1,28.28,0L212,149.09V60Zm0,136H162.34L92,125.66l-48,48Zm168,0V183l-33.37-33.37L164.28,164l32,32Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement(
      "path",
      {
        d: "M224,56V178.06l-39.72-39.72a8,8,0,0,0-11.31,0L147.31,164,97.66,114.34a8,8,0,0,0-11.32,0L32,168.69V56a8,8,0,0,1,8-8H216A8,8,0,0,1,224,56Z",
        opacity: "0.2"
      }
    ), /* @__PURE__ */ u.createElement("path", { d: "M216,40H40A16,16,0,0,0,24,56V200a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A16,16,0,0,0,216,40Zm0,16V158.75l-26.07-26.06a16,16,0,0,0-22.63,0l-20,20-44-44a16,16,0,0,0-22.62,0L40,149.37V56ZM40,172l52-52,80,80H40Zm176,28H194.63l-36-36,20-20L216,181.38V200ZM144,100a12,12,0,1,1,12,12A12,12,0,0,1,144,100Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M216,40H40A16,16,0,0,0,24,56V200a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A16,16,0,0,0,216,40ZM156,88a12,12,0,1,1-12,12A12,12,0,0,1,156,88ZM40,200V172l52-52,80,80Zm176,0H194.63l-36-36,20-20L216,181.38V200Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M216,42H40A14,14,0,0,0,26,56V200a14,14,0,0,0,14,14H216a14,14,0,0,0,14-14V56A14,14,0,0,0,216,42ZM40,54H216a2,2,0,0,1,2,2V163.57L188.53,134.1a14,14,0,0,0-19.8,0l-21.42,21.42L101.9,110.1a14,14,0,0,0-19.8,0L38,154.2V56A2,2,0,0,1,40,54ZM38,200V171.17l52.58-52.58a2,2,0,0,1,2.84,0L176.83,202H40A2,2,0,0,1,38,200Zm178,2H193.8l-38-38,21.41-21.42a2,2,0,0,1,2.83,0l38,38V200A2,2,0,0,1,216,202ZM146,100a10,10,0,1,1,10,10A10,10,0,0,1,146,100Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M216,40H40A16,16,0,0,0,24,56V200a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A16,16,0,0,0,216,40Zm0,16V158.75l-26.07-26.06a16,16,0,0,0-22.63,0l-20,20-44-44a16,16,0,0,0-22.62,0L40,149.37V56ZM40,172l52-52,80,80H40Zm176,28H194.63l-36-36,20-20L216,181.38V200ZM144,100a12,12,0,1,1,12,12A12,12,0,0,1,144,100Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M216,44H40A12,12,0,0,0,28,56V200a12,12,0,0,0,12,12H216a12,12,0,0,0,12-12V56A12,12,0,0,0,216,44ZM40,52H216a4,4,0,0,1,4,4V168.4l-32.89-32.89a12,12,0,0,0-17,0l-22.83,22.83-46.82-46.83a12,12,0,0,0-17,0L36,159V56A4,4,0,0,1,40,52ZM36,200V170.34l53.17-53.17a4,4,0,0,1,5.66,0L181.66,204H40A4,4,0,0,1,36,200Zm180,4H193l-40-40,22.83-22.83a4,4,0,0,1,5.66,0L220,179.71V200A4,4,0,0,1,216,204ZM148,100a8,8,0,1,1,8,8A8,8,0,0,1,148,100Z" }))
  ]
]), Em = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M71.51,144.49a12,12,0,0,1,0-17l24-24a12,12,0,0,1,17,17L109,124h55V104a12,12,0,0,1,24,0v32a12,12,0,0,1-12,12H109l3.52,3.51a12,12,0,0,1-17,17ZM236,56V200a20,20,0,0,1-20,20H40a20,20,0,0,1-20-20V56A20,20,0,0,1,40,36H216A20,20,0,0,1,236,56Zm-24,4H44V196H212Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement(
      "path",
      {
        d: "M224,56V200a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V56a8,8,0,0,1,8-8H216A8,8,0,0,1,224,56Z",
        opacity: "0.2"
      }
    ), /* @__PURE__ */ u.createElement("path", { d: "M184,104v32a8,8,0,0,1-8,8H99.31l10.35,10.34a8,8,0,0,1-11.32,11.32l-24-24a8,8,0,0,1,0-11.32l24-24a8,8,0,0,1,11.32,11.32L99.31,128H168V104a8,8,0,0,1,16,0Zm48-48V200a16,16,0,0,1-16,16H40a16,16,0,0,1-16-16V56A16,16,0,0,1,40,40H216A16,16,0,0,1,232,56ZM216,200V56H40V200H216Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M216,40H40A16,16,0,0,0,24,56V200a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A16,16,0,0,0,216,40Zm-32,96a8,8,0,0,1-8,8H99.31l10.35,10.34a8,8,0,0,1-11.32,11.32l-24-24a8,8,0,0,1,0-11.32l24-24a8,8,0,0,1,11.32,11.32L99.31,128H168V104a8,8,0,0,1,16,0Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M182,104v32a6,6,0,0,1-6,6H94.48l13.76,13.76a6,6,0,1,1-8.48,8.48l-24-24a6,6,0,0,1,0-8.48l24-24a6,6,0,0,1,8.48,8.48L94.48,130H170V104a6,6,0,0,1,12,0Zm48-48V200a14,14,0,0,1-14,14H40a14,14,0,0,1-14-14V56A14,14,0,0,1,40,42H216A14,14,0,0,1,230,56Zm-12,0a2,2,0,0,0-2-2H40a2,2,0,0,0-2,2V200a2,2,0,0,0,2,2H216a2,2,0,0,0,2-2Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M184,104v32a8,8,0,0,1-8,8H99.31l10.35,10.34a8,8,0,0,1-11.32,11.32l-24-24a8,8,0,0,1,0-11.32l24-24a8,8,0,0,1,11.32,11.32L99.31,128H168V104a8,8,0,0,1,16,0Zm48-48V200a16,16,0,0,1-16,16H40a16,16,0,0,1-16-16V56A16,16,0,0,1,40,40H216A16,16,0,0,1,232,56ZM216,200V56H40V200H216Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M180,104v32a4,4,0,0,1-4,4H89.66l17.17,17.17a4,4,0,0,1-5.66,5.66l-24-24a4,4,0,0,1,0-5.66l24-24a4,4,0,0,1,5.66,5.66L89.66,132H172V104a4,4,0,0,1,8,0Zm48-48V200a12,12,0,0,1-12,12H40a12,12,0,0,1-12-12V56A12,12,0,0,1,40,44H216A12,12,0,0,1,228,56Zm-8,0a4,4,0,0,0-4-4H40a4,4,0,0,0-4,4V200a4,4,0,0,0,4,4H216a4,4,0,0,0,4-4Z" }))
  ]
]), Sm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M87.5,151.52l64-64a12,12,0,0,1,17,17l-64,64a12,12,0,0,1-17-17Zm131-114a60.08,60.08,0,0,0-84.87,0L103.51,67.61a12,12,0,0,0,17,17l30.07-30.06a36,36,0,0,1,50.93,50.92L171.4,135.52a12,12,0,1,0,17,17l30.08-30.06A60.09,60.09,0,0,0,218.45,37.55ZM135.52,171.4l-30.07,30.08a36,36,0,0,1-50.92-50.93l30.06-30.07a12,12,0,0,0-17-17L37.55,133.58a60,60,0,0,0,84.88,84.87l30.06-30.07a12,12,0,0,0-17-17Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement(
      "path",
      {
        d: "M209.94,113.94l-96,96a48,48,0,0,1-67.88-67.88l96-96a48,48,0,0,1,67.88,67.88Z",
        opacity: "0.2"
      }
    ), /* @__PURE__ */ u.createElement("path", { d: "M165.66,90.34a8,8,0,0,1,0,11.32l-64,64a8,8,0,0,1-11.32-11.32l64-64A8,8,0,0,1,165.66,90.34ZM215.6,40.4a56,56,0,0,0-79.2,0L106.34,70.45a8,8,0,0,0,11.32,11.32l30.06-30a40,40,0,0,1,56.57,56.56l-30.07,30.06a8,8,0,0,0,11.31,11.32L215.6,119.6a56,56,0,0,0,0-79.2ZM138.34,174.22l-30.06,30.06a40,40,0,1,1-56.56-56.57l30.05-30.05a8,8,0,0,0-11.32-11.32L40.4,136.4a56,56,0,0,0,79.2,79.2l30.06-30.07a8,8,0,0,0-11.32-11.31Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M208,32H48A16,16,0,0,0,32,48V208a16,16,0,0,0,16,16H208a16,16,0,0,0,16-16V48A16,16,0,0,0,208,32ZM144.56,173.66l-21.45,21.45a44,44,0,0,1-62.22-62.22l21.45-21.46a8,8,0,0,1,11.32,11.31L72.2,144.2a28,28,0,0,0,39.6,39.6l21.45-21.46a8,8,0,0,1,11.31,11.32Zm-34.9-16a8,8,0,0,1-11.32-11.32l48-48a8,8,0,0,1,11.32,11.32Zm85.45-34.55-21.45,21.45a8,8,0,0,1-11.32-11.31L183.8,111.8a28,28,0,0,0-39.6-39.6L122.74,93.66a8,8,0,0,1-11.31-11.32l21.46-21.45a44,44,0,0,1,62.22,62.22Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M164.25,91.75a6,6,0,0,1,0,8.49l-64,64a6,6,0,0,1-8.49-8.48l64-64A6,6,0,0,1,164.25,91.75ZM214.2,41.8a54.07,54.07,0,0,0-76.38,0L107.75,71.85a6,6,0,0,0,8.49,8.49l30.07-30.06a42,42,0,0,1,59.41,59.41l-30.08,30.07a6,6,0,1,0,8.49,8.49l30.07-30.07A54,54,0,0,0,214.2,41.8ZM139.76,175.64l-30.07,30.08a42,42,0,0,1-59.41-59.41l30.06-30.07a6,6,0,0,0-8.49-8.49l-30,30.07a54,54,0,0,0,76.38,76.39l30.07-30.08a6,6,0,0,0-8.49-8.49Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M165.66,90.34a8,8,0,0,1,0,11.32l-64,64a8,8,0,0,1-11.32-11.32l64-64A8,8,0,0,1,165.66,90.34ZM215.6,40.4a56,56,0,0,0-79.2,0L106.34,70.45a8,8,0,0,0,11.32,11.32l30.06-30a40,40,0,0,1,56.57,56.56l-30.07,30.06a8,8,0,0,0,11.31,11.32L215.6,119.6a56,56,0,0,0,0-79.2ZM138.34,174.22l-30.06,30.06a40,40,0,1,1-56.56-56.57l30.05-30.05a8,8,0,0,0-11.32-11.32L40.4,136.4a56,56,0,0,0,79.2,79.2l30.06-30.07a8,8,0,0,0-11.32-11.31Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M162.84,93.16a4,4,0,0,1,0,5.66l-64,64a4,4,0,0,1-5.66-5.66l64-64A4,4,0,0,1,162.84,93.16Zm49.95-49.95a52.07,52.07,0,0,0-73.56,0L109.17,73.27a4,4,0,0,0,5.65,5.66l30.07-30.06a44,44,0,0,1,62.24,62.24l-30.07,30.06a4,4,0,0,0,5.66,5.66l30.07-30.06A52.07,52.07,0,0,0,212.79,43.21ZM141.17,177.06l-30.06,30.07a44,44,0,0,1-62.24-62.24l30.06-30.06a4,4,0,0,0-5.66-5.66L43.21,139.23a52,52,0,0,0,73.56,73.56l30.06-30.07a4,4,0,1,0-5.66-5.66Z" }))
  ]
]), Am = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M76,64A12,12,0,0,1,88,52H216a12,12,0,0,1,0,24H88A12,12,0,0,1,76,64Zm140,52H88a12,12,0,0,0,0,24H216a12,12,0,0,0,0-24Zm0,64H88a12,12,0,0,0,0,24H216a12,12,0,0,0,0-24ZM44,112a16,16,0,1,0,16,16A16,16,0,0,0,44,112Zm0-64A16,16,0,1,0,60,64,16,16,0,0,0,44,48Zm0,128a16,16,0,1,0,16,16A16,16,0,0,0,44,176Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M216,64V192H44V64Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M80,64a8,8,0,0,1,8-8H216a8,8,0,0,1,0,16H88A8,8,0,0,1,80,64Zm136,56H88a8,8,0,1,0,0,16H216a8,8,0,0,0,0-16Zm0,64H88a8,8,0,1,0,0,16H216a8,8,0,0,0,0-16ZM44,52A12,12,0,1,0,56,64,12,12,0,0,0,44,52Zm0,64a12,12,0,1,0,12,12A12,12,0,0,0,44,116Zm0,64a12,12,0,1,0,12,12A12,12,0,0,0,44,180Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M56,128a16,16,0,1,1-16-16A16,16,0,0,1,56,128ZM40,48A16,16,0,1,0,56,64,16,16,0,0,0,40,48Zm0,128a16,16,0,1,0,16,16A16,16,0,0,0,40,176Zm176-64H88a8,8,0,0,0-8,8v16a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8V120A8,8,0,0,0,216,112Zm0-64H88a8,8,0,0,0-8,8V72a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8V56A8,8,0,0,0,216,48Zm0,128H88a8,8,0,0,0-8,8v16a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8V184A8,8,0,0,0,216,176Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M82,64a6,6,0,0,1,6-6H216a6,6,0,0,1,0,12H88A6,6,0,0,1,82,64Zm134,58H88a6,6,0,0,0,0,12H216a6,6,0,0,0,0-12Zm0,64H88a6,6,0,0,0,0,12H216a6,6,0,0,0,0-12ZM44,54A10,10,0,1,0,54,64,10,10,0,0,0,44,54Zm0,128a10,10,0,1,0,10,10A10,10,0,0,0,44,182Zm0-64a10,10,0,1,0,10,10A10,10,0,0,0,44,118Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M80,64a8,8,0,0,1,8-8H216a8,8,0,0,1,0,16H88A8,8,0,0,1,80,64Zm136,56H88a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Zm0,64H88a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16ZM44,52A12,12,0,1,0,56,64,12,12,0,0,0,44,52Zm0,64a12,12,0,1,0,12,12A12,12,0,0,0,44,116Zm0,64a12,12,0,1,0,12,12A12,12,0,0,0,44,180Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M84,64a4,4,0,0,1,4-4H216a4,4,0,0,1,0,8H88A4,4,0,0,1,84,64Zm132,60H88a4,4,0,0,0,0,8H216a4,4,0,0,0,0-8Zm0,64H88a4,4,0,0,0,0,8H216a4,4,0,0,0,0-8ZM44,120a8,8,0,1,0,8,8A8,8,0,0,0,44,120Zm0-64a8,8,0,1,0,8,8A8,8,0,0,0,44,56Zm0,128a8,8,0,1,0,8,8A8,8,0,0,0,44,184Z" }))
  ]
]), Om = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M228,128a12,12,0,0,1-12,12H116a12,12,0,0,1,0-24H216A12,12,0,0,1,228,128ZM116,76H216a12,12,0,0,0,0-24H116a12,12,0,0,0,0,24ZM216,180H116a12,12,0,0,0,0,24H216a12,12,0,0,0,0-24ZM44,59.31V104a12,12,0,0,0,24,0V40A12,12,0,0,0,50.64,29.27l-16,8a12,12,0,0,0,9.36,22Zm39.73,96.86a27.7,27.7,0,0,0-11.2-18.63A28.89,28.89,0,0,0,32.9,143a27.71,27.71,0,0,0-4.17,7.54,12,12,0,0,0,22.55,8.21,4,4,0,0,1,.58-1,4.78,4.78,0,0,1,6.5-.82,3.82,3.82,0,0,1,1.61,2.6,3.63,3.63,0,0,1-.77,2.77l-.13.17L30.39,200.82A12,12,0,0,0,40,220H72a12,12,0,0,0,0-24H64l14.28-19.11A27.48,27.48,0,0,0,83.73,156.17Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M216,64V192H104V64Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M224,128a8,8,0,0,1-8,8H104a8,8,0,0,1,0-16H216A8,8,0,0,1,224,128ZM104,72H216a8,8,0,0,0,0-16H104a8,8,0,0,0,0,16ZM216,184H104a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16ZM43.58,55.16,48,52.94V104a8,8,0,0,0,16,0V40a8,8,0,0,0-11.58-7.16l-16,8a8,8,0,0,0,7.16,14.32ZM79.77,156.72a23.73,23.73,0,0,0-9.6-15.95,24.86,24.86,0,0,0-34.11,4.7,23.63,23.63,0,0,0-3.57,6.46,8,8,0,1,0,15,5.47,7.84,7.84,0,0,1,1.18-2.13,8.76,8.76,0,0,1,12-1.59A7.91,7.91,0,0,1,63.93,159a7.64,7.64,0,0,1-1.57,5.78,1,1,0,0,0-.08.11L33.59,203.21A8,8,0,0,0,40,216H72a8,8,0,0,0,0-16H56l19.08-25.53A23.47,23.47,0,0,0,79.77,156.72Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M224,120v16a8,8,0,0,1-8,8H104a8,8,0,0,1-8-8V120a8,8,0,0,1,8-8H216A8,8,0,0,1,224,120Zm-8-72H104a8,8,0,0,0-8,8V72a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8V56A8,8,0,0,0,216,48Zm0,128H104a8,8,0,0,0-8,8v16a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8V184A8,8,0,0,0,216,176ZM43.58,55.16,48,52.94V104a8,8,0,0,0,16,0V40a8,8,0,0,0-11.58-7.16l-16,8a8,8,0,0,0,7.16,14.32ZM79.77,156.72a23.73,23.73,0,0,0-9.6-15.95,24.86,24.86,0,0,0-34.11,4.7,23.63,23.63,0,0,0-3.57,6.46,8,8,0,1,0,15,5.47,7.84,7.84,0,0,1,1.18-2.13,8.76,8.76,0,0,1,12-1.59A7.91,7.91,0,0,1,63.93,159a7.64,7.64,0,0,1-1.57,5.78,1,1,0,0,0-.08.11L33.59,203.21A8,8,0,0,0,40,216H72a8,8,0,0,0,0-16H56l19.08-25.53A23.47,23.47,0,0,0,79.77,156.72Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M222,128a6,6,0,0,1-6,6H104a6,6,0,0,1,0-12H216A6,6,0,0,1,222,128ZM104,70H216a6,6,0,0,0,0-12H104a6,6,0,0,0,0,12ZM216,186H104a6,6,0,0,0,0,12H216a6,6,0,0,0,0-12ZM42.68,53.37,50,49.71V104a6,6,0,0,0,12,0V40a6,6,0,0,0-8.68-5.37l-16,8a6,6,0,0,0,5.36,10.74ZM72,202H52l21.48-28.74A21.5,21.5,0,0,0,77.79,157,21.75,21.75,0,0,0,69,142.38a22.86,22.86,0,0,0-31.35,4.31,22.18,22.18,0,0,0-3.28,5.92,6,6,0,0,0,11.28,4.11,9.87,9.87,0,0,1,1.48-2.67,10.78,10.78,0,0,1,14.78-2,9.89,9.89,0,0,1,4,6.61,9.64,9.64,0,0,1-2,7.28l-.06.09L35.2,204.41A6,6,0,0,0,40,214H72a6,6,0,0,0,0-12Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M224,128a8,8,0,0,1-8,8H104a8,8,0,0,1,0-16H216A8,8,0,0,1,224,128ZM104,72H216a8,8,0,0,0,0-16H104a8,8,0,0,0,0,16ZM216,184H104a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16ZM43.58,55.16,48,52.94V104a8,8,0,0,0,16,0V40a8,8,0,0,0-11.58-7.16l-16,8a8,8,0,0,0,7.16,14.32ZM79.77,156.72a23.73,23.73,0,0,0-9.6-15.95,24.86,24.86,0,0,0-34.11,4.7,23.63,23.63,0,0,0-3.57,6.46,8,8,0,1,0,15,5.47,7.84,7.84,0,0,1,1.18-2.13,8.76,8.76,0,0,1,12-1.59A7.91,7.91,0,0,1,63.93,159a7.64,7.64,0,0,1-1.57,5.78,1,1,0,0,0-.08.11L33.59,203.21A8,8,0,0,0,40,216H72a8,8,0,0,0,0-16H56l19.08-25.53A23.47,23.47,0,0,0,79.77,156.72Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M220,128a4,4,0,0,1-4,4H104a4,4,0,0,1,0-8H216A4,4,0,0,1,220,128ZM104,68H216a4,4,0,0,0,0-8H104a4,4,0,0,0,0,8ZM216,188H104a4,4,0,0,0,0,8H216a4,4,0,0,0,0-8ZM41.79,51.58,52,46.47V104a4,4,0,0,0,8,0V40a4,4,0,0,0-5.79-3.58l-16,8a4,4,0,1,0,3.58,7.16ZM72,204H48l23.85-31.92a19.54,19.54,0,0,0,4-14.8,19.76,19.76,0,0,0-8-13.28,20.84,20.84,0,0,0-28.59,3.92,19.85,19.85,0,0,0-3,5.38A4,4,0,0,0,43.76,156a12.1,12.1,0,0,1,1.78-3.22,12.78,12.78,0,0,1,17.54-2.37,11.85,11.85,0,0,1,4.81,7.94,11.65,11.65,0,0,1-2.41,8.85L36.8,205.61A4,4,0,0,0,40,212H72a4,4,0,0,0,0-8Z" }))
  ]
]), Tm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M232.49,215.51,185,168a92.12,92.12,0,1,0-17,17l47.53,47.54a12,12,0,0,0,17-17ZM44,112a68,68,0,1,1,68,68A68.07,68.07,0,0,1,44,112Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M192,112a80,80,0,1,1-80-80A80,80,0,0,1,192,112Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M229.66,218.34,179.6,168.28a88.21,88.21,0,1,0-11.32,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M168,112a56,56,0,1,1-56-56A56,56,0,0,1,168,112Zm61.66,117.66a8,8,0,0,1-11.32,0l-50.06-50.07a88,88,0,1,1,11.32-11.31l50.06,50.06A8,8,0,0,1,229.66,229.66ZM112,184a72,72,0,1,0-72-72A72.08,72.08,0,0,0,112,184Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M228.24,219.76l-51.38-51.38a86.15,86.15,0,1,0-8.48,8.48l51.38,51.38a6,6,0,0,0,8.48-8.48ZM38,112a74,74,0,1,1,74,74A74.09,74.09,0,0,1,38,112Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M226.83,221.17l-52.7-52.7a84.1,84.1,0,1,0-5.66,5.66l52.7,52.7a4,4,0,0,0,5.66-5.66ZM36,112a76,76,0,1,1,76,76A76.08,76.08,0,0,1,36,112Z" }))
  ]
]), _m = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M228,128a12,12,0,0,1-12,12H40a12,12,0,0,1,0-24H216A12,12,0,0,1,228,128Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement(
      "path",
      {
        d: "M216,48V208a8,8,0,0,1-8,8H48a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H208A8,8,0,0,1,216,48Z",
        opacity: "0.2"
      }
    ), /* @__PURE__ */ u.createElement("path", { d: "M224,128a8,8,0,0,1-8,8H40a8,8,0,0,1,0-16H216A8,8,0,0,1,224,128Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M208,32H48A16,16,0,0,0,32,48V208a16,16,0,0,0,16,16H208a16,16,0,0,0,16-16V48A16,16,0,0,0,208,32ZM184,136H72a8,8,0,0,1,0-16H184a8,8,0,0,1,0,16Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M222,128a6,6,0,0,1-6,6H40a6,6,0,0,1,0-12H216A6,6,0,0,1,222,128Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M224,128a8,8,0,0,1-8,8H40a8,8,0,0,1,0-16H216A8,8,0,0,1,224,128Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M220,128a4,4,0,0,1-4,4H40a4,4,0,0,1,0-8H216A4,4,0,0,1,220,128Z" }))
  ]
]), Dm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M208,36H96a68,68,0,0,0,0,136h36v36a12,12,0,0,0,24,0V60h16V208a12,12,0,0,0,24,0V60h12a12,12,0,0,0,0-24ZM132,148H96a44,44,0,0,1,0-88h36Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M144,48V160H96A56,56,0,0,1,96,48Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M208,40H96a64,64,0,0,0,0,128h40v40a8,8,0,0,0,16,0V56h24V208a8,8,0,0,0,16,0V56h16a8,8,0,0,0,0-16ZM136,152H96a48,48,0,0,1,0-96h40Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M216,48a8,8,0,0,1-8,8H192V208a8,8,0,0,1-16,0V56H152V208a8,8,0,0,1-16,0V168H96A64,64,0,0,1,96,40H208A8,8,0,0,1,216,48Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M208,42H96a62,62,0,0,0,0,124h42v42a6,6,0,0,0,12,0V54h28V208a6,6,0,0,0,12,0V54h18a6,6,0,0,0,0-12ZM138,154H96A50,50,0,0,1,96,54h42Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M208,40H96a64,64,0,0,0,0,128h40v40a8,8,0,0,0,16,0V56h24V208a8,8,0,0,0,16,0V56h16a8,8,0,0,0,0-16ZM136,152H96a48,48,0,0,1,0-96h40Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M208,44H96a60,60,0,0,0,0,120h44v44a4,4,0,0,0,8,0V52h32V208a4,4,0,0,0,8,0V52h20a4,4,0,0,0,0-8ZM140,156H96A52,52,0,0,1,96,52h44Z" }))
  ]
]), Hm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M58.89,178.86a12,12,0,0,0,16-5.75L90.44,140h75.12l15.58,33.11a12,12,0,0,0,21.72-10.22l-64-136a12,12,0,0,0-21.72,0l-64,136A12,12,0,0,0,58.89,178.86ZM128,60.18,154.27,116H101.73ZM228,216a12,12,0,0,1-12,12H40a12,12,0,0,1,0-24H216A12,12,0,0,1,228,216Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M173.18,128H82.82L128,32Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M60.59,175.24a8,8,0,0,0,10.65-3.83L87.9,136h80.2l16.66,35.41a8,8,0,1,0,14.48-6.82l-64-136a8,8,0,0,0-14.48,0l-64,136A8,8,0,0,0,60.59,175.24ZM128,50.79,160.57,120H95.43ZM224,216a8,8,0,0,1-8,8H40a8,8,0,0,1,0-16H216A8,8,0,0,1,224,216Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M148.73,120H107.27L128,75.09ZM216,32V224a8,8,0,0,1-8,8H48a8,8,0,0,1-8-8V32a8,8,0,0,1,8-8H208A8,8,0,0,1,216,32ZM76.65,167.26a8,8,0,0,0,10.61-3.91L99.89,136h56.22l12.63,27.35a8,8,0,0,0,14.52-6.7l-48-104a8,8,0,0,0-14.52,0l-48,104A8,8,0,0,0,76.65,167.26ZM200,192a8,8,0,0,0-8-8H64a8,8,0,0,0,0,16H192A8,8,0,0,0,200,192Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M61.45,173.43a6,6,0,0,0,8-2.88L86.63,134h82.74l17.2,36.55A6,6,0,0,0,192,174a5.92,5.92,0,0,0,2.55-.57,6,6,0,0,0,2.88-8l-64-136a6,6,0,0,0-10.86,0l-64,136A6,6,0,0,0,61.45,173.43ZM128,46.09,163.72,122H92.28ZM222,216a6,6,0,0,1-6,6H40a6,6,0,0,1,0-12H216A6,6,0,0,1,222,216Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M60.59,175.24a8,8,0,0,0,10.65-3.83L87.9,136h80.2l16.66,35.41a8,8,0,1,0,14.48-6.82l-64-136a8,8,0,0,0-14.48,0l-64,136A8,8,0,0,0,60.59,175.24ZM128,50.79,160.57,120H95.43ZM224,216a8,8,0,0,1-8,8H40a8,8,0,0,1,0-16H216A8,8,0,0,1,224,216Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M62.3,171.62a4,4,0,0,0,5.32-1.92L85.36,132h85.28l17.74,37.7a4,4,0,1,0,7.24-3.4l-64-136a4,4,0,0,0-7.24,0l-64,136A4,4,0,0,0,62.3,171.62ZM128,41.39,166.87,124H89.13ZM220,216a4,4,0,0,1-4,4H40a4,4,0,0,1,0-8H216A4,4,0,0,1,220,216Z" }))
  ]
]), Im = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M28,64A12,12,0,0,1,40,52H216a12,12,0,0,1,0,24H40A12,12,0,0,1,28,64ZM64,92a12,12,0,0,0,0,24H192a12,12,0,0,0,0-24Zm152,40H40a12,12,0,0,0,0,24H216a12,12,0,0,0,0-24Zm-24,40H64a12,12,0,0,0,0,24H192a12,12,0,0,0,0-24Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M216,64V176a8,8,0,0,1-8,8H48a8,8,0,0,1-8-8V64Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M32,64a8,8,0,0,1,8-8H216a8,8,0,0,1,0,16H40A8,8,0,0,1,32,64ZM64,96a8,8,0,0,0,0,16H192a8,8,0,0,0,0-16Zm152,40H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Zm-24,40H64a8,8,0,0,0,0,16H192a8,8,0,0,0,0-16Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M224,64v8a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V64a8,8,0,0,1,8-8H216A8,8,0,0,1,224,64Zm-32,56a8,8,0,0,0,8-8v-8a8,8,0,0,0-8-8H64a8,8,0,0,0-8,8v8a8,8,0,0,0,8,8Zm24,16H40a8,8,0,0,0-8,8v8a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8v-8A8,8,0,0,0,216,136Zm-24,40H64a8,8,0,0,0-8,8v8a8,8,0,0,0,8,8H192a8,8,0,0,0,8-8v-8A8,8,0,0,0,192,176Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M34,64a6,6,0,0,1,6-6H216a6,6,0,0,1,0,12H40A6,6,0,0,1,34,64ZM64,98a6,6,0,0,0,0,12H192a6,6,0,0,0,0-12Zm152,40H40a6,6,0,0,0,0,12H216a6,6,0,0,0,0-12Zm-24,40H64a6,6,0,0,0,0,12H192a6,6,0,0,0,0-12Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M32,64a8,8,0,0,1,8-8H216a8,8,0,0,1,0,16H40A8,8,0,0,1,32,64ZM64,96a8,8,0,0,0,0,16H192a8,8,0,0,0,0-16Zm152,40H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Zm-24,40H64a8,8,0,0,0,0,16H192a8,8,0,0,0,0-16Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M36,64a4,4,0,0,1,4-4H216a4,4,0,0,1,0,8H40A4,4,0,0,1,36,64Zm28,36a4,4,0,0,0,0,8H192a4,4,0,0,0,0-8Zm152,40H40a4,4,0,0,0,0,8H216a4,4,0,0,0,0-8Zm-24,40H64a4,4,0,0,0,0,8H192a4,4,0,0,0,0-8Z" }))
  ]
]), Pm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M28,64A12,12,0,0,1,40,52H216a12,12,0,0,1,0,24H40A12,12,0,0,1,28,64ZM216,92H40a12,12,0,0,0,0,24H216a12,12,0,0,0,0-24Zm0,40H40a12,12,0,0,0,0,24H216a12,12,0,0,0,0-24Zm0,40H40a12,12,0,0,0,0,24H216a12,12,0,0,0,0-24Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M216,64V184H40V64Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M32,64a8,8,0,0,1,8-8H216a8,8,0,0,1,0,16H40A8,8,0,0,1,32,64ZM216,96H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Zm0,40H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Zm0,40H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M224,64v8a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V64a8,8,0,0,1,8-8H216A8,8,0,0,1,224,64Zm-8,32H40a8,8,0,0,0-8,8v8a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8v-8A8,8,0,0,0,216,96Zm0,40H40a8,8,0,0,0-8,8v8a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8v-8A8,8,0,0,0,216,136Zm0,40H40a8,8,0,0,0-8,8v8a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8v-8A8,8,0,0,0,216,176Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M34,64a6,6,0,0,1,6-6H216a6,6,0,0,1,0,12H40A6,6,0,0,1,34,64ZM216,98H40a6,6,0,0,0,0,12H216a6,6,0,0,0,0-12Zm0,40H40a6,6,0,0,0,0,12H216a6,6,0,0,0,0-12Zm0,40H40a6,6,0,0,0,0,12H216a6,6,0,0,0,0-12Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M32,64a8,8,0,0,1,8-8H216a8,8,0,0,1,0,16H40A8,8,0,0,1,32,64ZM216,96H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Zm0,40H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Zm0,40H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M36,64a4,4,0,0,1,4-4H216a4,4,0,0,1,0,8H40A4,4,0,0,1,36,64Zm180,36H40a4,4,0,0,0,0,8H216a4,4,0,0,0,0-8Zm0,40H40a4,4,0,0,0,0,8H216a4,4,0,0,0,0-8Zm0,40H40a4,4,0,0,0,0,8H216a4,4,0,0,0,0-8Z" }))
  ]
]), Lm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M28,64A12,12,0,0,1,40,52H216a12,12,0,0,1,0,24H40A12,12,0,0,1,28,64Zm12,52H168a12,12,0,0,0,0-24H40a12,12,0,0,0,0,24Zm176,16H40a12,12,0,0,0,0,24H216a12,12,0,0,0,0-24Zm-48,40H40a12,12,0,0,0,0,24H168a12,12,0,0,0,0-24Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M216,64V176a8,8,0,0,1-8,8H40V64Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M32,64a8,8,0,0,1,8-8H216a8,8,0,0,1,0,16H40A8,8,0,0,1,32,64Zm8,48H168a8,8,0,0,0,0-16H40a8,8,0,0,0,0,16Zm176,24H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Zm-48,40H40a8,8,0,0,0,0,16H168a8,8,0,0,0,0-16Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M224,64v8a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V64a8,8,0,0,1,8-8H216A8,8,0,0,1,224,64ZM40,120H168a8,8,0,0,0,8-8v-8a8,8,0,0,0-8-8H40a8,8,0,0,0-8,8v8A8,8,0,0,0,40,120Zm176,16H40a8,8,0,0,0-8,8v8a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8v-8A8,8,0,0,0,216,136Zm-48,40H40a8,8,0,0,0-8,8v8a8,8,0,0,0,8,8H168a8,8,0,0,0,8-8v-8A8,8,0,0,0,168,176Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M34,64a6,6,0,0,1,6-6H216a6,6,0,0,1,0,12H40A6,6,0,0,1,34,64Zm6,46H168a6,6,0,0,0,0-12H40a6,6,0,0,0,0,12Zm176,28H40a6,6,0,0,0,0,12H216a6,6,0,0,0,0-12Zm-48,40H40a6,6,0,0,0,0,12H168a6,6,0,0,0,0-12Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M32,64a8,8,0,0,1,8-8H216a8,8,0,0,1,0,16H40A8,8,0,0,1,32,64Zm8,48H168a8,8,0,0,0,0-16H40a8,8,0,0,0,0,16Zm176,24H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Zm-48,40H40a8,8,0,0,0,0,16H168a8,8,0,0,0,0-16Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M36,64a4,4,0,0,1,4-4H216a4,4,0,0,1,0,8H40A4,4,0,0,1,36,64Zm4,44H168a4,4,0,0,0,0-8H40a4,4,0,0,0,0,8Zm176,32H40a4,4,0,0,0,0,8H216a4,4,0,0,0,0-8Zm-48,40H40a4,4,0,0,0,0,8H168a4,4,0,0,0,0-8Z" }))
  ]
]), Zm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M28,64A12,12,0,0,1,40,52H216a12,12,0,0,1,0,24H40A12,12,0,0,1,28,64ZM216,92H88a12,12,0,0,0,0,24H216a12,12,0,0,0,0-24Zm0,40H40a12,12,0,0,0,0,24H216a12,12,0,0,0,0-24Zm0,40H88a12,12,0,0,0,0,24H216a12,12,0,0,0,0-24Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M216,64V184H48a8,8,0,0,1-8-8V64Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M32,64a8,8,0,0,1,8-8H216a8,8,0,0,1,0,16H40A8,8,0,0,1,32,64ZM216,96H88a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Zm0,40H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Zm0,40H88a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M224,64v8a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V64a8,8,0,0,1,8-8H216A8,8,0,0,1,224,64Zm-8,32H88a8,8,0,0,0-8,8v8a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8v-8A8,8,0,0,0,216,96Zm0,40H40a8,8,0,0,0-8,8v8a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8v-8A8,8,0,0,0,216,136Zm0,40H88a8,8,0,0,0-8,8v8a8,8,0,0,0,8,8H216a8,8,0,0,0,8-8v-8A8,8,0,0,0,216,176Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M34,64a6,6,0,0,1,6-6H216a6,6,0,0,1,0,12H40A6,6,0,0,1,34,64ZM216,98H88a6,6,0,0,0,0,12H216a6,6,0,0,0,0-12Zm0,40H40a6,6,0,0,0,0,12H216a6,6,0,0,0,0-12Zm0,40H88a6,6,0,0,0,0,12H216a6,6,0,0,0,0-12Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M32,64a8,8,0,0,1,8-8H216a8,8,0,0,1,0,16H40A8,8,0,0,1,32,64ZM216,96H88a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Zm0,40H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Zm0,40H88a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M36,64a4,4,0,0,1,4-4H216a4,4,0,0,1,0,8H40A4,4,0,0,1,36,64Zm180,36H88a4,4,0,0,0,0,8H216a4,4,0,0,0,0-8Zm0,40H40a4,4,0,0,0,0,8H216a4,4,0,0,0,0-8Zm0,40H88a4,4,0,0,0,0,8H216a4,4,0,0,0,0-8Z" }))
  ]
]), $m = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M177.08,114.46A48,48,0,0,0,140,36H72A12,12,0,0,0,60,48V200a12,12,0,0,0,12,12h80a52,52,0,0,0,25.08-97.54ZM84,60h56a24,24,0,0,1,0,48H84Zm68,128H84V132h68a28,28,0,0,1,0,56Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement(
      "path",
      {
        d: "M192,160a40,40,0,0,1-40,40H72V48h68a36,36,0,0,1,0,72h12A40,40,0,0,1,192,160Z",
        opacity: "0.2"
      }
    ), /* @__PURE__ */ u.createElement("path", { d: "M170.48,115.7A44,44,0,0,0,140,40H72a8,8,0,0,0-8,8V200a8,8,0,0,0,8,8h80a48,48,0,0,0,18.48-92.3ZM80,56h60a28,28,0,0,1,0,56H80Zm72,136H80V128h72a32,32,0,0,1,0,64Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M168,156a20,20,0,0,1-20,20H96V136h52A20,20,0,0,1,168,156ZM224,48V208a16,16,0,0,1-16,16H48a16,16,0,0,1-16-16V48A16,16,0,0,1,48,32H208A16,16,0,0,1,224,48ZM184,156a36,36,0,0,0-18-31.15A36,36,0,0,0,140,64H88a8,8,0,0,0-8,8V184a8,8,0,0,0,8,8h60A36,36,0,0,0,184,156Zm-24-56a20,20,0,0,0-20-20H96v40h44A20,20,0,0,0,160,100Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M166.69,116.41A42,42,0,0,0,140,42H72a6,6,0,0,0-6,6V200a6,6,0,0,0,6,6h80a46,46,0,0,0,14.69-89.59ZM78,54h62a30,30,0,0,1,0,60H78Zm74,140H78V126h74a34,34,0,0,1,0,68Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M170.48,115.7A44,44,0,0,0,140,40H72a8,8,0,0,0-8,8V200a8,8,0,0,0,8,8h80a48,48,0,0,0,18.48-92.3ZM80,56h60a28,28,0,0,1,0,56H80Zm72,136H80V128h72a32,32,0,0,1,0,64Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M162.27,117.21A40,40,0,0,0,140,44H72a4,4,0,0,0-4,4V200a4,4,0,0,0,4,4h80a44,44,0,0,0,10.27-86.79ZM76,52h64a32,32,0,0,1,0,64H76Zm76,144H76V124h76a36,36,0,0,1,0,72Z" }))
  ]
]), Vm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M236,112v96a12,12,0,0,1-24,0V134.42L206.66,138a12,12,0,0,1-13.32-20l24-16A12,12,0,0,1,236,112ZM144,44a12,12,0,0,0-12,12v48H52V56a12,12,0,0,0-24,0V176a12,12,0,0,0,24,0V128h80v48a12,12,0,0,0,24,0V56A12,12,0,0,0,144,44Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement(
      "path",
      {
        d: "M224,64V208H48a8,8,0,0,1-8-8V56H216A8,8,0,0,1,224,64Z",
        opacity: "0.2"
      }
    ), /* @__PURE__ */ u.createElement("path", { d: "M152,56V176a8,8,0,0,1-16,0V124H48v52a8,8,0,0,1-16,0V56a8,8,0,0,1,16,0v52h88V56a8,8,0,0,1,16,0Zm75.77,49a8,8,0,0,0-8.21.39l-24,16a8,8,0,1,0,8.88,13.32L216,127V208a8,8,0,0,0,16,0V112A8,8,0,0,0,227.77,105Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M208,32H48A16,16,0,0,0,32,48V208a16,16,0,0,0,16,16H208a16,16,0,0,0,16-16V48A16,16,0,0,0,208,32ZM144,160a8,8,0,0,1-16,0V128H72v32a8,8,0,0,1-16,0V80a8,8,0,0,1,16,0v32h56V80a8,8,0,0,1,16,0Zm56,16a8,8,0,0,1-16,0V111l-11.56,7.71a8,8,0,1,1-8.88-13.32l24-16A8,8,0,0,1,200,96Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M230,112v96a6,6,0,0,1-12,0V123.21L203.33,133a6,6,0,0,1-6.66-10l24-16a6,6,0,0,1,9.33,5ZM144,50a6,6,0,0,0-6,6v54H46V56a6,6,0,0,0-12,0V176a6,6,0,0,0,12,0V122h92v54a6,6,0,0,0,12,0V56A6,6,0,0,0,144,50Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M152,56V176a8,8,0,0,1-16,0V124H48v52a8,8,0,0,1-16,0V56a8,8,0,0,1,16,0v52h88V56a8,8,0,0,1,16,0Zm75.77,49a8,8,0,0,0-8.21.39l-24,16a8,8,0,1,0,8.88,13.32L216,127V208a8,8,0,0,0,16,0V112A8,8,0,0,0,227.77,105Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M228,112v96a4,4,0,0,1-8,0V119.47l-17.78,11.86a4,4,0,1,1-4.44-6.66l24-16A4,4,0,0,1,228,112ZM144,52a4,4,0,0,0-4,4v56H44V56a4,4,0,0,0-8,0V176a4,4,0,0,0,8,0V120h96v56a4,4,0,0,0,8,0V56A4,4,0,0,0,144,52Z" }))
  ]
]), zm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M252,180a40,40,0,0,1-68.57,28,12,12,0,1,1,17.14-16.79A16,16,0,1,0,212,164a12,12,0,0,1-9.83-18.88L217,124H192a12,12,0,0,1,0-24h48a12,12,0,0,1,9.83,18.88l-18.34,26.2A40,40,0,0,1,252,180ZM144,44a12,12,0,0,0-12,12v48H52V56a12,12,0,0,0-24,0V176a12,12,0,0,0,24,0V128h80v48a12,12,0,0,0,24,0V56A12,12,0,0,0,144,44Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement(
      "path",
      {
        d: "M240,64V200a8,8,0,0,1-8,8H48a8,8,0,0,1-8-8V56H232A8,8,0,0,1,240,64Z",
        opacity: "0.2"
      }
    ), /* @__PURE__ */ u.createElement("path", { d: "M152,56V176a8,8,0,0,1-16,0V124H48v52a8,8,0,0,1-16,0V56a8,8,0,0,1,16,0v52h88V56a8,8,0,0,1,16,0Zm73.52,90.63,21-30A8,8,0,0,0,240,104H192a8,8,0,0,0,0,16h32.63l-19.18,27.41A8,8,0,0,0,212,160a20,20,0,1,1-14.29,34,8,8,0,1,0-11.42,11.19A36,36,0,0,0,248,180,36.07,36.07,0,0,0,225.52,146.63Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M208,32H48A16,16,0,0,0,32,48V208a16,16,0,0,0,16,16H208a16,16,0,0,0,16-16V48A16,16,0,0,0,208,32ZM128,160a8,8,0,0,1-16,0V128H72v32a8,8,0,0,1-16,0V80a8,8,0,0,1,16,0v32h40V80a8,8,0,0,1,16,0Zm40,24a32,32,0,0,1-21.34-8.15,8,8,0,1,1,10.68-11.92A16,16,0,1,0,168,136a8,8,0,0,1-6.4-12.8L176,104H152a8,8,0,0,1,0-16h40a8,8,0,0,1,6.4,12.8l-16.71,22.28A32,32,0,0,1,168,184Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M246,180a34,34,0,0,1-58.29,23.79,6,6,0,0,1,8.58-8.39A22,22,0,1,0,212,158a6,6,0,0,1-4.92-9.44L228.48,118H192a6,6,0,0,1,0-12h48a6,6,0,0,1,4.91,9.44l-22.52,32.18A34.06,34.06,0,0,1,246,180ZM144,50a6,6,0,0,0-6,6v54H46V56a6,6,0,0,0-12,0V176a6,6,0,0,0,12,0V122h92v54a6,6,0,0,0,12,0V56A6,6,0,0,0,144,50Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M152,56V176a8,8,0,0,1-16,0V124H48v52a8,8,0,0,1-16,0V56a8,8,0,0,1,16,0v52h88V56a8,8,0,0,1,16,0Zm73.52,90.63,21-30A8,8,0,0,0,240,104H192a8,8,0,0,0,0,16h32.63l-19.18,27.41A8,8,0,0,0,212,160a20,20,0,1,1-14.29,34,8,8,0,1,0-11.42,11.19A36,36,0,0,0,248,180,36.07,36.07,0,0,0,225.52,146.63Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M244,180a32,32,0,0,1-54.86,22.4,4,4,0,0,1,5.72-5.6A24,24,0,1,0,212,156a4,4,0,0,1-3.28-6.29L232.32,116H192a4,4,0,0,1,0-8h48a4,4,0,0,1,3.28,6.29L219.12,148.8A32.06,32.06,0,0,1,244,180ZM144,52a4,4,0,0,0-4,4v56H44V56a4,4,0,0,0-8,0V176a4,4,0,0,0,8,0V120h96v56a4,4,0,0,0,8,0V56A4,4,0,0,0,144,52Z" }))
  ]
]), Fm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M156,56V176a12,12,0,0,1-24,0V128H52v48a12,12,0,0,1-24,0V56a12,12,0,0,1,24,0v48h80V56a12,12,0,0,1,24,0Zm84,140H216l28.74-38.33A36,36,0,1,0,182.05,124a12,12,0,0,0,22.63,8,11.67,11.67,0,0,1,1.73-3.22,12,12,0,1,1,19.15,14.46L182.4,200.8A12,12,0,0,0,192,220h48a12,12,0,0,0,0-24Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement(
      "path",
      {
        d: "M240,64V208H48a8,8,0,0,1-8-8V56H232A8,8,0,0,1,240,64Z",
        opacity: "0.2"
      }
    ), /* @__PURE__ */ u.createElement("path", { d: "M248,208a8,8,0,0,1-8,8H192a8,8,0,0,1-6.4-12.8l43.16-57.56a16,16,0,1,0-25.54-19.27,16.28,16.28,0,0,0-2.32,4.3,8,8,0,1,1-15.08-5.34,32,32,0,1,1,55.73,29.93L208,200h32A8,8,0,0,1,248,208ZM144,48a8,8,0,0,0-8,8v52H48V56a8,8,0,0,0-16,0V176a8,8,0,0,0,16,0V124h88v52a8,8,0,0,0,16,0V56A8,8,0,0,0,144,48Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M208,32H48A16,16,0,0,0,32,48V208a16,16,0,0,0,16,16H208a16,16,0,0,0,16-16V48A16,16,0,0,0,208,32ZM128,160a8,8,0,0,1-16,0V128H72v32a8,8,0,0,1-16,0V80a8,8,0,0,1,16,0v32h40V80a8,8,0,0,1,16,0Zm64,24H152a8,8,0,0,1-6.4-12.8l36-48a12,12,0,1,0-19.15-14.46,13.06,13.06,0,0,0-2.58,4.81,8,8,0,1,1-15.68-3.18,28.17,28.17,0,1,1,50.2,22.44L168,168h24a8,8,0,0,1,0,16Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M150,56V176a6,6,0,0,1-12,0V122H46v54a6,6,0,0,1-12,0V56a6,6,0,0,1,12,0v54h92V56a6,6,0,0,1,12,0Zm90,146H204L240,154.05A30,30,0,1,0,187.71,126,6,6,0,1,0,199,130a18,18,0,0,1,14.47-11.82,18,18,0,0,1,16.87,28.66L187.2,204.4A6,6,0,0,0,192,214h48a6,6,0,0,0,0-12Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M152,56V176a8,8,0,0,1-16,0V124H48v52a8,8,0,0,1-16,0V56a8,8,0,0,1,16,0v52h88V56a8,8,0,0,1,16,0Zm88,144H208l33.55-44.74a32,32,0,1,0-55.73-29.93,8,8,0,1,0,15.08,5.34,16.28,16.28,0,0,1,2.32-4.3,16,16,0,1,1,25.54,19.27L185.6,203.2A8,8,0,0,0,192,216h48a8,8,0,0,0,0-16Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M148,56V176a4,4,0,0,1-8,0V120H44v56a4,4,0,0,1-8,0V56a4,4,0,0,1,8,0v56h96V56a4,4,0,0,1,8,0Zm92,148H200l38.36-51.15a28,28,0,1,0-48.77-26.18,4,4,0,1,0,7.54,2.66A20.36,20.36,0,0,1,200,124,20,20,0,0,1,232,148L188.8,205.6A4,4,0,0,0,192,212h48a4,4,0,0,0,0-8Z" }))
  ]
]), jm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M228,128a12,12,0,0,1-12,12H120a12,12,0,0,1,0-24h96A12,12,0,0,1,228,128ZM120,76h96a12,12,0,0,0,0-24H120a12,12,0,0,0,0,24Zm96,104H40a12,12,0,0,0,0,24H216a12,12,0,0,0,0-24ZM31.51,144.49a12,12,0,0,0,17,0l40-40a12,12,0,0,0,0-17l-40-40a12,12,0,0,0-17,17L63,96,31.51,127.51A12,12,0,0,0,31.51,144.49Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M80,96,40,136V56Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M224,128a8,8,0,0,1-8,8H112a8,8,0,0,1,0-16H216A8,8,0,0,1,224,128ZM112,72H216a8,8,0,0,0,0-16H112a8,8,0,0,0,0,16ZM216,184H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16ZM32,136V56a8,8,0,0,1,13.66-5.66l40,40a8,8,0,0,1,0,11.32l-40,40A8,8,0,0,1,32,136Zm16-19.31L68.69,96,48,75.31Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M224,128a8,8,0,0,1-8,8H112a8,8,0,0,1,0-16H216A8,8,0,0,1,224,128ZM112,72H216a8,8,0,0,0,0-16H112a8,8,0,0,0,0,16ZM216,184H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16ZM36.94,143.39a8,8,0,0,0,8.72-1.73l40-40a8,8,0,0,0,0-11.32l-40-40A8,8,0,0,0,32,56v80A8,8,0,0,0,36.94,143.39Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M222,128a6,6,0,0,1-6,6H112a6,6,0,0,1,0-12H216A6,6,0,0,1,222,128ZM112,70H216a6,6,0,0,0,0-12H112a6,6,0,0,0,0,12ZM216,186H40a6,6,0,0,0,0,12H216a6,6,0,0,0,0-12ZM35.76,140.24a6,6,0,0,0,8.48,0l40-40a6,6,0,0,0,0-8.48l-40-40a6,6,0,0,0-8.48,8.48L71.51,96,35.76,131.76A6,6,0,0,0,35.76,140.24Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M224,128a8,8,0,0,1-8,8H112a8,8,0,0,1,0-16H216A8,8,0,0,1,224,128ZM112,72H216a8,8,0,0,0,0-16H112a8,8,0,0,0,0,16ZM216,184H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16ZM34.34,141.66a8,8,0,0,0,11.32,0l40-40a8,8,0,0,0,0-11.32l-40-40A8,8,0,0,0,34.34,61.66L68.69,96,34.34,130.34A8,8,0,0,0,34.34,141.66Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M220,128a4,4,0,0,1-4,4H112a4,4,0,0,1,0-8H216A4,4,0,0,1,220,128ZM112,68H216a4,4,0,0,0,0-8H112a4,4,0,0,0,0,8ZM216,188H40a4,4,0,0,0,0,8H216a4,4,0,0,0,0-8ZM37.17,138.83a4,4,0,0,0,5.66,0l40-40a4,4,0,0,0,0-5.66l-40-40a4,4,0,0,0-5.66,5.66L74.34,96,37.17,133.17A4,4,0,0,0,37.17,138.83Z" }))
  ]
]), Um = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M204,56a12,12,0,0,1-12,12H160.65l-40,120H144a12,12,0,0,1,0,24H64a12,12,0,0,1,0-24H95.35l40-120H112a12,12,0,0,1,0-24h80A12,12,0,0,1,204,56Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M192,56,144,200H64L112,56Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M200,56a8,8,0,0,1-8,8H157.77L115.1,192H144a8,8,0,0,1,0,16H64a8,8,0,0,1,0-16H98.23L140.9,64H112a8,8,0,0,1,0-16h80A8,8,0,0,1,200,56Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M208,32H48A16,16,0,0,0,32,48V208a16,16,0,0,0,16,16H208a16,16,0,0,0,16-16V48A16,16,0,0,0,208,32ZM176,80H153.64l-34.29,96H136a8,8,0,0,1,0,16H80a8,8,0,0,1,0-16h22.36l34.29-96H120a8,8,0,0,1,0-16h56a8,8,0,0,1,0,16Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M198,56a6,6,0,0,1-6,6H156.32l-44,132H144a6,6,0,0,1,0,12H64a6,6,0,0,1,0-12H99.68l44-132H112a6,6,0,0,1,0-12h80A6,6,0,0,1,198,56Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M200,56a8,8,0,0,1-8,8H157.77L115.1,192H144a8,8,0,0,1,0,16H64a8,8,0,0,1,0-16H98.23L140.9,64H112a8,8,0,0,1,0-16h80A8,8,0,0,1,200,56Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M196,56a4,4,0,0,1-4,4H154.88L109.55,196H144a4,4,0,0,1,0,8H64a4,4,0,0,1,0-8h37.12L146.45,60H112a4,4,0,0,1,0-8h80A4,4,0,0,1,196,56Z" }))
  ]
]), Bm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M228,128a12,12,0,0,1-12,12H120a12,12,0,0,1,0-24h96A12,12,0,0,1,228,128ZM120,76h96a12,12,0,0,0,0-24H120a12,12,0,0,0,0,24Zm96,104H40a12,12,0,0,0,0,24H216a12,12,0,0,0,0-24ZM72,148a12,12,0,0,0,8.49-20.49L49,96,80.49,64.48a12,12,0,0,0-17-17l-40,40a12,12,0,0,0,0,17l40,40A12,12,0,0,0,72,148Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M72,56v80L32,96Z", opacity: "0.2" }), /* @__PURE__ */ u.createElement("path", { d: "M224,128a8,8,0,0,1-8,8H112a8,8,0,0,1,0-16H216A8,8,0,0,1,224,128ZM112,72H216a8,8,0,0,0,0-16H112a8,8,0,0,0,0,16ZM216,184H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16ZM66.34,141.66l-40-40a8,8,0,0,1,0-11.32l40-40A8,8,0,0,1,80,56v80a8,8,0,0,1-13.66,5.66ZM64,75.31,43.31,96,64,116.69Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M224,128a8,8,0,0,1-8,8H112a8,8,0,0,1,0-16H216A8,8,0,0,1,224,128ZM112,72H216a8,8,0,0,0,0-16H112a8,8,0,0,0,0,16ZM216,184H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16ZM72,144a8,8,0,0,0,8-8V56a8,8,0,0,0-13.66-5.66l-40,40a8,8,0,0,0,0,11.32l40,40A8,8,0,0,0,72,144Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M222,128a6,6,0,0,1-6,6H112a6,6,0,0,1,0-12H216A6,6,0,0,1,222,128ZM112,70H216a6,6,0,0,0,0-12H112a6,6,0,0,0,0,12ZM216,186H40a6,6,0,0,0,0,12H216a6,6,0,0,0,0-12ZM72,142a6,6,0,0,0,4.24-10.24L40.49,96,76.24,60.24a6,6,0,0,0-8.48-8.48l-40,40a6,6,0,0,0,0,8.48l40,40A6,6,0,0,0,72,142Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M224,128a8,8,0,0,1-8,8H112a8,8,0,0,1,0-16H216A8,8,0,0,1,224,128ZM112,72H216a8,8,0,0,0,0-16H112a8,8,0,0,0,0,16ZM216,184H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16ZM72,144a8,8,0,0,0,5.66-13.66L43.31,96,77.66,61.66A8,8,0,0,0,66.34,50.34l-40,40a8,8,0,0,0,0,11.32l40,40A8,8,0,0,0,72,144Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M220,128a4,4,0,0,1-4,4H112a4,4,0,0,1,0-8H216A4,4,0,0,1,220,128ZM112,68H216a4,4,0,0,0,0-8H112a4,4,0,0,0,0,8ZM216,188H40a4,4,0,0,0,0,8H216a4,4,0,0,0,0-8ZM72,140a4,4,0,0,0,2.83-6.83L37.66,96,74.83,58.83a4,4,0,0,0-5.66-5.66l-40,40a4,4,0,0,0,0,5.66l40,40A4,4,0,0,0,72,140Z" }))
  ]
]), Wm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M228,128a12,12,0,0,1-12,12H185.86A41.48,41.48,0,0,1,196,168c0,14.45-7.81,28.32-21.43,38.05C162,215.05,145.44,220,128,220s-34-4.95-46.57-13.95C67.81,196.32,60,182.45,60,168a12,12,0,0,1,24,0c0,15.18,20.15,28,44,28s44-12.82,44-28c0-12.76-9.3-20.18-35.35-28H40a12,12,0,0,1,0-24H216A12,12,0,0,1,228,128ZM75.11,100a12,12,0,0,0,12-12c0-16,17.58-28,40.89-28,17.36,0,31.37,6.65,37.48,17.78a12,12,0,0,0,21-11.56C176.13,47.3,154.25,36,128,36,91,36,63.11,58.35,63.11,88A12,12,0,0,0,75.11,100Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement(
      "path",
      {
        d: "M176,72l-55.31,51.05c-24-6.7-45.58-14.26-45.58-35,0-22.09,22-40,52.89-40C151.2,48,168.37,57.64,176,72Zm-55.31,51.05L72,168c0,22.09,25.07,40,56,40s56-17.91,56-40C184,138.43,150.52,131.4,120.69,123.05Z",
        opacity: "0.2"
      }
    ), /* @__PURE__ */ u.createElement("path", { d: "M224,128a8,8,0,0,1-8,8H175.93c9.19,7.11,16.07,17.2,16.07,32,0,13.34-7,25.7-19.75,34.79C160.33,211.31,144.61,216,128,216s-32.33-4.69-44.25-13.21C71,193.7,64,181.34,64,168a8,8,0,0,1,16,0c0,17.35,22,32,48,32s48-14.65,48-32c0-14.85-10.54-23.58-38.77-32H40a8,8,0,0,1,0-16H216A8,8,0,0,1,224,128ZM76.33,104a8,8,0,0,0,7.61-10.49A17.3,17.3,0,0,1,83.11,88c0-18.24,19.3-32,44.89-32,18.84,0,34.16,7.42,41,19.85a8,8,0,0,0,14-7.7C173.33,50.52,152.77,40,128,40,93.29,40,67.11,60.63,67.11,88a33.73,33.73,0,0,0,1.62,10.49A8,8,0,0,0,76.33,104Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M208,32H48A16,16,0,0,0,32,48V208a16,16,0,0,0,16,16H208a16,16,0,0,0,16-16V48A16,16,0,0,0,208,32ZM82.71,94.58C86,76.57,104.58,64,128,64c18.2,0,33.59,7.41,41.18,19.83a8,8,0,1,1-13.66,8.34C150.94,84.66,140.39,80,128,80c-15.3,0-27.73,7.33-29.55,17.42A8,8,0,0,1,90.59,104a7.76,7.76,0,0,1-1.43-.13A8,8,0,0,1,82.71,94.58ZM192,136H168.29A28.45,28.45,0,0,1,176,156c0,20.19-21.08,36-48,36-23.89,0-43.83-12.78-47.43-30.4a8,8,0,1,1,15.67-3.2c2,9.87,16,17.6,31.76,17.6,17.35,0,32-9.16,32-20,0-9.14-6.76-14.43-25.72-20H64a8,8,0,0,1,0-16H192a8,8,0,0,1,0,16Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M222,128a6,6,0,0,1-6,6H169.45c11.28,6.92,20.55,17.38,20.55,34,0,25.36-27.81,46-62,46s-62-20.64-62-46a6,6,0,0,1,12,0c0,18.75,22.43,34,50,34s50-15.25,50-34c0-18.23-15.46-26.59-40.47-34H40a6,6,0,0,1,0-12H216A6,6,0,0,1,222,128ZM76.33,102a6.2,6.2,0,0,0,1.88-.3A6,6,0,0,0,82,94.13,19.74,19.74,0,0,1,81.11,88c0-19.38,20.16-34,46.89-34,19.58,0,35.56,7.81,42.74,20.89a6,6,0,0,0,10.52-5.78C171.94,52.13,152,42,128,42,94.43,42,69.11,61.77,69.11,88a31.62,31.62,0,0,0,1.52,9.87A6,6,0,0,0,76.33,102Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M224,128a8,8,0,0,1-8,8H175.93c9.19,7.11,16.07,17.2,16.07,32,0,13.34-7,25.7-19.75,34.79C160.33,211.31,144.61,216,128,216s-32.33-4.69-44.25-13.21C71,193.7,64,181.34,64,168a8,8,0,0,1,16,0c0,17.35,22,32,48,32s48-14.65,48-32c0-14.85-10.54-23.58-38.77-32H40a8,8,0,0,1,0-16H216A8,8,0,0,1,224,128ZM76.33,104a8,8,0,0,0,7.61-10.49A17.3,17.3,0,0,1,83.11,88c0-18.24,19.3-32,44.89-32,18.84,0,34.16,7.42,41,19.85a8,8,0,0,0,14-7.7C173.33,50.52,152.77,40,128,40,93.29,40,67.11,60.63,67.11,88a33.73,33.73,0,0,0,1.62,10.49A8,8,0,0,0,76.33,104Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M220,128a4,4,0,0,1-4,4H161.16c15.45,7.24,26.84,17.8,26.84,36,0,24.26-26.92,44-60,44s-60-19.74-60-44a4,4,0,0,1,8,0c0,19.85,23.33,36,52,36s52-16.15,52-36c0-19.54-16.13-28.3-42.18-36H40a4,4,0,0,1,0-8H216A4,4,0,0,1,220,128ZM76.33,100a3.85,3.85,0,0,0,1.25-.2,4,4,0,0,0,2.55-5,21.9,21.9,0,0,1-1-6.75c0-20.52,21-36,48.89-36,20.32,0,37,8.2,44.49,21.92a4,4,0,0,0,7-3.85C170.54,53.75,151.29,44,128,44,95.57,44,71.11,62.92,71.11,88a29.76,29.76,0,0,0,1.42,9.25A4,4,0,0,0,76.33,100Z" }))
  ]
]), qm = /* @__PURE__ */ new Map([
  [
    "bold",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M208.49,191.51a12,12,0,0,1-17,17L128,145,64.49,208.49a12,12,0,0,1-17-17L111,128,47.51,64.49a12,12,0,0,1,17-17L128,111l63.51-63.52a12,12,0,0,1,17,17L145,128Z" }))
  ],
  [
    "duotone",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement(
      "path",
      {
        d: "M216,48V208a8,8,0,0,1-8,8H48a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H208A8,8,0,0,1,216,48Z",
        opacity: "0.2"
      }
    ), /* @__PURE__ */ u.createElement("path", { d: "M205.66,194.34a8,8,0,0,1-11.32,11.32L128,139.31,61.66,205.66a8,8,0,0,1-11.32-11.32L116.69,128,50.34,61.66A8,8,0,0,1,61.66,50.34L128,116.69l66.34-66.35a8,8,0,0,1,11.32,11.32L139.31,128Z" }))
  ],
  [
    "fill",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M208,32H48A16,16,0,0,0,32,48V208a16,16,0,0,0,16,16H208a16,16,0,0,0,16-16V48A16,16,0,0,0,208,32ZM181.66,170.34a8,8,0,0,1-11.32,11.32L128,139.31,85.66,181.66a8,8,0,0,1-11.32-11.32L116.69,128,74.34,85.66A8,8,0,0,1,85.66,74.34L128,116.69l42.34-42.35a8,8,0,0,1,11.32,11.32L139.31,128Z" }))
  ],
  [
    "light",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M204.24,195.76a6,6,0,1,1-8.48,8.48L128,136.49,60.24,204.24a6,6,0,0,1-8.48-8.48L119.51,128,51.76,60.24a6,6,0,0,1,8.48-8.48L128,119.51l67.76-67.75a6,6,0,0,1,8.48,8.48L136.49,128Z" }))
  ],
  [
    "regular",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M205.66,194.34a8,8,0,0,1-11.32,11.32L128,139.31,61.66,205.66a8,8,0,0,1-11.32-11.32L116.69,128,50.34,61.66A8,8,0,0,1,61.66,50.34L128,116.69l66.34-66.35a8,8,0,0,1,11.32,11.32L139.31,128Z" }))
  ],
  [
    "thin",
    /* @__PURE__ */ u.createElement(u.Fragment, null, /* @__PURE__ */ u.createElement("path", { d: "M202.83,197.17a4,4,0,0,1-5.66,5.66L128,133.66,58.83,202.83a4,4,0,0,1-5.66-5.66L122.34,128,53.17,58.83a4,4,0,0,1,5.66-5.66L128,122.34l69.17-69.17a4,4,0,1,1,5.66,5.66L133.66,128Z" }))
  ]
]);
var Km = Object.defineProperty, Jm = Object.defineProperties, Gm = Object.getOwnPropertyDescriptors, ll = Object.getOwnPropertySymbols, Ym = Object.prototype.hasOwnProperty, Qm = Object.prototype.propertyIsEnumerable, cl = (n, e, t) => e in n ? Km(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, Xm = (n, e) => {
  for (var t in e || (e = {}))
    Ym.call(e, t) && cl(n, t, e[t]);
  if (ll)
    for (var t of ll(e))
      Qm.call(e, t) && cl(n, t, e[t]);
  return n;
}, eh = (n, e) => Jm(n, Gm(e));
const rd = R((n, e) => /* @__PURE__ */ u.createElement(me, eh(Xm({ ref: e }, n), { weights: pm })));
rd.displayName = "ArrowClockwise";
var th = Object.defineProperty, nh = Object.defineProperties, rh = Object.getOwnPropertyDescriptors, ul = Object.getOwnPropertySymbols, sh = Object.prototype.hasOwnProperty, ih = Object.prototype.propertyIsEnumerable, dl = (n, e, t) => e in n ? th(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, oh = (n, e) => {
  for (var t in e || (e = {}))
    sh.call(e, t) && dl(n, t, e[t]);
  if (ul)
    for (var t of ul(e))
      ih.call(e, t) && dl(n, t, e[t]);
  return n;
}, ah = (n, e) => nh(n, rh(e));
const sd = R((n, e) => /* @__PURE__ */ u.createElement(me, ah(oh({ ref: e }, n), { weights: gm })));
sd.displayName = "ArrowCounterClockwise";
var lh = Object.defineProperty, ch = Object.defineProperties, uh = Object.getOwnPropertyDescriptors, fl = Object.getOwnPropertySymbols, dh = Object.prototype.hasOwnProperty, fh = Object.prototype.propertyIsEnumerable, ml = (n, e, t) => e in n ? lh(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, mh = (n, e) => {
  for (var t in e || (e = {}))
    dh.call(e, t) && ml(n, t, e[t]);
  if (fl)
    for (var t of fl(e))
      fh.call(e, t) && ml(n, t, e[t]);
  return n;
}, hh = (n, e) => ch(n, uh(e));
const Na = R((n, e) => /* @__PURE__ */ u.createElement(me, hh(mh({ ref: e }, n), { weights: bm })));
Na.displayName = "CaretDown";
var ph = Object.defineProperty, gh = Object.defineProperties, bh = Object.getOwnPropertyDescriptors, hl = Object.getOwnPropertySymbols, yh = Object.prototype.hasOwnProperty, vh = Object.prototype.propertyIsEnumerable, pl = (n, e, t) => e in n ? ph(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, xh = (n, e) => {
  for (var t in e || (e = {}))
    yh.call(e, t) && pl(n, t, e[t]);
  if (hl)
    for (var t of hl(e))
      vh.call(e, t) && pl(n, t, e[t]);
  return n;
}, wh = (n, e) => gh(n, bh(e));
const ka = R((n, e) => /* @__PURE__ */ u.createElement(me, wh(xh({ ref: e }, n), { weights: ym })));
ka.displayName = "CaretRight";
var Nh = Object.defineProperty, kh = Object.defineProperties, Mh = Object.getOwnPropertyDescriptors, gl = Object.getOwnPropertySymbols, Ch = Object.prototype.hasOwnProperty, Rh = Object.prototype.propertyIsEnumerable, bl = (n, e, t) => e in n ? Nh(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, Eh = (n, e) => {
  for (var t in e || (e = {}))
    Ch.call(e, t) && bl(n, t, e[t]);
  if (gl)
    for (var t of gl(e))
      Rh.call(e, t) && bl(n, t, e[t]);
  return n;
}, Sh = (n, e) => kh(n, Mh(e));
const id = R((n, e) => /* @__PURE__ */ u.createElement(me, Sh(Eh({ ref: e }, n), { weights: vm })));
id.displayName = "CaretUpDown";
var Ah = Object.defineProperty, Oh = Object.defineProperties, Th = Object.getOwnPropertyDescriptors, yl = Object.getOwnPropertySymbols, _h = Object.prototype.hasOwnProperty, Dh = Object.prototype.propertyIsEnumerable, vl = (n, e, t) => e in n ? Ah(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, Hh = (n, e) => {
  for (var t in e || (e = {}))
    _h.call(e, t) && vl(n, t, e[t]);
  if (yl)
    for (var t of yl(e))
      Dh.call(e, t) && vl(n, t, e[t]);
  return n;
}, Ih = (n, e) => Oh(n, Th(e));
const rr = R((n, e) => /* @__PURE__ */ u.createElement(me, Ih(Hh({ ref: e }, n), { weights: xm })));
rr.displayName = "Check";
var Ph = Object.defineProperty, Lh = Object.defineProperties, Zh = Object.getOwnPropertyDescriptors, xl = Object.getOwnPropertySymbols, $h = Object.prototype.hasOwnProperty, Vh = Object.prototype.propertyIsEnumerable, wl = (n, e, t) => e in n ? Ph(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, zh = (n, e) => {
  for (var t in e || (e = {}))
    $h.call(e, t) && wl(n, t, e[t]);
  if (xl)
    for (var t of xl(e))
      Vh.call(e, t) && wl(n, t, e[t]);
  return n;
}, Fh = (n, e) => Lh(n, Zh(e));
const od = R((n, e) => /* @__PURE__ */ u.createElement(me, Fh(zh({ ref: e }, n), { weights: wm })));
od.displayName = "CodeBlock";
var jh = Object.defineProperty, Uh = Object.defineProperties, Bh = Object.getOwnPropertyDescriptors, Nl = Object.getOwnPropertySymbols, Wh = Object.prototype.hasOwnProperty, qh = Object.prototype.propertyIsEnumerable, kl = (n, e, t) => e in n ? jh(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, Kh = (n, e) => {
  for (var t in e || (e = {}))
    Wh.call(e, t) && kl(n, t, e[t]);
  if (Nl)
    for (var t of Nl(e))
      qh.call(e, t) && kl(n, t, e[t]);
  return n;
}, Jh = (n, e) => Uh(n, Bh(e));
const ad = R((n, e) => /* @__PURE__ */ u.createElement(me, Jh(Kh({ ref: e }, n), { weights: Nm })));
ad.displayName = "Code";
var Gh = Object.defineProperty, Yh = Object.defineProperties, Qh = Object.getOwnPropertyDescriptors, Ml = Object.getOwnPropertySymbols, Xh = Object.prototype.hasOwnProperty, ep = Object.prototype.propertyIsEnumerable, Cl = (n, e, t) => e in n ? Gh(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, tp = (n, e) => {
  for (var t in e || (e = {}))
    Xh.call(e, t) && Cl(n, t, e[t]);
  if (Ml)
    for (var t of Ml(e))
      ep.call(e, t) && Cl(n, t, e[t]);
  return n;
}, np = (n, e) => Yh(n, Qh(e));
const ld = R((n, e) => /* @__PURE__ */ u.createElement(me, np(tp({ ref: e }, n), { weights: km })));
ld.displayName = "DotOutline";
var rp = Object.defineProperty, sp = Object.defineProperties, ip = Object.getOwnPropertyDescriptors, Rl = Object.getOwnPropertySymbols, op = Object.prototype.hasOwnProperty, ap = Object.prototype.propertyIsEnumerable, El = (n, e, t) => e in n ? rp(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, lp = (n, e) => {
  for (var t in e || (e = {}))
    op.call(e, t) && El(n, t, e[t]);
  if (Rl)
    for (var t of Rl(e))
      ap.call(e, t) && El(n, t, e[t]);
  return n;
}, cp = (n, e) => sp(n, ip(e));
const cd = R((n, e) => /* @__PURE__ */ u.createElement(me, cp(lp({ ref: e }, n), { weights: Mm })));
cd.displayName = "DotsSixVertical";
var up = Object.defineProperty, dp = Object.defineProperties, fp = Object.getOwnPropertyDescriptors, Sl = Object.getOwnPropertySymbols, mp = Object.prototype.hasOwnProperty, hp = Object.prototype.propertyIsEnumerable, Al = (n, e, t) => e in n ? up(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, pp = (n, e) => {
  for (var t in e || (e = {}))
    mp.call(e, t) && Al(n, t, e[t]);
  if (Sl)
    for (var t of Sl(e))
      hp.call(e, t) && Al(n, t, e[t]);
  return n;
}, gp = (n, e) => dp(n, fp(e));
const ud = R((n, e) => /* @__PURE__ */ u.createElement(me, gp(pp({ ref: e }, n), { weights: Cm })));
ud.displayName = "HighlighterCircle";
var bp = Object.defineProperty, yp = Object.defineProperties, vp = Object.getOwnPropertyDescriptors, Ol = Object.getOwnPropertySymbols, xp = Object.prototype.hasOwnProperty, wp = Object.prototype.propertyIsEnumerable, Tl = (n, e, t) => e in n ? bp(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, Np = (n, e) => {
  for (var t in e || (e = {}))
    xp.call(e, t) && Tl(n, t, e[t]);
  if (Ol)
    for (var t of Ol(e))
      wp.call(e, t) && Tl(n, t, e[t]);
  return n;
}, kp = (n, e) => yp(n, vp(e));
const dd = R((n, e) => /* @__PURE__ */ u.createElement(me, kp(Np({ ref: e }, n), { weights: Rm })));
dd.displayName = "Image";
var Mp = Object.defineProperty, Cp = Object.defineProperties, Rp = Object.getOwnPropertyDescriptors, _l = Object.getOwnPropertySymbols, Ep = Object.prototype.hasOwnProperty, Sp = Object.prototype.propertyIsEnumerable, Dl = (n, e, t) => e in n ? Mp(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, Ap = (n, e) => {
  for (var t in e || (e = {}))
    Ep.call(e, t) && Dl(n, t, e[t]);
  if (_l)
    for (var t of _l(e))
      Sp.call(e, t) && Dl(n, t, e[t]);
  return n;
}, Op = (n, e) => Cp(n, Rp(e));
const fd = R((n, e) => /* @__PURE__ */ u.createElement(me, Op(Ap({ ref: e }, n), { weights: Em })));
fd.displayName = "KeyReturn";
var Tp = Object.defineProperty, _p = Object.defineProperties, Dp = Object.getOwnPropertyDescriptors, Hl = Object.getOwnPropertySymbols, Hp = Object.prototype.hasOwnProperty, Ip = Object.prototype.propertyIsEnumerable, Il = (n, e, t) => e in n ? Tp(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, Pp = (n, e) => {
  for (var t in e || (e = {}))
    Hp.call(e, t) && Il(n, t, e[t]);
  if (Hl)
    for (var t of Hl(e))
      Ip.call(e, t) && Il(n, t, e[t]);
  return n;
}, Lp = (n, e) => _p(n, Dp(e));
const md = R((n, e) => /* @__PURE__ */ u.createElement(me, Lp(Pp({ ref: e }, n), { weights: Sm })));
md.displayName = "LinkSimple";
var Zp = Object.defineProperty, $p = Object.defineProperties, Vp = Object.getOwnPropertyDescriptors, Pl = Object.getOwnPropertySymbols, zp = Object.prototype.hasOwnProperty, Fp = Object.prototype.propertyIsEnumerable, Ll = (n, e, t) => e in n ? Zp(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, jp = (n, e) => {
  for (var t in e || (e = {}))
    zp.call(e, t) && Ll(n, t, e[t]);
  if (Pl)
    for (var t of Pl(e))
      Fp.call(e, t) && Ll(n, t, e[t]);
  return n;
}, Up = (n, e) => $p(n, Vp(e));
const hd = R((n, e) => /* @__PURE__ */ u.createElement(me, Up(jp({ ref: e }, n), { weights: Am })));
hd.displayName = "ListBullets";
var Bp = Object.defineProperty, Wp = Object.defineProperties, qp = Object.getOwnPropertyDescriptors, Zl = Object.getOwnPropertySymbols, Kp = Object.prototype.hasOwnProperty, Jp = Object.prototype.propertyIsEnumerable, $l = (n, e, t) => e in n ? Bp(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, Gp = (n, e) => {
  for (var t in e || (e = {}))
    Kp.call(e, t) && $l(n, t, e[t]);
  if (Zl)
    for (var t of Zl(e))
      Jp.call(e, t) && $l(n, t, e[t]);
  return n;
}, Yp = (n, e) => Wp(n, qp(e));
const pd = R((n, e) => /* @__PURE__ */ u.createElement(me, Yp(Gp({ ref: e }, n), { weights: Om })));
pd.displayName = "ListNumbers";
var Qp = Object.defineProperty, Xp = Object.defineProperties, e1 = Object.getOwnPropertyDescriptors, Vl = Object.getOwnPropertySymbols, t1 = Object.prototype.hasOwnProperty, n1 = Object.prototype.propertyIsEnumerable, zl = (n, e, t) => e in n ? Qp(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, r1 = (n, e) => {
  for (var t in e || (e = {}))
    t1.call(e, t) && zl(n, t, e[t]);
  if (Vl)
    for (var t of Vl(e))
      n1.call(e, t) && zl(n, t, e[t]);
  return n;
}, s1 = (n, e) => Xp(n, e1(e));
const gd = R((n, e) => /* @__PURE__ */ u.createElement(me, s1(r1({ ref: e }, n), { weights: Tm })));
gd.displayName = "MagnifyingGlass";
var i1 = Object.defineProperty, o1 = Object.defineProperties, a1 = Object.getOwnPropertyDescriptors, Fl = Object.getOwnPropertySymbols, l1 = Object.prototype.hasOwnProperty, c1 = Object.prototype.propertyIsEnumerable, jl = (n, e, t) => e in n ? i1(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, u1 = (n, e) => {
  for (var t in e || (e = {}))
    l1.call(e, t) && jl(n, t, e[t]);
  if (Fl)
    for (var t of Fl(e))
      c1.call(e, t) && jl(n, t, e[t]);
  return n;
}, d1 = (n, e) => o1(n, a1(e));
const bd = R((n, e) => /* @__PURE__ */ u.createElement(me, d1(u1({ ref: e }, n), { weights: _m })));
bd.displayName = "Minus";
var f1 = Object.defineProperty, m1 = Object.defineProperties, h1 = Object.getOwnPropertyDescriptors, Ul = Object.getOwnPropertySymbols, p1 = Object.prototype.hasOwnProperty, g1 = Object.prototype.propertyIsEnumerable, Bl = (n, e, t) => e in n ? f1(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, b1 = (n, e) => {
  for (var t in e || (e = {}))
    p1.call(e, t) && Bl(n, t, e[t]);
  if (Ul)
    for (var t of Ul(e))
      g1.call(e, t) && Bl(n, t, e[t]);
  return n;
}, y1 = (n, e) => m1(n, h1(e));
const yd = R((n, e) => /* @__PURE__ */ u.createElement(me, y1(b1({ ref: e }, n), { weights: Dm })));
yd.displayName = "Paragraph";
var v1 = Object.defineProperty, x1 = Object.defineProperties, w1 = Object.getOwnPropertyDescriptors, Wl = Object.getOwnPropertySymbols, N1 = Object.prototype.hasOwnProperty, k1 = Object.prototype.propertyIsEnumerable, ql = (n, e, t) => e in n ? v1(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, M1 = (n, e) => {
  for (var t in e || (e = {}))
    N1.call(e, t) && ql(n, t, e[t]);
  if (Wl)
    for (var t of Wl(e))
      k1.call(e, t) && ql(n, t, e[t]);
  return n;
}, C1 = (n, e) => x1(n, w1(e));
const vd = R((n, e) => /* @__PURE__ */ u.createElement(me, C1(M1({ ref: e }, n), { weights: Hm })));
vd.displayName = "TextAUnderline";
var R1 = Object.defineProperty, E1 = Object.defineProperties, S1 = Object.getOwnPropertyDescriptors, Kl = Object.getOwnPropertySymbols, A1 = Object.prototype.hasOwnProperty, O1 = Object.prototype.propertyIsEnumerable, Jl = (n, e, t) => e in n ? R1(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, T1 = (n, e) => {
  for (var t in e || (e = {}))
    A1.call(e, t) && Jl(n, t, e[t]);
  if (Kl)
    for (var t of Kl(e))
      O1.call(e, t) && Jl(n, t, e[t]);
  return n;
}, _1 = (n, e) => E1(n, S1(e));
const xd = R((n, e) => /* @__PURE__ */ u.createElement(me, _1(T1({ ref: e }, n), { weights: Im })));
xd.displayName = "TextAlignCenter";
var D1 = Object.defineProperty, H1 = Object.defineProperties, I1 = Object.getOwnPropertyDescriptors, Gl = Object.getOwnPropertySymbols, P1 = Object.prototype.hasOwnProperty, L1 = Object.prototype.propertyIsEnumerable, Yl = (n, e, t) => e in n ? D1(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, Z1 = (n, e) => {
  for (var t in e || (e = {}))
    P1.call(e, t) && Yl(n, t, e[t]);
  if (Gl)
    for (var t of Gl(e))
      L1.call(e, t) && Yl(n, t, e[t]);
  return n;
}, $1 = (n, e) => H1(n, I1(e));
const wd = R((n, e) => /* @__PURE__ */ u.createElement(me, $1(Z1({ ref: e }, n), { weights: Pm })));
wd.displayName = "TextAlignJustify";
var V1 = Object.defineProperty, z1 = Object.defineProperties, F1 = Object.getOwnPropertyDescriptors, Ql = Object.getOwnPropertySymbols, j1 = Object.prototype.hasOwnProperty, U1 = Object.prototype.propertyIsEnumerable, Xl = (n, e, t) => e in n ? V1(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, B1 = (n, e) => {
  for (var t in e || (e = {}))
    j1.call(e, t) && Xl(n, t, e[t]);
  if (Ql)
    for (var t of Ql(e))
      U1.call(e, t) && Xl(n, t, e[t]);
  return n;
}, W1 = (n, e) => z1(n, F1(e));
const Nd = R((n, e) => /* @__PURE__ */ u.createElement(me, W1(B1({ ref: e }, n), { weights: Lm })));
Nd.displayName = "TextAlignLeft";
var q1 = Object.defineProperty, K1 = Object.defineProperties, J1 = Object.getOwnPropertyDescriptors, ec = Object.getOwnPropertySymbols, G1 = Object.prototype.hasOwnProperty, Y1 = Object.prototype.propertyIsEnumerable, tc = (n, e, t) => e in n ? q1(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, Q1 = (n, e) => {
  for (var t in e || (e = {}))
    G1.call(e, t) && tc(n, t, e[t]);
  if (ec)
    for (var t of ec(e))
      Y1.call(e, t) && tc(n, t, e[t]);
  return n;
}, X1 = (n, e) => K1(n, J1(e));
const kd = R((n, e) => /* @__PURE__ */ u.createElement(me, X1(Q1({ ref: e }, n), { weights: Zm })));
kd.displayName = "TextAlignRight";
var eg = Object.defineProperty, tg = Object.defineProperties, ng = Object.getOwnPropertyDescriptors, nc = Object.getOwnPropertySymbols, rg = Object.prototype.hasOwnProperty, sg = Object.prototype.propertyIsEnumerable, rc = (n, e, t) => e in n ? eg(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, ig = (n, e) => {
  for (var t in e || (e = {}))
    rg.call(e, t) && rc(n, t, e[t]);
  if (nc)
    for (var t of nc(e))
      sg.call(e, t) && rc(n, t, e[t]);
  return n;
}, og = (n, e) => tg(n, ng(e));
const Md = R((n, e) => /* @__PURE__ */ u.createElement(me, og(ig({ ref: e }, n), { weights: $m })));
Md.displayName = "TextB";
var ag = Object.defineProperty, lg = Object.defineProperties, cg = Object.getOwnPropertyDescriptors, sc = Object.getOwnPropertySymbols, ug = Object.prototype.hasOwnProperty, dg = Object.prototype.propertyIsEnumerable, ic = (n, e, t) => e in n ? ag(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, fg = (n, e) => {
  for (var t in e || (e = {}))
    ug.call(e, t) && ic(n, t, e[t]);
  if (sc)
    for (var t of sc(e))
      dg.call(e, t) && ic(n, t, e[t]);
  return n;
}, mg = (n, e) => lg(n, cg(e));
const Cd = R((n, e) => /* @__PURE__ */ u.createElement(me, mg(fg({ ref: e }, n), { weights: Vm })));
Cd.displayName = "TextHOne";
var hg = Object.defineProperty, pg = Object.defineProperties, gg = Object.getOwnPropertyDescriptors, oc = Object.getOwnPropertySymbols, bg = Object.prototype.hasOwnProperty, yg = Object.prototype.propertyIsEnumerable, ac = (n, e, t) => e in n ? hg(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, vg = (n, e) => {
  for (var t in e || (e = {}))
    bg.call(e, t) && ac(n, t, e[t]);
  if (oc)
    for (var t of oc(e))
      yg.call(e, t) && ac(n, t, e[t]);
  return n;
}, xg = (n, e) => pg(n, gg(e));
const Rd = R((n, e) => /* @__PURE__ */ u.createElement(me, xg(vg({ ref: e }, n), { weights: zm })));
Rd.displayName = "TextHThree";
var wg = Object.defineProperty, Ng = Object.defineProperties, kg = Object.getOwnPropertyDescriptors, lc = Object.getOwnPropertySymbols, Mg = Object.prototype.hasOwnProperty, Cg = Object.prototype.propertyIsEnumerable, cc = (n, e, t) => e in n ? wg(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, Rg = (n, e) => {
  for (var t in e || (e = {}))
    Mg.call(e, t) && cc(n, t, e[t]);
  if (lc)
    for (var t of lc(e))
      Cg.call(e, t) && cc(n, t, e[t]);
  return n;
}, Eg = (n, e) => Ng(n, kg(e));
const Ed = R((n, e) => /* @__PURE__ */ u.createElement(me, Eg(Rg({ ref: e }, n), { weights: Fm })));
Ed.displayName = "TextHTwo";
var Sg = Object.defineProperty, Ag = Object.defineProperties, Og = Object.getOwnPropertyDescriptors, uc = Object.getOwnPropertySymbols, Tg = Object.prototype.hasOwnProperty, _g = Object.prototype.propertyIsEnumerable, dc = (n, e, t) => e in n ? Sg(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, Dg = (n, e) => {
  for (var t in e || (e = {}))
    Tg.call(e, t) && dc(n, t, e[t]);
  if (uc)
    for (var t of uc(e))
      _g.call(e, t) && dc(n, t, e[t]);
  return n;
}, Hg = (n, e) => Ag(n, Og(e));
const Sd = R((n, e) => /* @__PURE__ */ u.createElement(me, Hg(Dg({ ref: e }, n), { weights: jm })));
Sd.displayName = "TextIndent";
var Ig = Object.defineProperty, Pg = Object.defineProperties, Lg = Object.getOwnPropertyDescriptors, fc = Object.getOwnPropertySymbols, Zg = Object.prototype.hasOwnProperty, $g = Object.prototype.propertyIsEnumerable, mc = (n, e, t) => e in n ? Ig(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, Vg = (n, e) => {
  for (var t in e || (e = {}))
    Zg.call(e, t) && mc(n, t, e[t]);
  if (fc)
    for (var t of fc(e))
      $g.call(e, t) && mc(n, t, e[t]);
  return n;
}, zg = (n, e) => Pg(n, Lg(e));
const Ad = R((n, e) => /* @__PURE__ */ u.createElement(me, zg(Vg({ ref: e }, n), { weights: Um })));
Ad.displayName = "TextItalic";
var Fg = Object.defineProperty, jg = Object.defineProperties, Ug = Object.getOwnPropertyDescriptors, hc = Object.getOwnPropertySymbols, Bg = Object.prototype.hasOwnProperty, Wg = Object.prototype.propertyIsEnumerable, pc = (n, e, t) => e in n ? Fg(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, qg = (n, e) => {
  for (var t in e || (e = {}))
    Bg.call(e, t) && pc(n, t, e[t]);
  if (hc)
    for (var t of hc(e))
      Wg.call(e, t) && pc(n, t, e[t]);
  return n;
}, Kg = (n, e) => jg(n, Ug(e));
const Od = R((n, e) => /* @__PURE__ */ u.createElement(me, Kg(qg({ ref: e }, n), { weights: Bm })));
Od.displayName = "TextOutdent";
var Jg = Object.defineProperty, Gg = Object.defineProperties, Yg = Object.getOwnPropertyDescriptors, gc = Object.getOwnPropertySymbols, Qg = Object.prototype.hasOwnProperty, Xg = Object.prototype.propertyIsEnumerable, bc = (n, e, t) => e in n ? Jg(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, e2 = (n, e) => {
  for (var t in e || (e = {}))
    Qg.call(e, t) && bc(n, t, e[t]);
  if (gc)
    for (var t of gc(e))
      Xg.call(e, t) && bc(n, t, e[t]);
  return n;
}, t2 = (n, e) => Gg(n, Yg(e));
const Td = R((n, e) => /* @__PURE__ */ u.createElement(me, t2(e2({ ref: e }, n), { weights: Wm })));
Td.displayName = "TextStrikethrough";
var n2 = Object.defineProperty, r2 = Object.defineProperties, s2 = Object.getOwnPropertyDescriptors, yc = Object.getOwnPropertySymbols, i2 = Object.prototype.hasOwnProperty, o2 = Object.prototype.propertyIsEnumerable, vc = (n, e, t) => e in n ? n2(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, a2 = (n, e) => {
  for (var t in e || (e = {}))
    i2.call(e, t) && vc(n, t, e[t]);
  if (yc)
    for (var t of yc(e))
      o2.call(e, t) && vc(n, t, e[t]);
  return n;
}, l2 = (n, e) => r2(n, s2(e));
const Pi = R((n, e) => /* @__PURE__ */ u.createElement(me, l2(a2({ ref: e }, n), { weights: qm })));
Pi.displayName = "X";
var _d = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function c2(n) {
  return n && n.__esModule && Object.prototype.hasOwnProperty.call(n, "default") ? n.default : n;
}
var u2 = { exports: {} };
/* @license
Papa Parse
v5.4.1
https://github.com/mholt/PapaParse
License: MIT
*/
(function(n, e) {
  (function(t, r) {
    n.exports = r();
  })(_d, function t() {
    var r = typeof self < "u" ? self : typeof window < "u" ? window : r !== void 0 ? r : {}, s = !r.document && !!r.postMessage, i = r.IS_PAPA_WORKER || !1, o = {}, a = 0, l = { parse: function(w, b) {
      var M = (b = b || {}).dynamicTyping || !1;
      if (K(M) && (b.dynamicTypingFunction = M, M = {}), b.dynamicTyping = M, b.transform = !!K(b.transform) && b.transform, b.worker && l.WORKERS_SUPPORTED) {
        var S = function() {
          if (!l.WORKERS_SUPPORTED)
            return !1;
          var J = (I = r.URL || r.webkitURL || null, E = t.toString(), l.BLOB_URL || (l.BLOB_URL = I.createObjectURL(new Blob(["var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; ", "(", E, ")();"], { type: "text/javascript" })))), H = new r.Worker(J), I, E;
          return H.onmessage = P, H.id = a++, o[H.id] = H;
        }();
        return S.userStep = b.step, S.userChunk = b.chunk, S.userComplete = b.complete, S.userError = b.error, b.step = K(b.step), b.chunk = K(b.chunk), b.complete = K(b.complete), b.error = K(b.error), delete b.worker, void S.postMessage({ input: w, config: b, workerId: S.id });
      }
      var _ = null;
      return l.NODE_STREAM_INPUT, typeof w == "string" ? (w = function(J) {
        return J.charCodeAt(0) === 65279 ? J.slice(1) : J;
      }(w), _ = b.download ? new f(b) : new h(b)) : w.readable === !0 && K(w.read) && K(w.on) ? _ = new p(b) : (r.File && w instanceof File || w instanceof Object) && (_ = new m(b)), _.stream(w);
    }, unparse: function(w, b) {
      var M = !1, S = !0, _ = ",", J = `\r
`, H = '"', I = H + H, E = !1, C = null, A = !1;
      (function() {
        if (typeof b == "object") {
          if (typeof b.delimiter != "string" || l.BAD_DELIMITERS.filter(function(N) {
            return b.delimiter.indexOf(N) !== -1;
          }).length || (_ = b.delimiter), (typeof b.quotes == "boolean" || typeof b.quotes == "function" || Array.isArray(b.quotes)) && (M = b.quotes), typeof b.skipEmptyLines != "boolean" && typeof b.skipEmptyLines != "string" || (E = b.skipEmptyLines), typeof b.newline == "string" && (J = b.newline), typeof b.quoteChar == "string" && (H = b.quoteChar), typeof b.header == "boolean" && (S = b.header), Array.isArray(b.columns)) {
            if (b.columns.length === 0)
              throw new Error("Option columns is empty");
            C = b.columns;
          }
          b.escapeChar !== void 0 && (I = b.escapeChar + H), (typeof b.escapeFormulae == "boolean" || b.escapeFormulae instanceof RegExp) && (A = b.escapeFormulae instanceof RegExp ? b.escapeFormulae : /^[=+\-@\t\r].*$/);
        }
      })();
      var x = new RegExp(v(H), "g");
      if (typeof w == "string" && (w = JSON.parse(w)), Array.isArray(w)) {
        if (!w.length || Array.isArray(w[0]))
          return O(null, w, E);
        if (typeof w[0] == "object")
          return O(C || Object.keys(w[0]), w, E);
      } else if (typeof w == "object")
        return typeof w.data == "string" && (w.data = JSON.parse(w.data)), Array.isArray(w.data) && (w.fields || (w.fields = w.meta && w.meta.fields || C), w.fields || (w.fields = Array.isArray(w.data[0]) ? w.fields : typeof w.data[0] == "object" ? Object.keys(w.data[0]) : []), Array.isArray(w.data[0]) || typeof w.data[0] == "object" || (w.data = [w.data])), O(w.fields || [], w.data || [], E);
      throw new Error("Unable to serialize unrecognized input");
      function O(N, z, ne) {
        var le = "";
        typeof N == "string" && (N = JSON.parse(N)), typeof z == "string" && (z = JSON.parse(z));
        var xe = Array.isArray(N) && 0 < N.length, we = !Array.isArray(z[0]);
        if (xe && S) {
          for (var Se = 0; Se < N.length; Se++)
            0 < Se && (le += _), le += $(N[Se], Se);
          0 < z.length && (le += J);
        }
        for (var G = 0; G < z.length; G++) {
          var se = xe ? N.length : z[G].length, he = !1, ke = xe ? Object.keys(z[G]).length === 0 : z[G].length === 0;
          if (ne && !xe && (he = ne === "greedy" ? z[G].join("").trim() === "" : z[G].length === 1 && z[G][0].length === 0), ne === "greedy" && xe) {
            for (var ge = [], Ke = 0; Ke < se; Ke++) {
              var He = we ? N[Ke] : Ke;
              ge.push(z[G][He]);
            }
            he = ge.join("").trim() === "";
          }
          if (!he) {
            for (var Me = 0; Me < se; Me++) {
              0 < Me && !ke && (le += _);
              var wt = xe && we ? N[Me] : Me;
              le += $(z[G][wt], Me);
            }
            G < z.length - 1 && (!ne || 0 < se && !ke) && (le += J);
          }
        }
        return le;
      }
      function $(N, z) {
        if (N == null)
          return "";
        if (N.constructor === Date)
          return JSON.stringify(N).slice(1, 25);
        var ne = !1;
        A && typeof N == "string" && A.test(N) && (N = "'" + N, ne = !0);
        var le = N.toString().replace(x, I);
        return (ne = ne || M === !0 || typeof M == "function" && M(N, z) || Array.isArray(M) && M[z] || function(xe, we) {
          for (var Se = 0; Se < we.length; Se++)
            if (-1 < xe.indexOf(we[Se]))
              return !0;
          return !1;
        }(le, l.BAD_DELIMITERS) || -1 < le.indexOf(_) || le.charAt(0) === " " || le.charAt(le.length - 1) === " ") ? H + le + H : le;
      }
    } };
    if (l.RECORD_SEP = String.fromCharCode(30), l.UNIT_SEP = String.fromCharCode(31), l.BYTE_ORDER_MARK = "\uFEFF", l.BAD_DELIMITERS = ["\r", `
`, '"', l.BYTE_ORDER_MARK], l.WORKERS_SUPPORTED = !s && !!r.Worker, l.NODE_STREAM_INPUT = 1, l.LocalChunkSize = 10485760, l.RemoteChunkSize = 5242880, l.DefaultDelimiter = ",", l.Parser = k, l.ParserHandle = y, l.NetworkStreamer = f, l.FileStreamer = m, l.StringStreamer = h, l.ReadableStreamStreamer = p, r.jQuery) {
      var c = r.jQuery;
      c.fn.parse = function(w) {
        var b = w.config || {}, M = [];
        return this.each(function(J) {
          if (!(c(this).prop("tagName").toUpperCase() === "INPUT" && c(this).attr("type").toLowerCase() === "file" && r.FileReader) || !this.files || this.files.length === 0)
            return !0;
          for (var H = 0; H < this.files.length; H++)
            M.push({ file: this.files[H], inputElem: this, instanceConfig: c.extend({}, b) });
        }), S(), this;
        function S() {
          if (M.length !== 0) {
            var J, H, I, E, C = M[0];
            if (K(w.before)) {
              var A = w.before(C.file, C.inputElem);
              if (typeof A == "object") {
                if (A.action === "abort")
                  return J = "AbortError", H = C.file, I = C.inputElem, E = A.reason, void (K(w.error) && w.error({ name: J }, H, I, E));
                if (A.action === "skip")
                  return void _();
                typeof A.config == "object" && (C.instanceConfig = c.extend(C.instanceConfig, A.config));
              } else if (A === "skip")
                return void _();
            }
            var x = C.instanceConfig.complete;
            C.instanceConfig.complete = function(O) {
              K(x) && x(O, C.file, C.inputElem), _();
            }, l.parse(C.file, C.instanceConfig);
          } else
            K(w.complete) && w.complete();
        }
        function _() {
          M.splice(0, 1), S();
        }
      };
    }
    function d(w) {
      this._handle = null, this._finished = !1, this._completed = !1, this._halted = !1, this._input = null, this._baseIndex = 0, this._partialLine = "", this._rowCount = 0, this._start = 0, this._nextChunk = null, this.isFirstChunk = !0, this._completeResults = { data: [], errors: [], meta: {} }, (function(b) {
        var M = re(b);
        M.chunkSize = parseInt(M.chunkSize), b.step || b.chunk || (M.chunkSize = null), this._handle = new y(M), (this._handle.streamer = this)._config = M;
      }).call(this, w), this.parseChunk = function(b, M) {
        if (this.isFirstChunk && K(this._config.beforeFirstChunk)) {
          var S = this._config.beforeFirstChunk(b);
          S !== void 0 && (b = S);
        }
        this.isFirstChunk = !1, this._halted = !1;
        var _ = this._partialLine + b;
        this._partialLine = "";
        var J = this._handle.parse(_, this._baseIndex, !this._finished);
        if (!this._handle.paused() && !this._handle.aborted()) {
          var H = J.meta.cursor;
          this._finished || (this._partialLine = _.substring(H - this._baseIndex), this._baseIndex = H), J && J.data && (this._rowCount += J.data.length);
          var I = this._finished || this._config.preview && this._rowCount >= this._config.preview;
          if (i)
            r.postMessage({ results: J, workerId: l.WORKER_ID, finished: I });
          else if (K(this._config.chunk) && !M) {
            if (this._config.chunk(J, this._handle), this._handle.paused() || this._handle.aborted())
              return void (this._halted = !0);
            J = void 0, this._completeResults = void 0;
          }
          return this._config.step || this._config.chunk || (this._completeResults.data = this._completeResults.data.concat(J.data), this._completeResults.errors = this._completeResults.errors.concat(J.errors), this._completeResults.meta = J.meta), this._completed || !I || !K(this._config.complete) || J && J.meta.aborted || (this._config.complete(this._completeResults, this._input), this._completed = !0), I || J && J.meta.paused || this._nextChunk(), J;
        }
        this._halted = !0;
      }, this._sendError = function(b) {
        K(this._config.error) ? this._config.error(b) : i && this._config.error && r.postMessage({ workerId: l.WORKER_ID, error: b, finished: !1 });
      };
    }
    function f(w) {
      var b;
      (w = w || {}).chunkSize || (w.chunkSize = l.RemoteChunkSize), d.call(this, w), this._nextChunk = s ? function() {
        this._readChunk(), this._chunkLoaded();
      } : function() {
        this._readChunk();
      }, this.stream = function(M) {
        this._input = M, this._nextChunk();
      }, this._readChunk = function() {
        if (this._finished)
          this._chunkLoaded();
        else {
          if (b = new XMLHttpRequest(), this._config.withCredentials && (b.withCredentials = this._config.withCredentials), s || (b.onload = V(this._chunkLoaded, this), b.onerror = V(this._chunkError, this)), b.open(this._config.downloadRequestBody ? "POST" : "GET", this._input, !s), this._config.downloadRequestHeaders) {
            var M = this._config.downloadRequestHeaders;
            for (var S in M)
              b.setRequestHeader(S, M[S]);
          }
          if (this._config.chunkSize) {
            var _ = this._start + this._config.chunkSize - 1;
            b.setRequestHeader("Range", "bytes=" + this._start + "-" + _);
          }
          try {
            b.send(this._config.downloadRequestBody);
          } catch (J) {
            this._chunkError(J.message);
          }
          s && b.status === 0 && this._chunkError();
        }
      }, this._chunkLoaded = function() {
        b.readyState === 4 && (b.status < 200 || 400 <= b.status ? this._chunkError() : (this._start += this._config.chunkSize ? this._config.chunkSize : b.responseText.length, this._finished = !this._config.chunkSize || this._start >= function(M) {
          var S = M.getResponseHeader("Content-Range");
          return S === null ? -1 : parseInt(S.substring(S.lastIndexOf("/") + 1));
        }(b), this.parseChunk(b.responseText)));
      }, this._chunkError = function(M) {
        var S = b.statusText || M;
        this._sendError(new Error(S));
      };
    }
    function m(w) {
      var b, M;
      (w = w || {}).chunkSize || (w.chunkSize = l.LocalChunkSize), d.call(this, w);
      var S = typeof FileReader < "u";
      this.stream = function(_) {
        this._input = _, M = _.slice || _.webkitSlice || _.mozSlice, S ? ((b = new FileReader()).onload = V(this._chunkLoaded, this), b.onerror = V(this._chunkError, this)) : b = new FileReaderSync(), this._nextChunk();
      }, this._nextChunk = function() {
        this._finished || this._config.preview && !(this._rowCount < this._config.preview) || this._readChunk();
      }, this._readChunk = function() {
        var _ = this._input;
        if (this._config.chunkSize) {
          var J = Math.min(this._start + this._config.chunkSize, this._input.size);
          _ = M.call(_, this._start, J);
        }
        var H = b.readAsText(_, this._config.encoding);
        S || this._chunkLoaded({ target: { result: H } });
      }, this._chunkLoaded = function(_) {
        this._start += this._config.chunkSize, this._finished = !this._config.chunkSize || this._start >= this._input.size, this.parseChunk(_.target.result);
      }, this._chunkError = function() {
        this._sendError(b.error);
      };
    }
    function h(w) {
      var b;
      d.call(this, w = w || {}), this.stream = function(M) {
        return b = M, this._nextChunk();
      }, this._nextChunk = function() {
        if (!this._finished) {
          var M, S = this._config.chunkSize;
          return S ? (M = b.substring(0, S), b = b.substring(S)) : (M = b, b = ""), this._finished = !b, this.parseChunk(M);
        }
      };
    }
    function p(w) {
      d.call(this, w = w || {});
      var b = [], M = !0, S = !1;
      this.pause = function() {
        d.prototype.pause.apply(this, arguments), this._input.pause();
      }, this.resume = function() {
        d.prototype.resume.apply(this, arguments), this._input.resume();
      }, this.stream = function(_) {
        this._input = _, this._input.on("data", this._streamData), this._input.on("end", this._streamEnd), this._input.on("error", this._streamError);
      }, this._checkIsFinished = function() {
        S && b.length === 1 && (this._finished = !0);
      }, this._nextChunk = function() {
        this._checkIsFinished(), b.length ? this.parseChunk(b.shift()) : M = !0;
      }, this._streamData = V(function(_) {
        try {
          b.push(typeof _ == "string" ? _ : _.toString(this._config.encoding)), M && (M = !1, this._checkIsFinished(), this.parseChunk(b.shift()));
        } catch (J) {
          this._streamError(J);
        }
      }, this), this._streamError = V(function(_) {
        this._streamCleanUp(), this._sendError(_);
      }, this), this._streamEnd = V(function() {
        this._streamCleanUp(), S = !0, this._streamData("");
      }, this), this._streamCleanUp = V(function() {
        this._input.removeListener("data", this._streamData), this._input.removeListener("end", this._streamEnd), this._input.removeListener("error", this._streamError);
      }, this);
    }
    function y(w) {
      var b, M, S, _ = Math.pow(2, 53), J = -_, H = /^\s*-?(\d+\.?|\.\d+|\d+\.\d+)([eE][-+]?\d+)?\s*$/, I = /^((\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z)))$/, E = this, C = 0, A = 0, x = !1, O = !1, $ = [], N = { data: [], errors: [], meta: {} };
      if (K(w.step)) {
        var z = w.step;
        w.step = function(G) {
          if (N = G, xe())
            le();
          else {
            if (le(), N.data.length === 0)
              return;
            C += G.data.length, w.preview && C > w.preview ? M.abort() : (N.data = N.data[0], z(N, E));
          }
        };
      }
      function ne(G) {
        return w.skipEmptyLines === "greedy" ? G.join("").trim() === "" : G.length === 1 && G[0].length === 0;
      }
      function le() {
        return N && S && (Se("Delimiter", "UndetectableDelimiter", "Unable to auto-detect delimiting character; defaulted to '" + l.DefaultDelimiter + "'"), S = !1), w.skipEmptyLines && (N.data = N.data.filter(function(G) {
          return !ne(G);
        })), xe() && function() {
          if (!N)
            return;
          function G(he, ke) {
            K(w.transformHeader) && (he = w.transformHeader(he, ke)), $.push(he);
          }
          if (Array.isArray(N.data[0])) {
            for (var se = 0; xe() && se < N.data.length; se++)
              N.data[se].forEach(G);
            N.data.splice(0, 1);
          } else
            N.data.forEach(G);
        }(), function() {
          if (!N || !w.header && !w.dynamicTyping && !w.transform)
            return N;
          function G(he, ke) {
            var ge, Ke = w.header ? {} : [];
            for (ge = 0; ge < he.length; ge++) {
              var He = ge, Me = he[ge];
              w.header && (He = ge >= $.length ? "__parsed_extra" : $[ge]), w.transform && (Me = w.transform(Me, He)), Me = we(He, Me), He === "__parsed_extra" ? (Ke[He] = Ke[He] || [], Ke[He].push(Me)) : Ke[He] = Me;
            }
            return w.header && (ge > $.length ? Se("FieldMismatch", "TooManyFields", "Too many fields: expected " + $.length + " fields but parsed " + ge, A + ke) : ge < $.length && Se("FieldMismatch", "TooFewFields", "Too few fields: expected " + $.length + " fields but parsed " + ge, A + ke)), Ke;
          }
          var se = 1;
          return !N.data.length || Array.isArray(N.data[0]) ? (N.data = N.data.map(G), se = N.data.length) : N.data = G(N.data, 0), w.header && N.meta && (N.meta.fields = $), A += se, N;
        }();
      }
      function xe() {
        return w.header && $.length === 0;
      }
      function we(G, se) {
        return he = G, w.dynamicTypingFunction && w.dynamicTyping[he] === void 0 && (w.dynamicTyping[he] = w.dynamicTypingFunction(he)), (w.dynamicTyping[he] || w.dynamicTyping) === !0 ? se === "true" || se === "TRUE" || se !== "false" && se !== "FALSE" && (function(ke) {
          if (H.test(ke)) {
            var ge = parseFloat(ke);
            if (J < ge && ge < _)
              return !0;
          }
          return !1;
        }(se) ? parseFloat(se) : I.test(se) ? new Date(se) : se === "" ? null : se) : se;
        var he;
      }
      function Se(G, se, he, ke) {
        var ge = { type: G, code: se, message: he };
        ke !== void 0 && (ge.row = ke), N.errors.push(ge);
      }
      this.parse = function(G, se, he) {
        var ke = w.quoteChar || '"';
        if (w.newline || (w.newline = function(He, Me) {
          He = He.substring(0, 1048576);
          var wt = new RegExp(v(Me) + "([^]*?)" + v(Me), "gm"), mt = (He = He.replace(wt, "")).split("\r"), _t = He.split(`
`), Ut = 1 < _t.length && _t[0].length < mt[0].length;
          if (mt.length === 1 || Ut)
            return `
`;
          for (var ht = 0, Oe = 0; Oe < mt.length; Oe++)
            mt[Oe][0] === `
` && ht++;
          return ht >= mt.length / 2 ? `\r
` : "\r";
        }(G, ke)), S = !1, w.delimiter)
          K(w.delimiter) && (w.delimiter = w.delimiter(G), N.meta.delimiter = w.delimiter);
        else {
          var ge = function(He, Me, wt, mt, _t) {
            var Ut, ht, Oe, Ie;
            _t = _t || [",", "	", "|", ";", l.RECORD_SEP, l.UNIT_SEP];
            for (var On = 0; On < _t.length; On++) {
              var ve = _t[On], ir = 0, Bt = 0, Tn = 0;
              Oe = void 0;
              for (var Xt = new k({ comments: mt, delimiter: ve, newline: Me, preview: 10 }).parse(He), en = 0; en < Xt.data.length; en++)
                if (wt && ne(Xt.data[en]))
                  Tn++;
                else {
                  var tn = Xt.data[en].length;
                  Bt += tn, Oe !== void 0 ? 0 < tn && (ir += Math.abs(tn - Oe), Oe = tn) : Oe = tn;
                }
              0 < Xt.data.length && (Bt /= Xt.data.length - Tn), (ht === void 0 || ir <= ht) && (Ie === void 0 || Ie < Bt) && 1.99 < Bt && (ht = ir, Ut = ve, Ie = Bt);
            }
            return { successful: !!(w.delimiter = Ut), bestDelimiter: Ut };
          }(G, w.newline, w.skipEmptyLines, w.comments, w.delimitersToGuess);
          ge.successful ? w.delimiter = ge.bestDelimiter : (S = !0, w.delimiter = l.DefaultDelimiter), N.meta.delimiter = w.delimiter;
        }
        var Ke = re(w);
        return w.preview && w.header && Ke.preview++, b = G, M = new k(Ke), N = M.parse(b, se, he), le(), x ? { meta: { paused: !0 } } : N || { meta: { paused: !1 } };
      }, this.paused = function() {
        return x;
      }, this.pause = function() {
        x = !0, M.abort(), b = K(w.chunk) ? "" : b.substring(M.getCharIndex());
      }, this.resume = function() {
        E.streamer._halted ? (x = !1, E.streamer.parseChunk(b, !0)) : setTimeout(E.resume, 3);
      }, this.aborted = function() {
        return O;
      }, this.abort = function() {
        O = !0, M.abort(), N.meta.aborted = !0, K(w.complete) && w.complete(N), b = "";
      };
    }
    function v(w) {
      return w.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    }
    function k(w) {
      var b, M = (w = w || {}).delimiter, S = w.newline, _ = w.comments, J = w.step, H = w.preview, I = w.fastMode, E = b = w.quoteChar === void 0 || w.quoteChar === null ? '"' : w.quoteChar;
      if (w.escapeChar !== void 0 && (E = w.escapeChar), (typeof M != "string" || -1 < l.BAD_DELIMITERS.indexOf(M)) && (M = ","), _ === M)
        throw new Error("Comment character same as delimiter");
      _ === !0 ? _ = "#" : (typeof _ != "string" || -1 < l.BAD_DELIMITERS.indexOf(_)) && (_ = !1), S !== `
` && S !== "\r" && S !== `\r
` && (S = `
`);
      var C = 0, A = !1;
      this.parse = function(x, O, $) {
        if (typeof x != "string")
          throw new Error("Input must be a string");
        var N = x.length, z = M.length, ne = S.length, le = _.length, xe = K(J), we = [], Se = [], G = [], se = C = 0;
        if (!x)
          return pt();
        if (w.header && !O) {
          var he = x.split(S)[0].split(M), ke = [], ge = {}, Ke = !1;
          for (var He in he) {
            var Me = he[He];
            K(w.transformHeader) && (Me = w.transformHeader(Me, He));
            var wt = Me, mt = ge[Me] || 0;
            for (0 < mt && (Ke = !0, wt = Me + "_" + mt), ge[Me] = mt + 1; ke.includes(wt); )
              wt = wt + "_" + mt;
            ke.push(wt);
          }
          if (Ke) {
            var _t = x.split(S);
            _t[0] = ke.join(M), x = _t.join(S);
          }
        }
        if (I || I !== !1 && x.indexOf(b) === -1) {
          for (var Ut = x.split(S), ht = 0; ht < Ut.length; ht++) {
            if (G = Ut[ht], C += G.length, ht !== Ut.length - 1)
              C += S.length;
            else if ($)
              return pt();
            if (!_ || G.substring(0, le) !== _) {
              if (xe) {
                if (we = [], Tn(G.split(M)), Ds(), A)
                  return pt();
              } else
                Tn(G.split(M));
              if (H && H <= ht)
                return we = we.slice(0, H), pt(!0);
            }
          }
          return pt();
        }
        for (var Oe = x.indexOf(M, C), Ie = x.indexOf(S, C), On = new RegExp(v(E) + v(b), "g"), ve = x.indexOf(b, C); ; )
          if (x[C] !== b)
            if (_ && G.length === 0 && x.substring(C, C + le) === _) {
              if (Ie === -1)
                return pt();
              C = Ie + ne, Ie = x.indexOf(S, C), Oe = x.indexOf(M, C);
            } else if (Oe !== -1 && (Oe < Ie || Ie === -1))
              G.push(x.substring(C, Oe)), C = Oe + z, Oe = x.indexOf(M, C);
            else {
              if (Ie === -1)
                break;
              if (G.push(x.substring(C, Ie)), tn(Ie + ne), xe && (Ds(), A))
                return pt();
              if (H && we.length >= H)
                return pt(!0);
            }
          else
            for (ve = C, C++; ; ) {
              if ((ve = x.indexOf(b, ve + 1)) === -1)
                return $ || Se.push({ type: "Quotes", code: "MissingQuotes", message: "Quoted field unterminated", row: we.length, index: C }), en();
              if (ve === N - 1)
                return en(x.substring(C, ve).replace(On, b));
              if (b !== E || x[ve + 1] !== E) {
                if (b === E || ve === 0 || x[ve - 1] !== E) {
                  Oe !== -1 && Oe < ve + 1 && (Oe = x.indexOf(M, ve + 1)), Ie !== -1 && Ie < ve + 1 && (Ie = x.indexOf(S, ve + 1));
                  var ir = Xt(Ie === -1 ? Oe : Math.min(Oe, Ie));
                  if (x.substr(ve + 1 + ir, z) === M) {
                    G.push(x.substring(C, ve).replace(On, b)), x[C = ve + 1 + ir + z] !== b && (ve = x.indexOf(b, C)), Oe = x.indexOf(M, C), Ie = x.indexOf(S, C);
                    break;
                  }
                  var Bt = Xt(Ie);
                  if (x.substring(ve + 1 + Bt, ve + 1 + Bt + ne) === S) {
                    if (G.push(x.substring(C, ve).replace(On, b)), tn(ve + 1 + Bt + ne), Oe = x.indexOf(M, C), ve = x.indexOf(b, C), xe && (Ds(), A))
                      return pt();
                    if (H && we.length >= H)
                      return pt(!0);
                    break;
                  }
                  Se.push({ type: "Quotes", code: "InvalidQuotes", message: "Trailing quote on quoted field is malformed", row: we.length, index: C }), ve++;
                }
              } else
                ve++;
            }
        return en();
        function Tn(gt) {
          we.push(gt), se = C;
        }
        function Xt(gt) {
          var sl = 0;
          if (gt !== -1) {
            var Xi = x.substring(ve + 1, gt);
            Xi && Xi.trim() === "" && (sl = Xi.length);
          }
          return sl;
        }
        function en(gt) {
          return $ || (gt === void 0 && (gt = x.substring(C)), G.push(gt), C = N, Tn(G), xe && Ds()), pt();
        }
        function tn(gt) {
          C = gt, Tn(G), G = [], Ie = x.indexOf(S, C);
        }
        function pt(gt) {
          return { data: we, errors: Se, meta: { delimiter: M, linebreak: S, aborted: A, truncated: !!gt, cursor: se + (O || 0) } };
        }
        function Ds() {
          J(pt()), we = [], Se = [];
        }
      }, this.abort = function() {
        A = !0;
      }, this.getCharIndex = function() {
        return C;
      };
    }
    function P(w) {
      var b = w.data, M = o[b.workerId], S = !1;
      if (b.error)
        M.userError(b.error, b.file);
      else if (b.results && b.results.data) {
        var _ = { abort: function() {
          S = !0, q(b.workerId, { data: [], errors: [], meta: { aborted: !0 } });
        }, pause: te, resume: te };
        if (K(M.userStep)) {
          for (var J = 0; J < b.results.data.length && (M.userStep({ data: b.results.data[J], errors: b.results.errors, meta: b.results.meta }, _), !S); J++)
            ;
          delete b.results;
        } else
          K(M.userChunk) && (M.userChunk(b.results, _, b.file), delete b.results);
      }
      b.finished && !S && q(b.workerId, b.results);
    }
    function q(w, b) {
      var M = o[w];
      K(M.userComplete) && M.userComplete(b), M.terminate(), delete o[w];
    }
    function te() {
      throw new Error("Not implemented.");
    }
    function re(w) {
      if (typeof w != "object" || w === null)
        return w;
      var b = Array.isArray(w) ? [] : {};
      for (var M in w)
        b[M] = re(w[M]);
      return b;
    }
    function V(w, b) {
      return function() {
        w.apply(b, arguments);
      };
    }
    function K(w) {
      return typeof w == "function";
    }
    return i && (r.onmessage = function(w) {
      var b = w.data;
      if (l.WORKER_ID === void 0 && b && (l.WORKER_ID = b.workerId), typeof b.input == "string")
        r.postMessage({ workerId: l.WORKER_ID, results: l.parse(b.input, b.config), finished: !0 });
      else if (r.File && b.input instanceof File || b.input instanceof Object) {
        var M = l.parse(b.input, b.config);
        M && r.postMessage({ workerId: l.WORKER_ID, results: M, finished: !0 });
      }
    }), (f.prototype = Object.create(d.prototype)).constructor = f, (m.prototype = Object.create(d.prototype)).constructor = m, (h.prototype = Object.create(h.prototype)).constructor = h, (p.prototype = Object.create(d.prototype)).constructor = p, l;
  });
})(u2);
var d2 = { exports: {} };
(function(n, e) {
  (function(t, r) {
    n.exports = r();
  })(_d, function() {
    var t = 1e3, r = 6e4, s = 36e5, i = "millisecond", o = "second", a = "minute", l = "hour", c = "day", d = "week", f = "month", m = "quarter", h = "year", p = "date", y = "Invalid Date", v = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, k = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, P = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function(H) {
      var I = ["th", "st", "nd", "rd"], E = H % 100;
      return "[" + H + (I[(E - 20) % 10] || I[E] || I[0]) + "]";
    } }, q = function(H, I, E) {
      var C = String(H);
      return !C || C.length >= I ? H : "" + Array(I + 1 - C.length).join(E) + H;
    }, te = { s: q, z: function(H) {
      var I = -H.utcOffset(), E = Math.abs(I), C = Math.floor(E / 60), A = E % 60;
      return (I <= 0 ? "+" : "-") + q(C, 2, "0") + ":" + q(A, 2, "0");
    }, m: function H(I, E) {
      if (I.date() < E.date())
        return -H(E, I);
      var C = 12 * (E.year() - I.year()) + (E.month() - I.month()), A = I.clone().add(C, f), x = E - A < 0, O = I.clone().add(C + (x ? -1 : 1), f);
      return +(-(C + (E - A) / (x ? A - O : O - A)) || 0);
    }, a: function(H) {
      return H < 0 ? Math.ceil(H) || 0 : Math.floor(H);
    }, p: function(H) {
      return { M: f, y: h, w: d, d: c, D: p, h: l, m: a, s: o, ms: i, Q: m }[H] || String(H || "").toLowerCase().replace(/s$/, "");
    }, u: function(H) {
      return H === void 0;
    } }, re = "en", V = {};
    V[re] = P;
    var K = "$isDayjsObject", w = function(H) {
      return H instanceof _ || !(!H || !H[K]);
    }, b = function H(I, E, C) {
      var A;
      if (!I)
        return re;
      if (typeof I == "string") {
        var x = I.toLowerCase();
        V[x] && (A = x), E && (V[x] = E, A = x);
        var O = I.split("-");
        if (!A && O.length > 1)
          return H(O[0]);
      } else {
        var $ = I.name;
        V[$] = I, A = $;
      }
      return !C && A && (re = A), A || !C && re;
    }, M = function(H, I) {
      if (w(H))
        return H.clone();
      var E = typeof I == "object" ? I : {};
      return E.date = H, E.args = arguments, new _(E);
    }, S = te;
    S.l = b, S.i = w, S.w = function(H, I) {
      return M(H, { locale: I.$L, utc: I.$u, x: I.$x, $offset: I.$offset });
    };
    var _ = function() {
      function H(E) {
        this.$L = b(E.locale, null, !0), this.parse(E), this.$x = this.$x || E.x || {}, this[K] = !0;
      }
      var I = H.prototype;
      return I.parse = function(E) {
        this.$d = function(C) {
          var A = C.date, x = C.utc;
          if (A === null)
            return /* @__PURE__ */ new Date(NaN);
          if (S.u(A))
            return /* @__PURE__ */ new Date();
          if (A instanceof Date)
            return new Date(A);
          if (typeof A == "string" && !/Z$/i.test(A)) {
            var O = A.match(v);
            if (O) {
              var $ = O[2] - 1 || 0, N = (O[7] || "0").substring(0, 3);
              return x ? new Date(Date.UTC(O[1], $, O[3] || 1, O[4] || 0, O[5] || 0, O[6] || 0, N)) : new Date(O[1], $, O[3] || 1, O[4] || 0, O[5] || 0, O[6] || 0, N);
            }
          }
          return new Date(A);
        }(E), this.init();
      }, I.init = function() {
        var E = this.$d;
        this.$y = E.getFullYear(), this.$M = E.getMonth(), this.$D = E.getDate(), this.$W = E.getDay(), this.$H = E.getHours(), this.$m = E.getMinutes(), this.$s = E.getSeconds(), this.$ms = E.getMilliseconds();
      }, I.$utils = function() {
        return S;
      }, I.isValid = function() {
        return this.$d.toString() !== y;
      }, I.isSame = function(E, C) {
        var A = M(E);
        return this.startOf(C) <= A && A <= this.endOf(C);
      }, I.isAfter = function(E, C) {
        return M(E) < this.startOf(C);
      }, I.isBefore = function(E, C) {
        return this.endOf(C) < M(E);
      }, I.$g = function(E, C, A) {
        return S.u(E) ? this[C] : this.set(A, E);
      }, I.unix = function() {
        return Math.floor(this.valueOf() / 1e3);
      }, I.valueOf = function() {
        return this.$d.getTime();
      }, I.startOf = function(E, C) {
        var A = this, x = !!S.u(C) || C, O = S.p(E), $ = function(G, se) {
          var he = S.w(A.$u ? Date.UTC(A.$y, se, G) : new Date(A.$y, se, G), A);
          return x ? he : he.endOf(c);
        }, N = function(G, se) {
          return S.w(A.toDate()[G].apply(A.toDate("s"), (x ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(se)), A);
        }, z = this.$W, ne = this.$M, le = this.$D, xe = "set" + (this.$u ? "UTC" : "");
        switch (O) {
          case h:
            return x ? $(1, 0) : $(31, 11);
          case f:
            return x ? $(1, ne) : $(0, ne + 1);
          case d:
            var we = this.$locale().weekStart || 0, Se = (z < we ? z + 7 : z) - we;
            return $(x ? le - Se : le + (6 - Se), ne);
          case c:
          case p:
            return N(xe + "Hours", 0);
          case l:
            return N(xe + "Minutes", 1);
          case a:
            return N(xe + "Seconds", 2);
          case o:
            return N(xe + "Milliseconds", 3);
          default:
            return this.clone();
        }
      }, I.endOf = function(E) {
        return this.startOf(E, !1);
      }, I.$set = function(E, C) {
        var A, x = S.p(E), O = "set" + (this.$u ? "UTC" : ""), $ = (A = {}, A[c] = O + "Date", A[p] = O + "Date", A[f] = O + "Month", A[h] = O + "FullYear", A[l] = O + "Hours", A[a] = O + "Minutes", A[o] = O + "Seconds", A[i] = O + "Milliseconds", A)[x], N = x === c ? this.$D + (C - this.$W) : C;
        if (x === f || x === h) {
          var z = this.clone().set(p, 1);
          z.$d[$](N), z.init(), this.$d = z.set(p, Math.min(this.$D, z.daysInMonth())).$d;
        } else
          $ && this.$d[$](N);
        return this.init(), this;
      }, I.set = function(E, C) {
        return this.clone().$set(E, C);
      }, I.get = function(E) {
        return this[S.p(E)]();
      }, I.add = function(E, C) {
        var A, x = this;
        E = Number(E);
        var O = S.p(C), $ = function(ne) {
          var le = M(x);
          return S.w(le.date(le.date() + Math.round(ne * E)), x);
        };
        if (O === f)
          return this.set(f, this.$M + E);
        if (O === h)
          return this.set(h, this.$y + E);
        if (O === c)
          return $(1);
        if (O === d)
          return $(7);
        var N = (A = {}, A[a] = r, A[l] = s, A[o] = t, A)[O] || 1, z = this.$d.getTime() + E * N;
        return S.w(z, this);
      }, I.subtract = function(E, C) {
        return this.add(-1 * E, C);
      }, I.format = function(E) {
        var C = this, A = this.$locale();
        if (!this.isValid())
          return A.invalidDate || y;
        var x = E || "YYYY-MM-DDTHH:mm:ssZ", O = S.z(this), $ = this.$H, N = this.$m, z = this.$M, ne = A.weekdays, le = A.months, xe = A.meridiem, we = function(se, he, ke, ge) {
          return se && (se[he] || se(C, x)) || ke[he].slice(0, ge);
        }, Se = function(se) {
          return S.s($ % 12 || 12, se, "0");
        }, G = xe || function(se, he, ke) {
          var ge = se < 12 ? "AM" : "PM";
          return ke ? ge.toLowerCase() : ge;
        };
        return x.replace(k, function(se, he) {
          return he || function(ke) {
            switch (ke) {
              case "YY":
                return String(C.$y).slice(-2);
              case "YYYY":
                return S.s(C.$y, 4, "0");
              case "M":
                return z + 1;
              case "MM":
                return S.s(z + 1, 2, "0");
              case "MMM":
                return we(A.monthsShort, z, le, 3);
              case "MMMM":
                return we(le, z);
              case "D":
                return C.$D;
              case "DD":
                return S.s(C.$D, 2, "0");
              case "d":
                return String(C.$W);
              case "dd":
                return we(A.weekdaysMin, C.$W, ne, 2);
              case "ddd":
                return we(A.weekdaysShort, C.$W, ne, 3);
              case "dddd":
                return ne[C.$W];
              case "H":
                return String($);
              case "HH":
                return S.s($, 2, "0");
              case "h":
                return Se(1);
              case "hh":
                return Se(2);
              case "a":
                return G($, N, !0);
              case "A":
                return G($, N, !1);
              case "m":
                return String(N);
              case "mm":
                return S.s(N, 2, "0");
              case "s":
                return String(C.$s);
              case "ss":
                return S.s(C.$s, 2, "0");
              case "SSS":
                return S.s(C.$ms, 3, "0");
              case "Z":
                return O;
            }
            return null;
          }(se) || O.replace(":", "");
        });
      }, I.utcOffset = function() {
        return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
      }, I.diff = function(E, C, A) {
        var x, O = this, $ = S.p(C), N = M(E), z = (N.utcOffset() - this.utcOffset()) * r, ne = this - N, le = function() {
          return S.m(O, N);
        };
        switch ($) {
          case h:
            x = le() / 12;
            break;
          case f:
            x = le();
            break;
          case m:
            x = le() / 3;
            break;
          case d:
            x = (ne - z) / 6048e5;
            break;
          case c:
            x = (ne - z) / 864e5;
            break;
          case l:
            x = ne / s;
            break;
          case a:
            x = ne / r;
            break;
          case o:
            x = ne / t;
            break;
          default:
            x = ne;
        }
        return A ? x : S.a(x);
      }, I.daysInMonth = function() {
        return this.endOf(f).$D;
      }, I.$locale = function() {
        return V[this.$L];
      }, I.locale = function(E, C) {
        if (!E)
          return this.$L;
        var A = this.clone(), x = b(E, C, !0);
        return x && (A.$L = x), A;
      }, I.clone = function() {
        return S.w(this.$d, this);
      }, I.toDate = function() {
        return new Date(this.valueOf());
      }, I.toJSON = function() {
        return this.isValid() ? this.toISOString() : null;
      }, I.toISOString = function() {
        return this.$d.toISOString();
      }, I.toString = function() {
        return this.$d.toUTCString();
      }, H;
    }(), J = _.prototype;
    return M.prototype = J, [["$ms", i], ["$s", o], ["$m", a], ["$H", l], ["$W", c], ["$M", f], ["$y", h], ["$D", p]].forEach(function(H) {
      J[H[1]] = function(I) {
        return this.$g(I, H[0], H[1]);
      };
    }), M.extend = function(H, I) {
      return H.$i || (H(I, _, M), H.$i = !0), M;
    }, M.locale = b, M.isDayjs = w, M.unix = function(H) {
      return M(1e3 * H);
    }, M.en = V[re], M.Ls = V, M.p = {}, M;
  });
})(d2);
function Dd(n) {
  var e, t, r = "";
  if (typeof n == "string" || typeof n == "number")
    r += n;
  else if (typeof n == "object")
    if (Array.isArray(n)) {
      var s = n.length;
      for (e = 0; e < s; e++)
        n[e] && (t = Dd(n[e])) && (r && (r += " "), r += t);
    } else
      for (t in n)
        n[t] && (r && (r += " "), r += t);
  return r;
}
function f2() {
  for (var n, e, t = 0, r = "", s = arguments.length; t < s; t++)
    (n = arguments[t]) && (e = Dd(n)) && (r && (r += " "), r += e);
  return r;
}
const Ma = "-";
function m2(n) {
  const e = p2(n), {
    conflictingClassGroups: t,
    conflictingClassGroupModifiers: r
  } = n;
  function s(o) {
    const a = o.split(Ma);
    return a[0] === "" && a.length !== 1 && a.shift(), Hd(a, e) || h2(o);
  }
  function i(o, a) {
    const l = t[o] || [];
    return a && r[o] ? [...l, ...r[o]] : l;
  }
  return {
    getClassGroupId: s,
    getConflictingClassGroupIds: i
  };
}
function Hd(n, e) {
  var o;
  if (n.length === 0)
    return e.classGroupId;
  const t = n[0], r = e.nextPart.get(t), s = r ? Hd(n.slice(1), r) : void 0;
  if (s)
    return s;
  if (e.validators.length === 0)
    return;
  const i = n.join(Ma);
  return (o = e.validators.find(({
    validator: a
  }) => a(i))) == null ? void 0 : o.classGroupId;
}
const xc = /^\[(.+)\]$/;
function h2(n) {
  if (xc.test(n)) {
    const e = xc.exec(n)[1], t = e == null ? void 0 : e.substring(0, e.indexOf(":"));
    if (t)
      return "arbitrary.." + t;
  }
}
function p2(n) {
  const {
    theme: e,
    prefix: t
  } = n, r = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return b2(Object.entries(n.classGroups), t).forEach(([i, o]) => {
    Lo(o, r, i, e);
  }), r;
}
function Lo(n, e, t, r) {
  n.forEach((s) => {
    if (typeof s == "string") {
      const i = s === "" ? e : wc(e, s);
      i.classGroupId = t;
      return;
    }
    if (typeof s == "function") {
      if (g2(s)) {
        Lo(s(r), e, t, r);
        return;
      }
      e.validators.push({
        validator: s,
        classGroupId: t
      });
      return;
    }
    Object.entries(s).forEach(([i, o]) => {
      Lo(o, wc(e, i), t, r);
    });
  });
}
function wc(n, e) {
  let t = n;
  return e.split(Ma).forEach((r) => {
    t.nextPart.has(r) || t.nextPart.set(r, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), t = t.nextPart.get(r);
  }), t;
}
function g2(n) {
  return n.isThemeGetter;
}
function b2(n, e) {
  return e ? n.map(([t, r]) => {
    const s = r.map((i) => typeof i == "string" ? e + i : typeof i == "object" ? Object.fromEntries(Object.entries(i).map(([o, a]) => [e + o, a])) : i);
    return [t, s];
  }) : n;
}
function y2(n) {
  if (n < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let e = 0, t = /* @__PURE__ */ new Map(), r = /* @__PURE__ */ new Map();
  function s(i, o) {
    t.set(i, o), e++, e > n && (e = 0, r = t, t = /* @__PURE__ */ new Map());
  }
  return {
    get(i) {
      let o = t.get(i);
      if (o !== void 0)
        return o;
      if ((o = r.get(i)) !== void 0)
        return s(i, o), o;
    },
    set(i, o) {
      t.has(i) ? t.set(i, o) : s(i, o);
    }
  };
}
const Id = "!";
function v2(n) {
  const e = n.separator, t = e.length === 1, r = e[0], s = e.length;
  return function(o) {
    const a = [];
    let l = 0, c = 0, d;
    for (let y = 0; y < o.length; y++) {
      let v = o[y];
      if (l === 0) {
        if (v === r && (t || o.slice(y, y + s) === e)) {
          a.push(o.slice(c, y)), c = y + s;
          continue;
        }
        if (v === "/") {
          d = y;
          continue;
        }
      }
      v === "[" ? l++ : v === "]" && l--;
    }
    const f = a.length === 0 ? o : o.substring(c), m = f.startsWith(Id), h = m ? f.substring(1) : f, p = d && d > c ? d - c : void 0;
    return {
      modifiers: a,
      hasImportantModifier: m,
      baseClassName: h,
      maybePostfixModifierPosition: p
    };
  };
}
function x2(n) {
  if (n.length <= 1)
    return n;
  const e = [];
  let t = [];
  return n.forEach((r) => {
    r[0] === "[" ? (e.push(...t.sort(), r), t = []) : t.push(r);
  }), e.push(...t.sort()), e;
}
function w2(n) {
  return {
    cache: y2(n.cacheSize),
    splitModifiers: v2(n),
    ...m2(n)
  };
}
const N2 = /\s+/;
function k2(n, e) {
  const {
    splitModifiers: t,
    getClassGroupId: r,
    getConflictingClassGroupIds: s
  } = e, i = /* @__PURE__ */ new Set();
  return n.trim().split(N2).map((o) => {
    const {
      modifiers: a,
      hasImportantModifier: l,
      baseClassName: c,
      maybePostfixModifierPosition: d
    } = t(o);
    let f = r(d ? c.substring(0, d) : c), m = !!d;
    if (!f) {
      if (!d)
        return {
          isTailwindClass: !1,
          originalClassName: o
        };
      if (f = r(c), !f)
        return {
          isTailwindClass: !1,
          originalClassName: o
        };
      m = !1;
    }
    const h = x2(a).join(":");
    return {
      isTailwindClass: !0,
      modifierId: l ? h + Id : h,
      classGroupId: f,
      originalClassName: o,
      hasPostfixModifier: m
    };
  }).reverse().filter((o) => {
    if (!o.isTailwindClass)
      return !0;
    const {
      modifierId: a,
      classGroupId: l,
      hasPostfixModifier: c
    } = o, d = a + l;
    return i.has(d) ? !1 : (i.add(d), s(l, c).forEach((f) => i.add(a + f)), !0);
  }).reverse().map((o) => o.originalClassName).join(" ");
}
function M2() {
  let n = 0, e, t, r = "";
  for (; n < arguments.length; )
    (e = arguments[n++]) && (t = Pd(e)) && (r && (r += " "), r += t);
  return r;
}
function Pd(n) {
  if (typeof n == "string")
    return n;
  let e, t = "";
  for (let r = 0; r < n.length; r++)
    n[r] && (e = Pd(n[r])) && (t && (t += " "), t += e);
  return t;
}
function C2(n, ...e) {
  let t, r, s, i = o;
  function o(l) {
    const c = e.reduce((d, f) => f(d), n());
    return t = w2(c), r = t.cache.get, s = t.cache.set, i = a, a(l);
  }
  function a(l) {
    const c = r(l);
    if (c)
      return c;
    const d = k2(l, t);
    return s(l, d), d;
  }
  return function() {
    return i(M2.apply(null, arguments));
  };
}
function Ce(n) {
  const e = (t) => t[n] || [];
  return e.isThemeGetter = !0, e;
}
const Ld = /^\[(?:([a-z-]+):)?(.+)\]$/i, R2 = /^\d+\/\d+$/, E2 = /* @__PURE__ */ new Set(["px", "full", "screen"]), S2 = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, A2 = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, O2 = /^-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, T2 = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/;
function Wt(n) {
  return Pn(n) || E2.has(n) || R2.test(n);
}
function rn(n) {
  return Pr(n, "length", $2);
}
function Pn(n) {
  return !!n && !Number.isNaN(Number(n));
}
function Hs(n) {
  return Pr(n, "number", Pn);
}
function $r(n) {
  return !!n && Number.isInteger(Number(n));
}
function _2(n) {
  return n.endsWith("%") && Pn(n.slice(0, -1));
}
function ce(n) {
  return Ld.test(n);
}
function sn(n) {
  return S2.test(n);
}
const D2 = /* @__PURE__ */ new Set(["length", "size", "percentage"]);
function H2(n) {
  return Pr(n, D2, Zd);
}
function I2(n) {
  return Pr(n, "position", Zd);
}
const P2 = /* @__PURE__ */ new Set(["image", "url"]);
function L2(n) {
  return Pr(n, P2, z2);
}
function Z2(n) {
  return Pr(n, "", V2);
}
function Vr() {
  return !0;
}
function Pr(n, e, t) {
  const r = Ld.exec(n);
  return r ? r[1] ? typeof e == "string" ? r[1] === e : e.has(r[1]) : t(r[2]) : !1;
}
function $2(n) {
  return A2.test(n);
}
function Zd() {
  return !1;
}
function V2(n) {
  return O2.test(n);
}
function z2(n) {
  return T2.test(n);
}
function F2() {
  const n = Ce("colors"), e = Ce("spacing"), t = Ce("blur"), r = Ce("brightness"), s = Ce("borderColor"), i = Ce("borderRadius"), o = Ce("borderSpacing"), a = Ce("borderWidth"), l = Ce("contrast"), c = Ce("grayscale"), d = Ce("hueRotate"), f = Ce("invert"), m = Ce("gap"), h = Ce("gradientColorStops"), p = Ce("gradientColorStopPositions"), y = Ce("inset"), v = Ce("margin"), k = Ce("opacity"), P = Ce("padding"), q = Ce("saturate"), te = Ce("scale"), re = Ce("sepia"), V = Ce("skew"), K = Ce("space"), w = Ce("translate"), b = () => ["auto", "contain", "none"], M = () => ["auto", "hidden", "clip", "visible", "scroll"], S = () => ["auto", ce, e], _ = () => [ce, e], J = () => ["", Wt, rn], H = () => ["auto", Pn, ce], I = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], E = () => ["solid", "dashed", "dotted", "double", "none"], C = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity", "plus-lighter"], A = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], x = () => ["", "0", ce], O = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], $ = () => [Pn, Hs], N = () => [Pn, ce];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [Vr],
      spacing: [Wt, rn],
      blur: ["none", "", sn, ce],
      brightness: $(),
      borderColor: [n],
      borderRadius: ["none", "", "full", sn, ce],
      borderSpacing: _(),
      borderWidth: J(),
      contrast: $(),
      grayscale: x(),
      hueRotate: N(),
      invert: x(),
      gap: _(),
      gradientColorStops: [n],
      gradientColorStopPositions: [_2, rn],
      inset: S(),
      margin: S(),
      opacity: $(),
      padding: _(),
      saturate: $(),
      scale: $(),
      sepia: x(),
      skew: N(),
      space: _(),
      translate: _()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", ce]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [sn]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": O()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": O()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...I(), ce]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: M()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": M()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": M()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: b()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": b()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": b()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [y]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [y]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [y]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [y]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [y]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [y]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [y]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [y]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [y]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", $r, ce]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: S()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", ce]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: x()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: x()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", $r, ce]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [Vr]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", $r, ce]
        }, ce]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": H()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": H()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [Vr]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [$r, ce]
        }, ce]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": H()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": H()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", ce]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", ce]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [m]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [m]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [m]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...A()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...A(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...A(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [P]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [P]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [P]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [P]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [P]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [P]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [P]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [P]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [P]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [v]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [v]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [v]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [v]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [v]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [v]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [v]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [v]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [v]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [K]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [K]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", ce, e]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [ce, e, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [ce, e, "none", "full", "min", "max", "fit", "prose", {
          screen: [sn]
        }, sn]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [ce, e, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [ce, e, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [ce, e, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [ce, e, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", sn, rn]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", Hs]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [Vr]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractons"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", ce]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", Pn, Hs]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", Wt, ce]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", ce]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", ce]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [n]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [k]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [n]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [k]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...E(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", Wt, rn]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", Wt, ce]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [n]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: _()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", ce]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", ce]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [k]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...I(), I2]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", H2]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, L2]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [n]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [p]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [p]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [p]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [h]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [h]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [h]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [i]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [i]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [i]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [i]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [i]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [i]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [i]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [i]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [i]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [i]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [i]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [i]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [i]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [i]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [i]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [a]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [a]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [a]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [a]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [a]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [a]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [a]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [a]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [a]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [k]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...E(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [a]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [a]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [k]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: E()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [s]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [s]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [s]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [s]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [s]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [s]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [s]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [s]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...E()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [Wt, ce]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [Wt, rn]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [n]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: J()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [n]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [k]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [Wt, rn]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [n]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", sn, Z2]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [Vr]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [k]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": C()
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": C()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [t]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [r]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [l]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", sn, ce]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [c]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [d]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [f]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [q]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [re]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [t]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [r]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [l]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [c]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [d]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [f]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [k]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [q]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [re]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [o]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [o]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [o]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", ce]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: N()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", ce]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: N()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", ce]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [te]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [te]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [te]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [$r, ce]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [w]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [w]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [V]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [V]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", ce]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", n]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", ce]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [n]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": _()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": _()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": _()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": _()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": _()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": _()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": _()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": _()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": _()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": _()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": _()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": _()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": _()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": _()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": _()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": _()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": _()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": _()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", ce]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [n, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [Wt, rn, Hs]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [n, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}
const j2 = /* @__PURE__ */ C2(F2), T = (...n) => j2(f2(n)), _3 = Kn.Root, U2 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(Kn.Item, { ref: t, className: T("border-b", n), ...e }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/accordion.tsx",
  lineNumber: 12,
  columnNumber: 3
}, void 0));
U2.displayName = "AccordionItem";
const B2 = R(({ className: n, children: e, ...t }, r) => /* @__PURE__ */ g(Kn.Header, { className: "flex", children: /* @__PURE__ */ g(
  Kn.Trigger,
  {
    ref: r,
    className: T(
      "flex flex-1 items-center justify-between py-4 font-medium leading-none outline-none transition-all hover:underline focus-visible:bg-secondary-accent [&[data-state=open]>svg]:rotate-180",
      n
    ),
    ...t,
    children: [
      e,
      /* @__PURE__ */ g(Na, { className: "size-4 shrink-0 transition-transform duration-200" }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/accordion.tsx",
        lineNumber: 31,
        columnNumber: 7
      }, void 0)
    ]
  },
  void 0,
  !0,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/accordion.tsx",
    lineNumber: 22,
    columnNumber: 5
  },
  void 0
) }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/accordion.tsx",
  lineNumber: 21,
  columnNumber: 3
}, void 0));
B2.displayName = Kn.Trigger.displayName;
const W2 = R(({ className: n, children: e, ...t }, r) => /* @__PURE__ */ g(
  Kn.Content,
  {
    ref: r,
    className: T(
      "overflow-hidden text-sm leading-relaxed transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down",
      n
    ),
    ...t,
    children: /* @__PURE__ */ g("div", { className: "pb-4 pt-0", children: e }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/accordion.tsx",
      lineNumber: 50,
      columnNumber: 5
    }, void 0)
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/accordion.tsx",
    lineNumber: 42,
    columnNumber: 3
  },
  void 0
));
W2.displayName = Kn.Content.displayName;
function $d(n) {
  var e, t, r = "";
  if (typeof n == "string" || typeof n == "number")
    r += n;
  else if (typeof n == "object")
    if (Array.isArray(n))
      for (e = 0; e < n.length; e++)
        n[e] && (t = $d(n[e])) && (r && (r += " "), r += t);
    else
      for (e in n)
        n[e] && (r && (r += " "), r += e);
  return r;
}
function q2() {
  for (var n, e, t = 0, r = ""; t < arguments.length; )
    (n = arguments[t++]) && (e = $d(n)) && (r && (r += " "), r += e);
  return r;
}
const Nc = (n) => typeof n == "boolean" ? "".concat(n) : n === 0 ? "0" : n, kc = q2, sr = (n, e) => (t) => {
  var r;
  if ((e == null ? void 0 : e.variants) == null)
    return kc(n, t == null ? void 0 : t.class, t == null ? void 0 : t.className);
  const { variants: s, defaultVariants: i } = e, o = Object.keys(s).map((c) => {
    const d = t == null ? void 0 : t[c], f = i == null ? void 0 : i[c];
    if (d === null)
      return null;
    const m = Nc(d) || Nc(f);
    return s[c][m];
  }), a = t && Object.entries(t).reduce((c, d) => {
    let [f, m] = d;
    return m === void 0 || (c[f] = m), c;
  }, {}), l = e == null || (r = e.compoundVariants) === null || r === void 0 ? void 0 : r.reduce((c, d) => {
    let { class: f, className: m, ...h } = d;
    return Object.entries(h).every((p) => {
      let [y, v] = p;
      return Array.isArray(v) ? v.includes({
        ...i,
        ...a
      }[y]) : {
        ...i,
        ...a
      }[y] === v;
    }) ? [
      ...c,
      f,
      m
    ] : c;
  }, []);
  return kc(n, o, l, t == null ? void 0 : t.class, t == null ? void 0 : t.className);
}, K2 = sr(
  "relative w-full rounded p-4 transition-colors [&>svg+div]:translate-y-[-4px] [&>svg]:absolute [&>svg]:left-3.5 [&>svg]:top-[18px] [&>svg~*]:pl-6",
  {
    variants: {
      variant: {
        default: "border bg-background text-foreground [&>svg]:text-foreground",
        primary: "bg-primary text-primary-foreground [&>svg]:text-primary-foreground",
        secondary: "bg-secondary text-secondary-foreground [&>svg]:text-secondary-foreground",
        error: "bg-error text-error-foreground [&>svg]:text-error-foreground",
        warning: "bg-warning text-warning-foreground [&>svg]:text-warning-foreground",
        info: "bg-info text-info-foreground [&>svg]:text-info-foreground",
        success: "bg-success text-success-foreground [&>svg]:text-success-foreground"
      }
    },
    defaultVariants: {
      variant: "default"
    }
  }
), J2 = R(
  ({ className: n, variant: e, ...t }, r) => /* @__PURE__ */ g("div", { ref: r, role: "alert", className: T(K2({ variant: e }), n), ...t }, void 0, !1, {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/alert.tsx",
    lineNumber: 16,
    columnNumber: 5
  }, void 0)
);
J2.displayName = "Alert";
const G2 = R(({ className: n, children: e, ...t }, r) => /* @__PURE__ */ g("h5", { ref: r, className: T("font-medium tracking-tight", n), ...t, children: e }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/alert.tsx",
  lineNumber: 26,
  columnNumber: 3
}, void 0));
G2.displayName = "AlertTitle";
const Y2 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g("div", { ref: t, className: T("pt-0.5 leading-normal", n), ...e }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/alert.tsx",
  lineNumber: 37,
  columnNumber: 3
}, void 0));
Y2.displayName = "AlertDescription";
const Ca = sr(
  "inline-flex scale-100 items-center justify-center rounded-sm text-sm font-medium ring-offset-background transition-[transform,background-color] focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-primary focus-visible:ring-offset-2 active:scale-95 disabled:pointer-events-none disabled:opacity-50",
  {
    variants: {
      variant: {
        primary: "bg-primary text-primary-foreground hover:bg-primary/80",
        secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
        error: "bg-error text-error-foreground hover:bg-error/80",
        warning: "bg-warning text-warning-foreground hover:bg-warning/80",
        info: "bg-info text-info-foreground hover:bg-info/80",
        success: "bg-success text-success-foreground hover:bg-success/80",
        outline: "border border-secondary bg-transparent hover:bg-secondary hover:text-secondary-foreground",
        ghost: "hover:bg-secondary hover:text-secondary-foreground",
        link: "text-primary underline-offset-4 hover:underline"
      },
      size: {
        sm: "h-8 px-4 text-xs",
        md: "h-9 px-5",
        lg: "h-10 px-6",
        icon: "size-9"
      }
    },
    compoundVariants: [
      { variant: "link", size: "sm", className: "h-auto px-0" },
      { variant: "link", size: "md", className: "h-auto px-0" },
      { variant: "link", size: "lg", className: "h-auto px-0" }
    ],
    defaultVariants: {
      variant: "primary",
      size: "md"
    }
  }
), D3 = Qe.Root, H3 = Qe.Trigger, Vd = (n) => /* @__PURE__ */ g(Qe.Portal, { ...n }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/alert-dialog.tsx",
  lineNumber: 13,
  columnNumber: 3
}, void 0);
Vd.displayName = Qe.Portal.displayName;
const zd = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  Qe.Overlay,
  {
    className: T(
      "fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      n
    ),
    ...e,
    ref: t
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/alert-dialog.tsx",
    lineNumber: 22,
    columnNumber: 3
  },
  void 0
));
zd.displayName = Qe.Overlay.displayName;
const Q2 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(Vd, { children: [
  /* @__PURE__ */ g(zd, {}, void 0, !1, {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/alert-dialog.tsx",
    lineNumber: 39,
    columnNumber: 5
  }, void 0),
  /* @__PURE__ */ g(
    Qe.Content,
    {
      ref: t,
      className: T(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 rounded border bg-background p-6 duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] md:w-full",
        n
      ),
      ...e
    },
    void 0,
    !1,
    {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/alert-dialog.tsx",
      lineNumber: 40,
      columnNumber: 5
    },
    void 0
  )
] }, void 0, !0, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/alert-dialog.tsx",
  lineNumber: 38,
  columnNumber: 3
}, void 0));
Q2.displayName = Qe.Content.displayName;
const X2 = ({
  className: n,
  ...e
}) => /* @__PURE__ */ g("div", { className: T("flex flex-col space-y-2 text-center sm:text-left", n), ...e }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/alert-dialog.tsx",
  lineNumber: 57,
  columnNumber: 3
}, void 0);
X2.displayName = "AlertDialogHeader";
const e8 = ({
  className: n,
  ...e
}) => /* @__PURE__ */ g(
  "div",
  {
    className: T("mt-4 flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-4", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/alert-dialog.tsx",
    lineNumber: 66,
    columnNumber: 3
  },
  void 0
);
e8.displayName = "AlertDialogFooter";
const t8 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  Qe.Title,
  {
    ref: t,
    className: T("text-base font-medium", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/alert-dialog.tsx",
    lineNumber: 78,
    columnNumber: 3
  },
  void 0
));
t8.displayName = Qe.Title.displayName;
const n8 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  Qe.Description,
  {
    ref: t,
    className: T("text-sm leading-relaxed", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/alert-dialog.tsx",
    lineNumber: 91,
    columnNumber: 3
  },
  void 0
));
n8.displayName = Qe.Description.displayName;
const r8 = R(({ className: n, variant: e, ...t }, r) => /* @__PURE__ */ g(
  Qe.Action,
  {
    ref: r,
    className: T(Ca({ variant: e }), n),
    ...t
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/alert-dialog.tsx",
    lineNumber: 108,
    columnNumber: 3
  },
  void 0
));
r8.displayName = Qe.Action.displayName;
const s8 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  Qe.Cancel,
  {
    ref: t,
    className: T(Ca({ variant: "outline" }), "mt-2 sm:mt-0", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/alert-dialog.tsx",
    lineNumber: 121,
    columnNumber: 3
  },
  void 0
));
s8.displayName = Qe.Cancel.displayName;
const I3 = rm.Root, i8 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  Ir.Root,
  {
    ref: t,
    className: T("relative flex size-10 shrink-0 overflow-hidden rounded-full", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/avatar.tsx",
    lineNumber: 9,
    columnNumber: 3
  },
  void 0
));
i8.displayName = Ir.Root.displayName;
const o8 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  Ir.Image,
  {
    ref: t,
    className: T("aspect-square size-full object-cover", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/avatar.tsx",
    lineNumber: 22,
    columnNumber: 3
  },
  void 0
));
o8.displayName = Ir.Image.displayName;
const a8 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  Ir.Fallback,
  {
    ref: t,
    className: T(
      "flex size-full items-center justify-center rounded-full bg-secondary",
      n
    ),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/avatar.tsx",
    lineNumber: 35,
    columnNumber: 3
  },
  void 0
));
a8.displayName = Ir.Fallback.displayName;
const l8 = sr(
  "inline-flex items-center rounded-full border px-3 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2",
  {
    variants: {
      variant: {
        primary: "border-primary bg-primary text-primary-foreground",
        secondary: "border-secondary bg-secondary text-secondary-foreground",
        error: "border-error bg-error text-error-foreground",
        warning: "border-warning bg-warning text-warning-foreground",
        info: "border-info bg-info text-info-foreground",
        success: "border-success bg-success text-success-foreground"
      },
      outline: {
        true: "bg-transparent"
      }
    },
    compoundVariants: [
      { outline: !0, variant: "primary", className: "text-primary" },
      { outline: !0, variant: "secondary", className: "text-secondary" },
      { outline: !0, variant: "error", className: "text-error" },
      { outline: !0, variant: "warning", className: "text-warning" },
      { outline: !0, variant: "info", className: "text-info" },
      { outline: !0, variant: "success", className: "text-success" }
    ],
    defaultVariants: {
      variant: "primary",
      outline: !1
    }
  }
), P3 = ({ className: n, variant: e, outline: t, ...r }) => /* @__PURE__ */ g("div", { className: T(l8({ variant: e, outline: t }), n), ...r }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/badge.tsx",
  lineNumber: 11,
  columnNumber: 3
}, void 0), Gs = R(
  ({ className: n, type: e, hasError: t = !1, ...r }, s) => /* @__PURE__ */ g(
    "input",
    {
      ref: s,
      type: e,
      autoComplete: "off",
      className: T(
        "flex h-9 w-full rounded border border-border bg-transparent px-3 py-0.5 !text-sm ring-0 ring-offset-transparent transition-colors [appearance:textfield] placeholder:opacity-80 hover:bg-secondary/20 focus:border-primary focus:bg-secondary/20 focus-visible:outline-none focus-visible:ring-0 disabled:cursor-not-allowed disabled:opacity-50 [&::-webkit-inner-spin-button]:appearance-none [&::-webkit-outer-spin-button]:appearance-none",
        "file:border-0 file:bg-transparent file:pt-1 file:text-sm file:font-medium file:text-primary",
        t ? "border-error" : "border-border",
        n
      ),
      ...r
    },
    void 0,
    !1,
    {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/input.tsx",
      lineNumber: 10,
      columnNumber: 5
    },
    void 0
  )
);
Gs.displayName = "Input";
const L3 = R(
  ({ value: n, onChange: e, setPendingKeyword: t, ...r }, s) => {
    const [i, o] = Es(""), a = qr(() => {
      const c = i.split(",").map((d) => d.trim()).filter(Boolean).filter((d) => !n.includes(d));
      e([.../* @__PURE__ */ new Set([...n, ...c])]), o("");
    }, [i, n, e]);
    return vr(() => {
      i.includes(",") && a();
    }, [i, a]), vr(() => {
      t && t(i);
    }, [i, t]), /* @__PURE__ */ g(
      Gs,
      {
        ...r,
        ref: s,
        value: i,
        onKeyDown: (c) => {
          c.key === "Enter" && (c.preventDefault(), c.stopPropagation(), a());
        },
        onChange: (c) => o(c.target.value)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/badge-input.tsx",
        lineNumber: 45,
        columnNumber: 7
      },
      void 0
    );
  }
), Nt = R(
  ({ className: n, variant: e, size: t, asChild: r = !1, ...s }, i) => /* @__PURE__ */ g(
    r ? Gu : "button",
    {
      ref: i,
      className: T(Ca({ variant: e, size: t, className: n })),
      ...s
    },
    void 0,
    !1,
    {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/button.tsx",
      lineNumber: 19,
      columnNumber: 7
    },
    void 0
  )
);
Nt.displayName = "Button";
const c8 = R(
  ({ className: n, ...e }, t) => /* @__PURE__ */ g(
    "div",
    {
      ref: t,
      className: T("flex flex-col space-y-3 rounded border bg-background p-6", n),
      ...e
    },
    void 0,
    !1,
    {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/card.tsx",
      lineNumber: 6,
      columnNumber: 5
    },
    void 0
  )
);
c8.displayName = "Card";
const u8 = R(
  ({ className: n, ...e }, t) => /* @__PURE__ */ g("div", { ref: t, className: T("flex flex-col space-y-1", n), ...e }, void 0, !1, {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/card.tsx",
    lineNumber: 18,
    columnNumber: 5
  }, void 0)
);
u8.displayName = "CardHeader";
const d8 = R(
  ({ className: n, ...e }, t) => /* @__PURE__ */ g(
    "h3",
    {
      ref: t,
      className: T("font-semibold leading-normal tracking-tight", n),
      ...e,
      children: e.children
    },
    void 0,
    !1,
    {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/card.tsx",
      lineNumber: 26,
      columnNumber: 5
    },
    void 0
  )
);
d8.displayName = "CardTitle";
const f8 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  "div",
  {
    ref: t,
    className: T("text-xs font-medium leading-relaxed opacity-80", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/card.tsx",
    lineNumber: 42,
    columnNumber: 3
  },
  void 0
));
f8.displayName = "CardDescription";
const m8 = R(
  ({ className: n, ...e }, t) => /* @__PURE__ */ g("div", { ref: t, className: n, ...e }, void 0, !1, {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/card.tsx",
    lineNumber: 52,
    columnNumber: 37
  }, void 0)
);
m8.displayName = "CardContent";
const h8 = R(
  ({ className: n, ...e }, t) => /* @__PURE__ */ g("div", { ref: t, className: T("flex items-center", n), ...e }, void 0, !1, {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/card.tsx",
    lineNumber: 59,
    columnNumber: 5
  }, void 0)
);
h8.displayName = "CardFooter";
const p8 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  Ho.Root,
  {
    ref: t,
    className: T(
      "peer size-4 shrink-0 rounded border border-primary focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-primary disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground",
      n
    ),
    ...e,
    children: /* @__PURE__ */ g(Ho.Indicator, { className: T("flex items-center justify-center text-current"), children: /* @__PURE__ */ g(rr, { size: 12, weight: "bold" }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/checkbox.tsx",
      lineNumber: 19,
      columnNumber: 7
    }, void 0) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/checkbox.tsx",
      lineNumber: 18,
      columnNumber: 5
    }, void 0)
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/checkbox.tsx",
    lineNumber: 10,
    columnNumber: 3
  },
  void 0
));
p8.displayName = Ho.Root.displayName;
var Mc = 1, g8 = 0.9, b8 = 0.3, to = 0.1, y8 = 0, no = 0.999, v8 = 0.9999, x8 = 0.99, Cc = /[\\\/\-_+.# \t"@\[\(\{&]/, w8 = /[\\\/\-_+.# \t"@\[\(\{&]/g;
function Zo(n, e, t, r, s, i) {
  if (i === e.length)
    return s === n.length ? Mc : x8;
  for (var o = r.charAt(i), a = t.indexOf(o, s), l = 0, c, d, f; a >= 0; )
    c = Zo(n, e, t, r, a + 1, i + 1), c > l && (a === s ? c *= Mc : Cc.test(n.charAt(a - 1)) ? (c *= g8, f = n.slice(s, a - 1).match(w8), f && s > 0 && (c *= Math.pow(no, f.length))) : Cc.test(n.slice(s, a - 1)) ? (c *= y8, s > 0 && (c *= Math.pow(no, a - s))) : (c *= b8, s > 0 && (c *= Math.pow(no, a - s))), n.charAt(a) !== e.charAt(i) && (c *= v8)), c < to && t.charAt(a - 1) === r.charAt(i + 1) && t.charAt(a - 1) !== r.charAt(i) && (d = Zo(n, e, t, r, a + 1, i + 2), d * to > c && (c = d * to)), c > l && (l = c), a = t.indexOf(o, a + 1);
  return l;
}
function N8(n, e) {
  return Zo(n, e, n.toLowerCase(), e.toLowerCase(), 0, 0);
}
var k8 = N8;
const M8 = /* @__PURE__ */ c2(k8);
var C8 = '[cmdk-list-sizer=""]', zr = '[cmdk-group=""]', ro = '[cmdk-group-items=""]', R8 = '[cmdk-group-heading=""]', Fd = '[cmdk-item=""]', Rc = `${Fd}:not([aria-disabled="true"])`, $o = "cmdk-item-select", an = "data-value", E8 = (n, e) => M8(n, e), jd = W.createContext(void 0), Ss = () => W.useContext(jd), Ud = W.createContext(void 0), Ra = () => W.useContext(Ud), Bd = W.createContext(void 0), Wd = W.forwardRef((n, e) => {
  let t = W.useRef(null), r = cr(() => ({ search: "", value: "", filtered: { count: 0, items: /* @__PURE__ */ new Map(), groups: /* @__PURE__ */ new Set() } })), s = cr(() => /* @__PURE__ */ new Set()), i = cr(() => /* @__PURE__ */ new Map()), o = cr(() => /* @__PURE__ */ new Map()), a = cr(() => /* @__PURE__ */ new Set()), l = qd(n), { label: c, children: d, value: f, onValueChange: m, filter: h, shouldFilter: p, ...y } = n, v = W.useId(), k = W.useId(), P = W.useId(), q = Z8();
  Lr(() => {
    if (f !== void 0) {
      let x = f.trim().toLowerCase();
      r.current.value = x, q(6, M), te.emit();
    }
  }, [f]);
  let te = W.useMemo(() => ({ subscribe: (x) => (a.current.add(x), () => a.current.delete(x)), snapshot: () => r.current, setState: (x, O, $) => {
    var N, z, ne;
    if (!Object.is(r.current[x], O)) {
      if (r.current[x] = O, x === "search")
        b(), K(), q(1, w);
      else if (x === "value")
        if (((N = l.current) == null ? void 0 : N.value) !== void 0) {
          (ne = (z = l.current).onValueChange) == null || ne.call(z, O);
          return;
        } else
          $ || q(5, M);
      te.emit();
    }
  }, emit: () => {
    a.current.forEach((x) => x());
  } }), []), re = W.useMemo(() => ({ value: (x, O) => {
    O !== o.current.get(x) && (o.current.set(x, O), r.current.filtered.items.set(x, V(O)), q(2, () => {
      K(), te.emit();
    }));
  }, item: (x, O) => (s.current.add(x), O && (i.current.has(O) ? i.current.get(O).add(x) : i.current.set(O, /* @__PURE__ */ new Set([x]))), q(3, () => {
    b(), K(), r.current.value || w(), te.emit();
  }), () => {
    o.current.delete(x), s.current.delete(x), r.current.filtered.items.delete(x), q(4, () => {
      b(), w(), te.emit();
    });
  }), group: (x) => (i.current.has(x) || i.current.set(x, /* @__PURE__ */ new Set()), () => {
    o.current.delete(x), i.current.delete(x);
  }), filter: () => l.current.shouldFilter, label: c || n["aria-label"], listId: v, inputId: P, labelId: k }), []);
  function V(x) {
    var O;
    let $ = ((O = l.current) == null ? void 0 : O.filter) ?? E8;
    return x ? $(x, r.current.search) : 0;
  }
  function K() {
    if (!t.current || !r.current.search || l.current.shouldFilter === !1)
      return;
    let x = r.current.filtered.items, O = [];
    r.current.filtered.groups.forEach((N) => {
      let z = i.current.get(N), ne = 0;
      z.forEach((le) => {
        let xe = x.get(le);
        ne = Math.max(xe, ne);
      }), O.push([N, ne]);
    });
    let $ = t.current.querySelector(C8);
    _().sort((N, z) => {
      let ne = N.getAttribute(an), le = z.getAttribute(an);
      return (x.get(le) ?? 0) - (x.get(ne) ?? 0);
    }).forEach((N) => {
      let z = N.closest(ro);
      z ? z.appendChild(N.parentElement === z ? N : N.closest(`${ro} > *`)) : $.appendChild(N.parentElement === $ ? N : N.closest(`${ro} > *`));
    }), O.sort((N, z) => z[1] - N[1]).forEach((N) => {
      let z = t.current.querySelector(`${zr}[${an}="${N[0]}"]`);
      z == null || z.parentElement.appendChild(z);
    });
  }
  function w() {
    let x = _().find(($) => !$.ariaDisabled), O = x == null ? void 0 : x.getAttribute(an);
    te.setState("value", O || void 0);
  }
  function b() {
    if (!r.current.search || l.current.shouldFilter === !1) {
      r.current.filtered.count = s.current.size;
      return;
    }
    r.current.filtered.groups = /* @__PURE__ */ new Set();
    let x = 0;
    for (let O of s.current) {
      let $ = o.current.get(O), N = V($);
      r.current.filtered.items.set(O, N), N > 0 && x++;
    }
    for (let [O, $] of i.current)
      for (let N of $)
        if (r.current.filtered.items.get(N) > 0) {
          r.current.filtered.groups.add(O);
          break;
        }
    r.current.filtered.count = x;
  }
  function M() {
    var x, O, $;
    let N = S();
    N && (((x = N.parentElement) == null ? void 0 : x.firstChild) === N && (($ = (O = N.closest(zr)) == null ? void 0 : O.querySelector(R8)) == null || $.scrollIntoView({ block: "nearest" })), N.scrollIntoView({ block: "nearest" }));
  }
  function S() {
    return t.current.querySelector(`${Fd}[aria-selected="true"]`);
  }
  function _() {
    return Array.from(t.current.querySelectorAll(Rc));
  }
  function J(x) {
    let O = _()[x];
    O && te.setState("value", O.getAttribute(an));
  }
  function H(x) {
    var O;
    let $ = S(), N = _(), z = N.findIndex((le) => le === $), ne = N[z + x];
    (O = l.current) != null && O.loop && (ne = z + x < 0 ? N[N.length - 1] : z + x === N.length ? N[0] : N[z + x]), ne && te.setState("value", ne.getAttribute(an));
  }
  function I(x) {
    let O = S(), $ = O == null ? void 0 : O.closest(zr), N;
    for (; $ && !N; )
      $ = x > 0 ? P8($, zr) : L8($, zr), N = $ == null ? void 0 : $.querySelector(Rc);
    N ? te.setState("value", N.getAttribute(an)) : H(x);
  }
  let E = () => J(_().length - 1), C = (x) => {
    x.preventDefault(), x.metaKey ? E() : x.altKey ? I(1) : H(1);
  }, A = (x) => {
    x.preventDefault(), x.metaKey ? J(0) : x.altKey ? I(-1) : H(-1);
  };
  return W.createElement("div", { ref: As([t, e]), ...y, "cmdk-root": "", onKeyDown: (x) => {
    var O;
    if ((O = y.onKeyDown) == null || O.call(y, x), !x.defaultPrevented)
      switch (x.key) {
        case "n":
        case "j": {
          x.ctrlKey && C(x);
          break;
        }
        case "ArrowDown": {
          C(x);
          break;
        }
        case "p":
        case "k": {
          x.ctrlKey && A(x);
          break;
        }
        case "ArrowUp": {
          A(x);
          break;
        }
        case "Home": {
          x.preventDefault(), J(0);
          break;
        }
        case "End": {
          x.preventDefault(), E();
          break;
        }
        case "Enter": {
          x.preventDefault();
          let $ = S();
          if ($) {
            let N = new Event($o);
            $.dispatchEvent(N);
          }
        }
      }
  } }, W.createElement("label", { "cmdk-label": "", htmlFor: re.inputId, id: re.labelId, style: $8 }, c), W.createElement(Ud.Provider, { value: te }, W.createElement(jd.Provider, { value: re }, d)));
}), S8 = W.forwardRef((n, e) => {
  let t = W.useId(), r = W.useRef(null), s = W.useContext(Bd), i = Ss(), o = qd(n);
  Lr(() => i.item(t, s), []);
  let a = Kd(t, r, [n.value, n.children, r]), l = Ra(), c = Er((k) => k.value && k.value === a.current), d = Er((k) => i.filter() === !1 ? !0 : k.search ? k.filtered.items.get(t) > 0 : !0);
  W.useEffect(() => {
    let k = r.current;
    if (!(!k || n.disabled))
      return k.addEventListener($o, f), () => k.removeEventListener($o, f);
  }, [d, n.onSelect, n.disabled]);
  function f() {
    var k, P;
    (P = (k = o.current).onSelect) == null || P.call(k, a.current);
  }
  function m() {
    l.setState("value", a.current, !0);
  }
  if (!d)
    return null;
  let { disabled: h, value: p, onSelect: y, ...v } = n;
  return W.createElement("div", { ref: As([r, e]), ...v, "cmdk-item": "", role: "option", "aria-disabled": h || void 0, "aria-selected": c || void 0, "data-selected": c || void 0, onPointerMove: h ? void 0 : m, onClick: h ? void 0 : f }, n.children);
}), A8 = W.forwardRef((n, e) => {
  let { heading: t, children: r, ...s } = n, i = W.useId(), o = W.useRef(null), a = W.useRef(null), l = W.useId(), c = Ss(), d = Er((m) => c.filter() === !1 ? !0 : m.search ? m.filtered.groups.has(i) : !0);
  Lr(() => c.group(i), []), Kd(i, o, [n.value, n.heading, a]);
  let f = W.createElement(Bd.Provider, { value: i }, r);
  return W.createElement("div", { ref: As([o, e]), ...s, "cmdk-group": "", role: "presentation", hidden: d ? void 0 : !0 }, t && W.createElement("div", { ref: a, "cmdk-group-heading": "", "aria-hidden": !0, id: l }, t), W.createElement("div", { "cmdk-group-items": "", role: "group", "aria-labelledby": t ? l : void 0 }, f));
}), O8 = W.forwardRef((n, e) => {
  let { alwaysRender: t, ...r } = n, s = W.useRef(null), i = Er((o) => !o.search);
  return !t && !i ? null : W.createElement("div", { ref: As([s, e]), ...r, "cmdk-separator": "", role: "separator" });
}), T8 = W.forwardRef((n, e) => {
  let { onValueChange: t, ...r } = n, s = n.value != null, i = Ra(), o = Er((l) => l.search), a = Ss();
  return W.useEffect(() => {
    n.value != null && i.setState("search", n.value);
  }, [n.value]), W.createElement("input", { ref: e, ...r, "cmdk-input": "", autoComplete: "off", autoCorrect: "off", spellCheck: !1, "aria-autocomplete": "list", role: "combobox", "aria-expanded": !0, "aria-controls": a.listId, "aria-labelledby": a.labelId, id: a.inputId, type: "text", value: s ? n.value : o, onChange: (l) => {
    s || i.setState("search", l.target.value), t == null || t(l.target.value);
  } });
}), _8 = W.forwardRef((n, e) => {
  let { children: t, ...r } = n, s = W.useRef(null), i = W.useRef(null), o = Ss();
  return W.useEffect(() => {
    if (i.current && s.current) {
      let a = i.current, l = s.current, c, d = new ResizeObserver(() => {
        c = requestAnimationFrame(() => {
          let f = a.getBoundingClientRect().height;
          l.style.setProperty("--cmdk-list-height", f.toFixed(1) + "px");
        });
      });
      return d.observe(a), () => {
        cancelAnimationFrame(c), d.unobserve(a);
      };
    }
  }, []), W.createElement("div", { ref: As([s, e]), ...r, "cmdk-list": "", role: "listbox", "aria-label": "Suggestions", id: o.listId, "aria-labelledby": o.inputId }, W.createElement("div", { ref: i, "cmdk-list-sizer": "" }, t));
}), D8 = W.forwardRef((n, e) => {
  let { open: t, onOpenChange: r, container: s, ...i } = n;
  return W.createElement(be.Root, { open: t, onOpenChange: r }, W.createElement(be.Portal, { container: s }, W.createElement(be.Overlay, { "cmdk-overlay": "" }), W.createElement(be.Content, { "aria-label": n.label, "cmdk-dialog": "" }, W.createElement(Wd, { ref: e, ...i }))));
}), H8 = W.forwardRef((n, e) => {
  let t = W.useRef(!0), r = Er((s) => s.filtered.count === 0);
  return W.useEffect(() => {
    t.current = !1;
  }, []), t.current || !r ? null : W.createElement("div", { ref: e, ...n, "cmdk-empty": "", role: "presentation" });
}), I8 = W.forwardRef((n, e) => {
  let { progress: t, children: r, ...s } = n;
  return W.createElement("div", { ref: e, ...s, "cmdk-loading": "", role: "progressbar", "aria-valuenow": t, "aria-valuemin": 0, "aria-valuemax": 100, "aria-label": "Loading..." }, W.createElement("div", { "aria-hidden": !0 }, r));
}), ct = Object.assign(Wd, { List: _8, Item: S8, Input: T8, Group: A8, Separator: O8, Dialog: D8, Empty: H8, Loading: I8 });
function P8(n, e) {
  let t = n.nextElementSibling;
  for (; t; ) {
    if (t.matches(e))
      return t;
    t = t.nextElementSibling;
  }
}
function L8(n, e) {
  let t = n.previousElementSibling;
  for (; t; ) {
    if (t.matches(e))
      return t;
    t = t.previousElementSibling;
  }
}
function qd(n) {
  let e = W.useRef(n);
  return Lr(() => {
    e.current = n;
  }), e;
}
var Lr = typeof window > "u" ? W.useEffect : W.useLayoutEffect;
function cr(n) {
  let e = W.useRef();
  return e.current === void 0 && (e.current = n()), e;
}
function As(n) {
  return (e) => {
    n.forEach((t) => {
      typeof t == "function" ? t(e) : t != null && (t.current = e);
    });
  };
}
function Er(n) {
  let e = Ra(), t = () => n(e.snapshot());
  return W.useSyncExternalStore(e.subscribe, t, t);
}
function Kd(n, e, t) {
  let r = W.useRef(), s = Ss();
  return Lr(() => {
    var i;
    let o = (() => {
      var a;
      for (let l of t) {
        if (typeof l == "string")
          return l.trim().toLowerCase();
        if (typeof l == "object" && "current" in l && l.current)
          return (a = l.current.textContent) == null ? void 0 : a.trim().toLowerCase();
      }
    })();
    s.value(n, o), (i = e.current) == null || i.setAttribute(an, o), r.current = o;
  }), r;
}
var Z8 = () => {
  let [n, e] = W.useState(), t = cr(() => /* @__PURE__ */ new Map());
  return Lr(() => {
    t.current.forEach((r) => r()), t.current = /* @__PURE__ */ new Map();
  }, [n]), (r, s) => {
    t.current.set(r, s), e({});
  };
}, $8 = { position: "absolute", width: "1px", height: "1px", padding: "0", margin: "-1px", overflow: "hidden", clip: "rect(0, 0, 0, 0)", whiteSpace: "nowrap", borderWidth: "0" };
const V8 = be.Root, Z3 = be.Trigger, Jd = (n) => /* @__PURE__ */ g(be.Portal, { ...n }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dialog.tsx",
  lineNumber: 11,
  columnNumber: 3
}, void 0);
Jd.displayName = be.Portal.displayName;
const Gd = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  be.Overlay,
  {
    ref: t,
    className: T(
      "fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      n
    ),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dialog.tsx",
    lineNumber: 20,
    columnNumber: 3
  },
  void 0
));
Gd.displayName = be.Overlay.displayName;
const Yd = R(({ className: n, children: e, ...t }, r) => /* @__PURE__ */ g(Jd, { children: [
  /* @__PURE__ */ g(Gd, {}, void 0, !1, {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dialog.tsx",
    lineNumber: 37,
    columnNumber: 5
  }, void 0),
  /* @__PURE__ */ g(
    be.Content,
    {
      ref: r,
      className: T(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-sm translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 duration-200 focus:outline-none focus:ring-1 focus:ring-secondary focus:ring-offset-1 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:max-w-xl sm:rounded-sm md:w-full",
        n
      ),
      ...t,
      children: [
        e,
        /* @__PURE__ */ g(be.Close, { className: "absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-secondary focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary data-[state=open]:text-secondary-foreground", children: [
          /* @__PURE__ */ g(Pi, { className: "size-4" }, void 0, !1, {
            fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dialog.tsx",
            lineNumber: 48,
            columnNumber: 9
          }, void 0),
          /* @__PURE__ */ g("span", { className: "sr-only", children: "Close" }, void 0, !1, {
            fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dialog.tsx",
            lineNumber: 49,
            columnNumber: 9
          }, void 0)
        ] }, void 0, !0, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dialog.tsx",
          lineNumber: 47,
          columnNumber: 7
        }, void 0)
      ]
    },
    void 0,
    !0,
    {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dialog.tsx",
      lineNumber: 38,
      columnNumber: 5
    },
    void 0
  )
] }, void 0, !0, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dialog.tsx",
  lineNumber: 36,
  columnNumber: 3
}, void 0));
Yd.displayName = be.Content.displayName;
const z8 = ({ className: n, ...e }) => /* @__PURE__ */ g("div", { className: T("flex flex-col space-y-3 text-left", n), ...e }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dialog.tsx",
  lineNumber: 58,
  columnNumber: 3
}, void 0);
z8.displayName = "DialogHeader";
const F8 = ({ className: n, ...e }) => /* @__PURE__ */ g(
  "div",
  {
    className: T("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-3", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dialog.tsx",
    lineNumber: 64,
    columnNumber: 3
  },
  void 0
);
F8.displayName = "DialogFooter";
const j8 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  be.Title,
  {
    ref: t,
    className: T("text-base font-semibold leading-none tracking-tight", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dialog.tsx",
    lineNumber: 76,
    columnNumber: 3
  },
  void 0
));
j8.displayName = be.Title.displayName;
const U8 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  be.Description,
  {
    ref: t,
    className: T("text-sm leading-relaxed text-primary-accent", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dialog.tsx",
    lineNumber: 89,
    columnNumber: 3
  },
  void 0
));
U8.displayName = be.Description.displayName;
const Ea = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  ct,
  {
    ref: t,
    className: T("flex size-full flex-col overflow-hidden rounded border", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/command.tsx",
    lineNumber: 13,
    columnNumber: 3
  },
  void 0
));
Ea.displayName = ct.displayName;
const $3 = ({ children: n, ...e }) => /* @__PURE__ */ g(V8, { ...e, children: /* @__PURE__ */ g(Yd, { className: "overflow-hidden p-0", children: /* @__PURE__ */ g(Ea, { className: "[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-secondary [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:size-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:size-5", children: n }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/command.tsx",
  lineNumber: 27,
  columnNumber: 7
}, void 0) }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/command.tsx",
  lineNumber: 26,
  columnNumber: 5
}, void 0) }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/command.tsx",
  lineNumber: 25,
  columnNumber: 3
}, void 0), Qd = R(({ className: n, ...e }, t) => /* @__PURE__ */ g("div", { className: "flex items-center border-b px-3", "cmdk-input-wrapper": "", children: [
  /* @__PURE__ */ g(gd, { size: 16, className: "mr-1 shrink-0 opacity-50" }, void 0, !1, {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/command.tsx",
    lineNumber: 39,
    columnNumber: 5
  }, void 0),
  /* @__PURE__ */ g(
    ct.Input,
    {
      ref: t,
      className: T(
        "flex h-9 w-full rounded border-none bg-transparent py-3 text-sm outline-none focus:ring-transparent disabled:cursor-not-allowed disabled:opacity-50",
        n
      ),
      ...e
    },
    void 0,
    !1,
    {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/command.tsx",
      lineNumber: 40,
      columnNumber: 5
    },
    void 0
  )
] }, void 0, !0, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/command.tsx",
  lineNumber: 38,
  columnNumber: 3
}, void 0));
Qd.displayName = ct.Input.displayName;
const B8 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  ct.List,
  {
    ref: t,
    className: T("max-h-[300px] overflow-y-auto overflow-x-hidden", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/command.tsx",
    lineNumber: 57,
    columnNumber: 3
  },
  void 0
));
B8.displayName = ct.List.displayName;
const Xd = R((n, e) => /* @__PURE__ */ g(ct.Empty, { ref: e, className: "py-6 text-center text-sm", ...n }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/command.tsx",
  lineNumber: 70,
  columnNumber: 3
}, void 0));
Xd.displayName = ct.Empty.displayName;
const ef = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  ct.Group,
  {
    ref: t,
    className: T(
      "overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:opacity-60",
      n
    ),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/command.tsx",
    lineNumber: 79,
    columnNumber: 3
  },
  void 0
));
ef.displayName = ct.Group.displayName;
const W8 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  ct.Separator,
  {
    ref: t,
    className: T("-mx-1 h-px bg-border", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/command.tsx",
    lineNumber: 95,
    columnNumber: 3
  },
  void 0
));
W8.displayName = ct.Separator.displayName;
const tf = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  ct.Item,
  {
    ref: t,
    className: T(
      "relative flex cursor-default select-none items-center rounded px-2 py-1.5 text-sm outline-none aria-selected:bg-secondary/40 aria-selected:text-secondary-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      n
    ),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/command.tsx",
    lineNumber: 108,
    columnNumber: 3
  },
  void 0
));
tf.displayName = ct.Item.displayName;
const nf = Cr.Root, V3 = Cr.Arrow, q8 = Cr.Trigger, Sa = R(({ className: n, align: e = "center", sideOffset: t = 6, ...r }, s) => /* @__PURE__ */ g(Cr.PopoverPortal, { children: /* @__PURE__ */ g(
  Cr.Content,
  {
    ref: s,
    align: e,
    sideOffset: t,
    className: T(
      "z-50 rounded border bg-background p-4 shadow-sm outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      n
    ),
    ...r
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/popover.tsx",
    lineNumber: 16,
    columnNumber: 5
  },
  void 0
) }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/popover.tsx",
  lineNumber: 15,
  columnNumber: 3
}, void 0));
Sa.displayName = Cr.Content.displayName;
const rf = R(
  ({
    type: n = "scroll",
    orientation: e = "vertical",
    hideScrollbar: t = !1,
    className: r,
    children: s,
    ...i
  }, o) => /* @__PURE__ */ g(
    zn.Root,
    {
      ref: o,
      type: n,
      className: T("relative overflow-hidden", r),
      ...i,
      children: [
        /* @__PURE__ */ g(zn.Viewport, { className: "size-full rounded-[inherit]", children: s }, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/scroll-area.tsx",
          lineNumber: 29,
          columnNumber: 7
        }, void 0),
        /* @__PURE__ */ g(sf, { orientation: e, className: T(t && "opacity-0") }, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/scroll-area.tsx",
          lineNumber: 32,
          columnNumber: 7
        }, void 0),
        /* @__PURE__ */ g(zn.Corner, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/scroll-area.tsx",
          lineNumber: 33,
          columnNumber: 7
        }, void 0)
      ]
    },
    void 0,
    !0,
    {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/scroll-area.tsx",
      lineNumber: 23,
      columnNumber: 5
    },
    void 0
  )
);
rf.displayName = zn.Root.displayName;
const sf = R(({ className: n, orientation: e, ...t }, r) => /* @__PURE__ */ g(
  zn.ScrollAreaScrollbar,
  {
    ref: r,
    orientation: e,
    className: T(
      "flex touch-none select-none transition-colors",
      e === "vertical" && "h-full w-2.5 border-l border-l-transparent p-[1px]",
      e === "horizontal" && "h-2.5 border-t border-t-transparent p-[1px]",
      n
    ),
    ...t,
    children: /* @__PURE__ */ g(zn.ScrollAreaThumb, { className: "relative flex-1 rounded-full bg-border" }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/scroll-area.tsx",
      lineNumber: 55,
      columnNumber: 5
    }, void 0)
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/scroll-area.tsx",
    lineNumber: 44,
    columnNumber: 3
  },
  void 0
));
sf.displayName = zn.ScrollAreaScrollbar.displayName;
const K8 = (n, e) => {
  var t, r;
  n.clearable ? (t = n.onValueChange) == null || t.call(n, e.value === n.value ? "" : e.value) : (r = n.onValueChange) == null || r.call(n, e.value);
}, J8 = (n, e) => {
  var t, r, s;
  if ((t = n.value) != null && t.includes(e.value)) {
    if (!n.clearable && n.value.length === 1)
      return !1;
    (r = n.onValueChange) == null || r.call(n, n.value.filter((i) => i !== e.value));
  } else
    (s = n.onValueChange) == null || s.call(n, [...n.value ?? [], e.value]);
}, z3 = R(
  (n, e) => {
    var s;
    const [t, r] = Es(!1);
    return /* @__PURE__ */ g(nf, { open: t, onOpenChange: r, children: [
      /* @__PURE__ */ g(q8, { asChild: !0, children: /* @__PURE__ */ g(
        Nt,
        {
          role: "combobox",
          variant: "outline",
          "aria-expanded": t,
          className: "w-full justify-between hover:bg-secondary/20 active:scale-100",
          children: [
            /* @__PURE__ */ g("span", { className: "line-clamp-1 text-left font-normal", children: [
              n.multiple && n.value && n.value.length > 0 && /* @__PURE__ */ g("span", { className: "mr-2", children: n.value.join(", ") }, void 0, !1, {
                fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/combobox.tsx",
                lineNumber: 71,
                columnNumber: 17
              }, void 0),
              !n.multiple && n.value && n.value !== "" && ((s = n.options.find((i) => i.value === n.value)) == null ? void 0 : s.label),
              !n.value || n.value.length === 0 && (n.selectPlaceholder ?? "Select an option")
            ] }, void 0, !0, {
              fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/combobox.tsx",
              lineNumber: 69,
              columnNumber: 13
            }, void 0),
            /* @__PURE__ */ g(
              Na,
              {
                className: T(
                  "ml-2 size-4 shrink-0 rotate-0 opacity-50 transition-transform",
                  t && "rotate-180"
                )
              },
              void 0,
              !1,
              {
                fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/combobox.tsx",
                lineNumber: 82,
                columnNumber: 13
              },
              void 0
            )
          ]
        },
        void 0,
        !0,
        {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/combobox.tsx",
          lineNumber: 63,
          columnNumber: 11
        },
        void 0
      ) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/combobox.tsx",
        lineNumber: 62,
        columnNumber: 9
      }, void 0),
      /* @__PURE__ */ g(Sa, { align: "start", className: "p-0", children: /* @__PURE__ */ g(Ea, { children: [
        /* @__PURE__ */ g(
          Qd,
          {
            ref: e,
            placeholder: n.searchPlaceholder ?? "Search for an option"
          },
          void 0,
          !1,
          {
            fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/combobox.tsx",
            lineNumber: 92,
            columnNumber: 13
          },
          void 0
        ),
        /* @__PURE__ */ g(Xd, { children: n.emptyText ?? "No results found" }, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/combobox.tsx",
          lineNumber: 96,
          columnNumber: 13
        }, void 0),
        /* @__PURE__ */ g(ef, { children: /* @__PURE__ */ g(rf, { orientation: "vertical", children: /* @__PURE__ */ g("div", { className: "max-h-60", children: n.options.map((i) => {
          var o;
          return /* @__PURE__ */ g(
            tf,
            {
              value: i.value.toLowerCase().trim(),
              onSelect: (a) => {
                const l = n.options.find(
                  (c) => c.value.toLowerCase().trim() === a
                );
                if (!l)
                  return null;
                n.multiple ? J8(n, l) : (K8(n, l), r(!1));
              },
              children: [
                /* @__PURE__ */ g(
                  rr,
                  {
                    className: T(
                      "mr-2 size-4 opacity-0",
                      !n.multiple && n.value === i.value && "opacity-100",
                      n.multiple && ((o = n.value) == null ? void 0 : o.includes(i.value)) && "opacity-100"
                    )
                  },
                  void 0,
                  !1,
                  {
                    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/combobox.tsx",
                    lineNumber: 120,
                    columnNumber: 23
                  },
                  void 0
                ),
                i.label
              ]
            },
            i.value,
            !0,
            {
              fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/combobox.tsx",
              lineNumber: 101,
              columnNumber: 21
            },
            void 0
          );
        }) }, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/combobox.tsx",
          lineNumber: 99,
          columnNumber: 17
        }, void 0) }, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/combobox.tsx",
          lineNumber: 98,
          columnNumber: 15
        }, void 0) }, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/combobox.tsx",
          lineNumber: 97,
          columnNumber: 13
        }, void 0)
      ] }, void 0, !0, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/combobox.tsx",
        lineNumber: 91,
        columnNumber: 11
      }, void 0) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/combobox.tsx",
        lineNumber: 90,
        columnNumber: 9
      }, void 0)
    ] }, void 0, !0, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/combobox.tsx",
      lineNumber: 61,
      columnNumber: 7
    }, void 0);
  }
), F3 = Ee.Root, j3 = Ee.Trigger, U3 = Ee.Group, B3 = Ee.Portal, W3 = Ee.Sub, q3 = Ee.RadioGroup, G8 = R(({ className: n, inset: e, children: t, ...r }, s) => /* @__PURE__ */ g(
  Ee.SubTrigger,
  {
    ref: s,
    className: T(
      "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-secondary focus:text-secondary-foreground data-[state=open]:bg-secondary data-[state=open]:text-secondary-foreground",
      e && "pl-8",
      n
    ),
    ...r,
    children: [
      t,
      /* @__PURE__ */ g(ka, { className: "ml-auto size-4" }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/context-menu.tsx",
        lineNumber: 34,
        columnNumber: 5
      }, void 0)
    ]
  },
  void 0,
  !0,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/context-menu.tsx",
    lineNumber: 24,
    columnNumber: 3
  },
  void 0
));
G8.displayName = Ee.SubTrigger.displayName;
const Y8 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  Ee.SubContent,
  {
    ref: t,
    className: T(
      "z-50 max-h-[var(--radix-context-menu-content-available-height)] w-[var(--radix-context-menu-trigger-width)] min-w-[8rem] origin-[var(--radix-context-menu-content-transform-origin)] overflow-hidden rounded-md border bg-background p-1 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      n
    ),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/context-menu.tsx",
    lineNumber: 44,
    columnNumber: 3
  },
  void 0
));
Y8.displayName = Ee.SubContent.displayName;
const Q8 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(Ee.Portal, { children: /* @__PURE__ */ g(
  Ee.Content,
  {
    ref: t,
    className: T(
      "z-50 max-h-[var(--radix-context-menu-content-available-height)] w-[var(--radix-context-menu-trigger-width)] min-w-[8rem] origin-[var(--radix-context-menu-content-transform-origin)] overflow-hidden rounded-md border bg-background p-1 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      n
    ),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/context-menu.tsx",
    lineNumber: 61,
    columnNumber: 5
  },
  void 0
) }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/context-menu.tsx",
  lineNumber: 60,
  columnNumber: 3
}, void 0));
Q8.displayName = Ee.Content.displayName;
const X8 = R(({ className: n, inset: e, ...t }, r) => /* @__PURE__ */ g(
  Ee.Item,
  {
    ref: r,
    className: T(
      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-secondary focus:text-secondary-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      e && "pl-8",
      n
    ),
    ...t
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/context-menu.tsx",
    lineNumber: 80,
    columnNumber: 3
  },
  void 0
));
X8.displayName = Ee.Item.displayName;
const eb = R(({ className: n, children: e, checked: t, ...r }, s) => /* @__PURE__ */ g(
  Ee.CheckboxItem,
  {
    ref: s,
    className: T(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-secondary focus:text-secondary-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      n
    ),
    checked: t,
    ...r,
    children: [
      /* @__PURE__ */ g("span", { className: "absolute left-2 flex size-4 items-center justify-center", children: /* @__PURE__ */ g(Ee.ItemIndicator, { children: /* @__PURE__ */ g(rr, { size: 14 }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/context-menu.tsx",
        lineNumber: 108,
        columnNumber: 9
      }, void 0) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/context-menu.tsx",
        lineNumber: 107,
        columnNumber: 7
      }, void 0) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/context-menu.tsx",
        lineNumber: 106,
        columnNumber: 5
      }, void 0),
      e
    ]
  },
  void 0,
  !0,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/context-menu.tsx",
    lineNumber: 97,
    columnNumber: 3
  },
  void 0
));
eb.displayName = Ee.CheckboxItem.displayName;
const tb = R(({ className: n, children: e, ...t }, r) => /* @__PURE__ */ g(
  Ee.RadioItem,
  {
    ref: r,
    className: T(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-secondary focus:text-secondary-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      n
    ),
    ...t,
    children: [
      /* @__PURE__ */ g("span", { className: "absolute left-2 flex size-4 items-center justify-center", children: /* @__PURE__ */ g(Ee.ItemIndicator, { children: /* @__PURE__ */ g(rr, { size: 14, className: "fill-current" }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/context-menu.tsx",
        lineNumber: 131,
        columnNumber: 9
      }, void 0) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/context-menu.tsx",
        lineNumber: 130,
        columnNumber: 7
      }, void 0) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/context-menu.tsx",
        lineNumber: 129,
        columnNumber: 5
      }, void 0),
      e
    ]
  },
  void 0,
  !0,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/context-menu.tsx",
    lineNumber: 121,
    columnNumber: 3
  },
  void 0
));
tb.displayName = Ee.RadioItem.displayName;
const nb = R(({ className: n, inset: e, ...t }, r) => /* @__PURE__ */ g(
  Ee.Label,
  {
    ref: r,
    className: T("px-2 py-1.5 text-sm font-semibold text-foreground", e && "pl-8", n),
    ...t
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/context-menu.tsx",
    lineNumber: 146,
    columnNumber: 3
  },
  void 0
));
nb.displayName = Ee.Label.displayName;
const rb = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  Ee.Separator,
  {
    ref: t,
    className: T("-mx-1 my-1 h-px bg-border", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/context-menu.tsx",
    lineNumber: 159,
    columnNumber: 3
  },
  void 0
));
rb.displayName = Ee.Separator.displayName;
const K3 = Ne.Root, J3 = Ne.Trigger, G3 = Ne.Group, Y3 = Ne.Portal, Q3 = Ne.Sub, X3 = Ne.RadioGroup, sb = R(({ className: n, inset: e, children: t, ...r }, s) => /* @__PURE__ */ g(
  Ne.SubTrigger,
  {
    ref: s,
    className: T(
      "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-secondary data-[state=open]:bg-secondary",
      e && "pl-8",
      n
    ),
    ...r,
    children: [
      t,
      /* @__PURE__ */ g(ka, { className: "ml-auto size-4" }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dropdown-menu.tsx",
        lineNumber: 34,
        columnNumber: 5
      }, void 0)
    ]
  },
  void 0,
  !0,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dropdown-menu.tsx",
    lineNumber: 24,
    columnNumber: 3
  },
  void 0
));
sb.displayName = Ne.SubTrigger.displayName;
const ib = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(Ne.Portal, { children: /* @__PURE__ */ g(
  Ne.SubContent,
  {
    ref: t,
    className: T(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-background p-1 text-foreground shadow-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      n
    ),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dropdown-menu.tsx",
    lineNumber: 45,
    columnNumber: 5
  },
  void 0
) }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dropdown-menu.tsx",
  lineNumber: 44,
  columnNumber: 3
}, void 0));
ib.displayName = Ne.SubContent.displayName;
const ob = R(({ className: n, children: e, sideOffset: t = 6, ...r }, s) => /* @__PURE__ */ g(Ne.Portal, { children: /* @__PURE__ */ g(
  Ne.Content,
  {
    ref: s,
    sideOffset: t,
    className: T(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-background p-1 text-foreground shadow-sm",
      "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      n
    ),
    ...r,
    children: e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dropdown-menu.tsx",
    lineNumber: 63,
    columnNumber: 5
  },
  void 0
) }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dropdown-menu.tsx",
  lineNumber: 62,
  columnNumber: 3
}, void 0));
ob.displayName = Ne.Content.displayName;
const ab = R(({ className: n, inset: e, ...t }, r) => /* @__PURE__ */ g(
  Ne.Item,
  {
    ref: r,
    className: T(
      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors ease-in-out focus:bg-secondary focus:text-secondary-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      e && "pl-8",
      n
    ),
    ...t
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dropdown-menu.tsx",
    lineNumber: 86,
    columnNumber: 3
  },
  void 0
));
ab.displayName = Ne.Item.displayName;
const lb = R(({ className: n, children: e, checked: t, ...r }, s) => /* @__PURE__ */ g(
  Ne.CheckboxItem,
  {
    ref: s,
    className: T(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors ease-in-out focus:bg-secondary focus:text-secondary-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      n
    ),
    checked: t,
    ...r,
    children: [
      /* @__PURE__ */ g("span", { className: "absolute left-2 flex size-3.5 items-center justify-center", children: /* @__PURE__ */ g(Ne.ItemIndicator, { children: /* @__PURE__ */ g(rr, { className: "size-4" }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dropdown-menu.tsx",
        lineNumber: 114,
        columnNumber: 9
      }, void 0) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dropdown-menu.tsx",
        lineNumber: 113,
        columnNumber: 7
      }, void 0) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dropdown-menu.tsx",
        lineNumber: 112,
        columnNumber: 5
      }, void 0),
      e
    ]
  },
  void 0,
  !0,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dropdown-menu.tsx",
    lineNumber: 103,
    columnNumber: 3
  },
  void 0
));
lb.displayName = Ne.CheckboxItem.displayName;
const cb = R(({ className: n, children: e, ...t }, r) => /* @__PURE__ */ g(
  Ne.RadioItem,
  {
    ref: r,
    className: T(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors ease-in-out focus:bg-secondary focus:text-secondary-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      n
    ),
    ...t,
    children: [
      /* @__PURE__ */ g("span", { className: "absolute left-2 flex size-3.5 items-center justify-center", children: /* @__PURE__ */ g(Ne.ItemIndicator, { children: /* @__PURE__ */ g(ld, { size: 18, weight: "fill", className: "fill-current" }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dropdown-menu.tsx",
        lineNumber: 137,
        columnNumber: 9
      }, void 0) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dropdown-menu.tsx",
        lineNumber: 136,
        columnNumber: 7
      }, void 0) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dropdown-menu.tsx",
        lineNumber: 135,
        columnNumber: 5
      }, void 0),
      e
    ]
  },
  void 0,
  !0,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dropdown-menu.tsx",
    lineNumber: 127,
    columnNumber: 3
  },
  void 0
));
cb.displayName = Ne.RadioItem.displayName;
const ub = R(({ className: n, inset: e, ...t }, r) => /* @__PURE__ */ g(
  Ne.Label,
  {
    ref: r,
    className: T("px-2 py-1.5 text-sm font-semibold", e && "pl-8", n),
    ...t
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dropdown-menu.tsx",
    lineNumber: 152,
    columnNumber: 3
  },
  void 0
));
ub.displayName = Ne.Label.displayName;
const db = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  Ne.Separator,
  {
    ref: t,
    className: T("-mx-1 my-1 h-px bg-secondary", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/dropdown-menu.tsx",
    lineNumber: 165,
    columnNumber: 3
  },
  void 0
));
db.displayName = Ne.Separator.displayName;
const of = Rs({}), af = Rs({}), Li = () => {
  const n = Ks(of), e = Ks(af), { getFieldState: t, formState: r } = im(), s = t(n.name, r);
  if (!n)
    throw new Error("useFormField should be used within <FormField>");
  const { id: i } = e;
  return {
    id: i,
    name: n.name,
    formItemId: `${i}-form-item`,
    formDescriptionId: `${i}-form-item-description`,
    formMessageId: `${i}-form-item-message`,
    ...s
  };
};
function fb(n) {
  const [e, t] = Es(!!n), r = qr(() => t(!0), []), s = qr(() => t(!1), []), i = qr(() => t((o) => !o), []);
  return { value: e, setValue: t, setTrue: r, setFalse: s, toggle: i };
}
const mb = sr(
  "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-60"
), lf = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(Yu.Root, { ref: t, className: T(mb(), n), ...e }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/label.tsx",
  lineNumber: 14,
  columnNumber: 3
}, void 0));
lf.displayName = Yu.Root.displayName;
const hb = om, Ec = ({
  ...n
}) => /* @__PURE__ */ g(of.Provider, { value: { name: n.name }, children: /* @__PURE__ */ g(am, { ...n }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/form.tsx",
  lineNumber: 19,
  columnNumber: 5
}, void 0) }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/form.tsx",
  lineNumber: 18,
  columnNumber: 3
}, void 0), Vo = R(
  ({ className: n, ...e }, t) => {
    const r = nm();
    return /* @__PURE__ */ g(af.Provider, { value: { id: r }, children: /* @__PURE__ */ g("div", { ref: t, className: T("w-full space-y-1", n), ...e }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/form.tsx",
      lineNumber: 29,
      columnNumber: 9
    }, void 0) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/form.tsx",
      lineNumber: 28,
      columnNumber: 7
    }, void 0);
  }
);
Vo.displayName = "FormItem";
const zo = R(({ className: n, ...e }, t) => {
  const { error: r, formItemId: s } = Li();
  return /* @__PURE__ */ g(
    lf,
    {
      ref: t,
      htmlFor: s,
      className: T(r && "text-error", n),
      ...e
    },
    void 0,
    !1,
    {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/form.tsx",
      lineNumber: 44,
      columnNumber: 5
    },
    void 0
  );
});
zo.displayName = "FormLabel";
const Fo = R(({ ...n }, e) => {
  const { error: t, formItemId: r, formDescriptionId: s, formMessageId: i } = Li();
  return /* @__PURE__ */ g(
    Gu,
    {
      ref: e,
      id: r,
      "aria-invalid": !!t,
      "aria-describedby": t ? `${s} ${i}` : `${s}`,
      ...n
    },
    void 0,
    !1,
    {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/form.tsx",
      lineNumber: 62,
      columnNumber: 5
    },
    void 0
  );
});
Fo.displayName = "FormControl";
const pb = R(({ className: n, ...e }, t) => {
  const { formDescriptionId: r } = Li();
  return /* @__PURE__ */ g(
    "p",
    {
      ref: t,
      id: r,
      className: T("text-xs leading-relaxed opacity-60", n),
      ...e
    },
    void 0,
    !1,
    {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/form.tsx",
      lineNumber: 81,
      columnNumber: 5
    },
    void 0
  );
});
pb.displayName = "FormDescription";
const cf = R(({ className: n, children: e, ...t }, r) => {
  const { error: s, formMessageId: i } = Li(), o = s ? String(s == null ? void 0 : s.message) : e;
  return o ? /* @__PURE__ */ g(
    "p",
    {
      ref: r,
      id: i,
      className: T("text-xs font-medium leading-relaxed text-error", n),
      ...t,
      children: o
    },
    void 0,
    !1,
    {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/form.tsx",
      lineNumber: 104,
      columnNumber: 5
    },
    void 0
  ) : null;
});
cf.displayName = "FormMessage";
const ek = ns.Root, tk = ns.Trigger, gb = R(({ className: n, align: e = "center", sideOffset: t = 6, ...r }, s) => /* @__PURE__ */ g(ns.Portal, { children: /* @__PURE__ */ g(
  ns.Content,
  {
    ref: s,
    align: e,
    sideOffset: t,
    className: T(
      "z-50 rounded-sm border bg-background p-4 text-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      n
    ),
    ...r
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/hover-card.tsx",
    lineNumber: 14,
    columnNumber: 5
  },
  void 0
) }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/hover-card.tsx",
  lineNumber: 13,
  columnNumber: 3
}, void 0));
gb.displayName = ns.Content.displayName;
const nk = um.Root, rk = wa.PanelGroup, sk = wa.Panel, ik = ({
  className: n,
  isDragging: e,
  onDragging: t,
  ...r
}) => /* @__PURE__ */ g(
  wa.PanelResizeHandle,
  {
    className: T("relative h-screen", n),
    onDragging: t,
    ...r,
    children: [
      /* @__PURE__ */ g("div", { className: "flex h-full items-center justify-center", children: /* @__PURE__ */ g(
        "div",
        {
          className: T(
            "absolute inset-y-0 left-0 z-50 w-1 rounded-lg pl-1 transition-all hover:bg-info hover:opacity-100",
            e && "bg-info opacity-100"
          )
        },
        void 0,
        !1,
        {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/resizable-panel.tsx",
          lineNumber: 25,
          columnNumber: 7
        },
        void 0
      ) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/resizable-panel.tsx",
        lineNumber: 24,
        columnNumber: 5
      }, void 0),
      /* @__PURE__ */ g("div", { className: "pointer-events-none absolute inset-y-0 left-[-5px] z-50 flex items-center justify-center", children: /* @__PURE__ */ g(cd, { size: 14, opacity: 0.75 }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/resizable-panel.tsx",
        lineNumber: 34,
        columnNumber: 7
      }, void 0) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/resizable-panel.tsx",
        lineNumber: 33,
        columnNumber: 5
      }, void 0)
    ]
  },
  void 0,
  !0,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/resizable-panel.tsx",
    lineNumber: 19,
    columnNumber: 3
  },
  void 0
);
var Sc = function(n, e, t) {
  if (n && "reportValidity" in n) {
    var r = Io(t, e);
    n.setCustomValidity(r && r.message || ""), n.reportValidity();
  }
}, uf = function(n, e) {
  var t = function(s) {
    var i = e.fields[s];
    i && i.ref && "reportValidity" in i.ref ? Sc(i.ref, s, n) : i.refs && i.refs.forEach(function(o) {
      return Sc(o, s, n);
    });
  };
  for (var r in e.fields)
    t(r);
}, bb = function(n, e) {
  e.shouldUseNativeValidation && uf(n, e);
  var t = {};
  for (var r in n) {
    var s = Io(e.fields, r), i = Object.assign(n[r] || {}, { ref: s && s.ref });
    if (yb(e.names || Object.keys(n), r)) {
      var o = Object.assign({}, Io(t, r));
      eo(o, "root", i), eo(t, r, o);
    } else
      eo(t, r, i);
  }
  return t;
}, yb = function(n, e) {
  return n.some(function(t) {
    return t.startsWith(e + ".");
  });
}, vb = function(n, e) {
  for (var t = {}; n.length; ) {
    var r = n[0], s = r.code, i = r.message, o = r.path.join(".");
    if (!t[o])
      if ("unionErrors" in r) {
        var a = r.unionErrors[0].errors[0];
        t[o] = { message: a.message, type: a.code };
      } else
        t[o] = { message: i, type: s };
    if ("unionErrors" in r && r.unionErrors.forEach(function(d) {
      return d.errors.forEach(function(f) {
        return n.push(f);
      });
    }), e) {
      var l = t[o].types, c = l && l[r.code];
      t[o] = lm(o, e, t, s, c ? [].concat(c, r.message) : r.message);
    }
    n.shift();
  }
  return t;
}, xb = function(n, e, t) {
  return t === void 0 && (t = {}), function(r, s, i) {
    try {
      return Promise.resolve(function(o, a) {
        try {
          var l = Promise.resolve(n[t.mode === "sync" ? "parse" : "parseAsync"](r, e)).then(function(c) {
            return i.shouldUseNativeValidation && uf({}, i), { errors: {}, values: t.raw ? r : c };
          });
        } catch (c) {
          return a(c);
        }
        return l && l.then ? l.then(void 0, a) : l;
      }(0, function(o) {
        if (function(a) {
          return a.errors != null;
        }(o))
          return { values: {}, errors: bb(vb(o.errors, !i.shouldUseNativeValidation && i.criteriaMode === "all"), i) };
        throw o;
      }));
    } catch (o) {
      return Promise.reject(o);
    }
  };
};
function Ue(n) {
  this.content = n;
}
Ue.prototype = {
  constructor: Ue,
  find: function(n) {
    for (var e = 0; e < this.content.length; e += 2)
      if (this.content[e] === n)
        return e;
    return -1;
  },
  // :: (string) → ?any
  // Retrieve the value stored under `key`, or return undefined when
  // no such key exists.
  get: function(n) {
    var e = this.find(n);
    return e == -1 ? void 0 : this.content[e + 1];
  },
  // :: (string, any, ?string) → OrderedMap
  // Create a new map by replacing the value of `key` with a new
  // value, or adding a binding to the end of the map. If `newKey` is
  // given, the key of the binding will be replaced with that key.
  update: function(n, e, t) {
    var r = t && t != n ? this.remove(t) : this, s = r.find(n), i = r.content.slice();
    return s == -1 ? i.push(t || n, e) : (i[s + 1] = e, t && (i[s] = t)), new Ue(i);
  },
  // :: (string) → OrderedMap
  // Return a map with the given key removed, if it existed.
  remove: function(n) {
    var e = this.find(n);
    if (e == -1)
      return this;
    var t = this.content.slice();
    return t.splice(e, 2), new Ue(t);
  },
  // :: (string, any) → OrderedMap
  // Add a new key to the start of the map.
  addToStart: function(n, e) {
    return new Ue([n, e].concat(this.remove(n).content));
  },
  // :: (string, any) → OrderedMap
  // Add a new key to the end of the map.
  addToEnd: function(n, e) {
    var t = this.remove(n).content.slice();
    return t.push(n, e), new Ue(t);
  },
  // :: (string, string, any) → OrderedMap
  // Add a key after the given key. If `place` is not found, the new
  // key is added to the end.
  addBefore: function(n, e, t) {
    var r = this.remove(e), s = r.content.slice(), i = r.find(n);
    return s.splice(i == -1 ? s.length : i, 0, e, t), new Ue(s);
  },
  // :: ((key: string, value: any))
  // Call the given function for each key/value pair in the map, in
  // order.
  forEach: function(n) {
    for (var e = 0; e < this.content.length; e += 2)
      n(this.content[e], this.content[e + 1]);
  },
  // :: (union<Object, OrderedMap>) → OrderedMap
  // Create a new map by prepending the keys in this map that don't
  // appear in `map` before the keys in `map`.
  prepend: function(n) {
    return n = Ue.from(n), n.size ? new Ue(n.content.concat(this.subtract(n).content)) : this;
  },
  // :: (union<Object, OrderedMap>) → OrderedMap
  // Create a new map by appending the keys in this map that don't
  // appear in `map` after the keys in `map`.
  append: function(n) {
    return n = Ue.from(n), n.size ? new Ue(this.subtract(n).content.concat(n.content)) : this;
  },
  // :: (union<Object, OrderedMap>) → OrderedMap
  // Create a map containing all the keys in this map that don't
  // appear in `map`.
  subtract: function(n) {
    var e = this;
    n = Ue.from(n);
    for (var t = 0; t < n.content.length; t += 2)
      e = e.remove(n.content[t]);
    return e;
  },
  // :: () → Object
  // Turn ordered map into a plain object.
  toObject: function() {
    var n = {};
    return this.forEach(function(e, t) {
      n[e] = t;
    }), n;
  },
  // :: number
  // The amount of keys in this map.
  get size() {
    return this.content.length >> 1;
  }
};
Ue.from = function(n) {
  if (n instanceof Ue)
    return n;
  var e = [];
  if (n)
    for (var t in n)
      e.push(t, n[t]);
  return new Ue(e);
};
function df(n, e, t) {
  for (let r = 0; ; r++) {
    if (r == n.childCount || r == e.childCount)
      return n.childCount == e.childCount ? null : t;
    let s = n.child(r), i = e.child(r);
    if (s == i) {
      t += s.nodeSize;
      continue;
    }
    if (!s.sameMarkup(i))
      return t;
    if (s.isText && s.text != i.text) {
      for (let o = 0; s.text[o] == i.text[o]; o++)
        t++;
      return t;
    }
    if (s.content.size || i.content.size) {
      let o = df(s.content, i.content, t + 1);
      if (o != null)
        return o;
    }
    t += s.nodeSize;
  }
}
function ff(n, e, t, r) {
  for (let s = n.childCount, i = e.childCount; ; ) {
    if (s == 0 || i == 0)
      return s == i ? null : { a: t, b: r };
    let o = n.child(--s), a = e.child(--i), l = o.nodeSize;
    if (o == a) {
      t -= l, r -= l;
      continue;
    }
    if (!o.sameMarkup(a))
      return { a: t, b: r };
    if (o.isText && o.text != a.text) {
      let c = 0, d = Math.min(o.text.length, a.text.length);
      for (; c < d && o.text[o.text.length - c - 1] == a.text[a.text.length - c - 1]; )
        c++, t--, r--;
      return { a: t, b: r };
    }
    if (o.content.size || a.content.size) {
      let c = ff(o.content, a.content, t - 1, r - 1);
      if (c)
        return c;
    }
    t -= l, r -= l;
  }
}
class D {
  /**
  @internal
  */
  constructor(e, t) {
    if (this.content = e, this.size = t || 0, t == null)
      for (let r = 0; r < e.length; r++)
        this.size += e[r].nodeSize;
  }
  /**
  Invoke a callback for all descendant nodes between the given two
  positions (relative to start of this fragment). Doesn't descend
  into a node when the callback returns `false`.
  */
  nodesBetween(e, t, r, s = 0, i) {
    for (let o = 0, a = 0; a < t; o++) {
      let l = this.content[o], c = a + l.nodeSize;
      if (c > e && r(l, s + a, i || null, o) !== !1 && l.content.size) {
        let d = a + 1;
        l.nodesBetween(Math.max(0, e - d), Math.min(l.content.size, t - d), r, s + d);
      }
      a = c;
    }
  }
  /**
  Call the given callback for every descendant node. `pos` will be
  relative to the start of the fragment. The callback may return
  `false` to prevent traversal of a given node's children.
  */
  descendants(e) {
    this.nodesBetween(0, this.size, e);
  }
  /**
  Extract the text between `from` and `to`. See the same method on
  [`Node`](https://prosemirror.net/docs/ref/#model.Node.textBetween).
  */
  textBetween(e, t, r, s) {
    let i = "", o = !0;
    return this.nodesBetween(e, t, (a, l) => {
      a.isText ? (i += a.text.slice(Math.max(e, l) - l, t - l), o = !r) : a.isLeaf ? (s ? i += typeof s == "function" ? s(a) : s : a.type.spec.leafText && (i += a.type.spec.leafText(a)), o = !r) : !o && a.isBlock && (i += r, o = !0);
    }, 0), i;
  }
  /**
  Create a new fragment containing the combined content of this
  fragment and the other.
  */
  append(e) {
    if (!e.size)
      return this;
    if (!this.size)
      return e;
    let t = this.lastChild, r = e.firstChild, s = this.content.slice(), i = 0;
    for (t.isText && t.sameMarkup(r) && (s[s.length - 1] = t.withText(t.text + r.text), i = 1); i < e.content.length; i++)
      s.push(e.content[i]);
    return new D(s, this.size + e.size);
  }
  /**
  Cut out the sub-fragment between the two given positions.
  */
  cut(e, t = this.size) {
    if (e == 0 && t == this.size)
      return this;
    let r = [], s = 0;
    if (t > e)
      for (let i = 0, o = 0; o < t; i++) {
        let a = this.content[i], l = o + a.nodeSize;
        l > e && ((o < e || l > t) && (a.isText ? a = a.cut(Math.max(0, e - o), Math.min(a.text.length, t - o)) : a = a.cut(Math.max(0, e - o - 1), Math.min(a.content.size, t - o - 1))), r.push(a), s += a.nodeSize), o = l;
      }
    return new D(r, s);
  }
  /**
  @internal
  */
  cutByIndex(e, t) {
    return e == t ? D.empty : e == 0 && t == this.content.length ? this : new D(this.content.slice(e, t));
  }
  /**
  Create a new fragment in which the node at the given index is
  replaced by the given node.
  */
  replaceChild(e, t) {
    let r = this.content[e];
    if (r == t)
      return this;
    let s = this.content.slice(), i = this.size + t.nodeSize - r.nodeSize;
    return s[e] = t, new D(s, i);
  }
  /**
  Create a new fragment by prepending the given node to this
  fragment.
  */
  addToStart(e) {
    return new D([e].concat(this.content), this.size + e.nodeSize);
  }
  /**
  Create a new fragment by appending the given node to this
  fragment.
  */
  addToEnd(e) {
    return new D(this.content.concat(e), this.size + e.nodeSize);
  }
  /**
  Compare this fragment to another one.
  */
  eq(e) {
    if (this.content.length != e.content.length)
      return !1;
    for (let t = 0; t < this.content.length; t++)
      if (!this.content[t].eq(e.content[t]))
        return !1;
    return !0;
  }
  /**
  The first child of the fragment, or `null` if it is empty.
  */
  get firstChild() {
    return this.content.length ? this.content[0] : null;
  }
  /**
  The last child of the fragment, or `null` if it is empty.
  */
  get lastChild() {
    return this.content.length ? this.content[this.content.length - 1] : null;
  }
  /**
  The number of child nodes in this fragment.
  */
  get childCount() {
    return this.content.length;
  }
  /**
  Get the child node at the given index. Raise an error when the
  index is out of range.
  */
  child(e) {
    let t = this.content[e];
    if (!t)
      throw new RangeError("Index " + e + " out of range for " + this);
    return t;
  }
  /**
  Get the child node at the given index, if it exists.
  */
  maybeChild(e) {
    return this.content[e] || null;
  }
  /**
  Call `f` for every child node, passing the node, its offset
  into this parent node, and its index.
  */
  forEach(e) {
    for (let t = 0, r = 0; t < this.content.length; t++) {
      let s = this.content[t];
      e(s, r, t), r += s.nodeSize;
    }
  }
  /**
  Find the first position at which this fragment and another
  fragment differ, or `null` if they are the same.
  */
  findDiffStart(e, t = 0) {
    return df(this, e, t);
  }
  /**
  Find the first position, searching from the end, at which this
  fragment and the given fragment differ, or `null` if they are
  the same. Since this position will not be the same in both
  nodes, an object with two separate positions is returned.
  */
  findDiffEnd(e, t = this.size, r = e.size) {
    return ff(this, e, t, r);
  }
  /**
  Find the index and inner offset corresponding to a given relative
  position in this fragment. The result object will be reused
  (overwritten) the next time the function is called. (Not public.)
  */
  findIndex(e, t = -1) {
    if (e == 0)
      return Is(0, e);
    if (e == this.size)
      return Is(this.content.length, e);
    if (e > this.size || e < 0)
      throw new RangeError(`Position ${e} outside of fragment (${this})`);
    for (let r = 0, s = 0; ; r++) {
      let i = this.child(r), o = s + i.nodeSize;
      if (o >= e)
        return o == e || t > 0 ? Is(r + 1, o) : Is(r, s);
      s = o;
    }
  }
  /**
  Return a debugging string that describes this fragment.
  */
  toString() {
    return "<" + this.toStringInner() + ">";
  }
  /**
  @internal
  */
  toStringInner() {
    return this.content.join(", ");
  }
  /**
  Create a JSON-serializeable representation of this fragment.
  */
  toJSON() {
    return this.content.length ? this.content.map((e) => e.toJSON()) : null;
  }
  /**
  Deserialize a fragment from its JSON representation.
  */
  static fromJSON(e, t) {
    if (!t)
      return D.empty;
    if (!Array.isArray(t))
      throw new RangeError("Invalid input for Fragment.fromJSON");
    return new D(t.map(e.nodeFromJSON));
  }
  /**
  Build a fragment from an array of nodes. Ensures that adjacent
  text nodes with the same marks are joined together.
  */
  static fromArray(e) {
    if (!e.length)
      return D.empty;
    let t, r = 0;
    for (let s = 0; s < e.length; s++) {
      let i = e[s];
      r += i.nodeSize, s && i.isText && e[s - 1].sameMarkup(i) ? (t || (t = e.slice(0, s)), t[t.length - 1] = i.withText(t[t.length - 1].text + i.text)) : t && t.push(i);
    }
    return new D(t || e, r);
  }
  /**
  Create a fragment from something that can be interpreted as a
  set of nodes. For `null`, it returns the empty fragment. For a
  fragment, the fragment itself. For a node or array of nodes, a
  fragment containing those nodes.
  */
  static from(e) {
    if (!e)
      return D.empty;
    if (e instanceof D)
      return e;
    if (Array.isArray(e))
      return this.fromArray(e);
    if (e.attrs)
      return new D([e], e.nodeSize);
    throw new RangeError("Can not convert " + e + " to a Fragment" + (e.nodesBetween ? " (looks like multiple versions of prosemirror-model were loaded)" : ""));
  }
}
D.empty = new D([], 0);
const so = { index: 0, offset: 0 };
function Is(n, e) {
  return so.index = n, so.offset = e, so;
}
function Ys(n, e) {
  if (n === e)
    return !0;
  if (!(n && typeof n == "object") || !(e && typeof e == "object"))
    return !1;
  let t = Array.isArray(n);
  if (Array.isArray(e) != t)
    return !1;
  if (t) {
    if (n.length != e.length)
      return !1;
    for (let r = 0; r < n.length; r++)
      if (!Ys(n[r], e[r]))
        return !1;
  } else {
    for (let r in n)
      if (!(r in e) || !Ys(n[r], e[r]))
        return !1;
    for (let r in e)
      if (!(r in n))
        return !1;
  }
  return !0;
}
let ye = class jo {
  /**
  @internal
  */
  constructor(e, t) {
    this.type = e, this.attrs = t;
  }
  /**
  Given a set of marks, create a new set which contains this one as
  well, in the right position. If this mark is already in the set,
  the set itself is returned. If any marks that are set to be
  [exclusive](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) with this mark are present,
  those are replaced by this one.
  */
  addToSet(e) {
    let t, r = !1;
    for (let s = 0; s < e.length; s++) {
      let i = e[s];
      if (this.eq(i))
        return e;
      if (this.type.excludes(i.type))
        t || (t = e.slice(0, s));
      else {
        if (i.type.excludes(this.type))
          return e;
        !r && i.type.rank > this.type.rank && (t || (t = e.slice(0, s)), t.push(this), r = !0), t && t.push(i);
      }
    }
    return t || (t = e.slice()), r || t.push(this), t;
  }
  /**
  Remove this mark from the given set, returning a new set. If this
  mark is not in the set, the set itself is returned.
  */
  removeFromSet(e) {
    for (let t = 0; t < e.length; t++)
      if (this.eq(e[t]))
        return e.slice(0, t).concat(e.slice(t + 1));
    return e;
  }
  /**
  Test whether this mark is in the given set of marks.
  */
  isInSet(e) {
    for (let t = 0; t < e.length; t++)
      if (this.eq(e[t]))
        return !0;
    return !1;
  }
  /**
  Test whether this mark has the same type and attributes as
  another mark.
  */
  eq(e) {
    return this == e || this.type == e.type && Ys(this.attrs, e.attrs);
  }
  /**
  Convert this mark to a JSON-serializeable representation.
  */
  toJSON() {
    let e = { type: this.type.name };
    for (let t in this.attrs) {
      e.attrs = this.attrs;
      break;
    }
    return e;
  }
  /**
  Deserialize a mark from JSON.
  */
  static fromJSON(e, t) {
    if (!t)
      throw new RangeError("Invalid input for Mark.fromJSON");
    let r = e.marks[t.type];
    if (!r)
      throw new RangeError(`There is no mark type ${t.type} in this schema`);
    return r.create(t.attrs);
  }
  /**
  Test whether two sets of marks are identical.
  */
  static sameSet(e, t) {
    if (e == t)
      return !0;
    if (e.length != t.length)
      return !1;
    for (let r = 0; r < e.length; r++)
      if (!e[r].eq(t[r]))
        return !1;
    return !0;
  }
  /**
  Create a properly sorted mark set from null, a single mark, or an
  unsorted array of marks.
  */
  static setFrom(e) {
    if (!e || Array.isArray(e) && e.length == 0)
      return jo.none;
    if (e instanceof jo)
      return [e];
    let t = e.slice();
    return t.sort((r, s) => r.type.rank - s.type.rank), t;
  }
};
ye.none = [];
class Qs extends Error {
}
class F {
  /**
  Create a slice. When specifying a non-zero open depth, you must
  make sure that there are nodes of at least that depth at the
  appropriate side of the fragment—i.e. if the fragment is an
  empty paragraph node, `openStart` and `openEnd` can't be greater
  than 1.
  
  It is not necessary for the content of open nodes to conform to
  the schema's content constraints, though it should be a valid
  start/end/middle for such a node, depending on which sides are
  open.
  */
  constructor(e, t, r) {
    this.content = e, this.openStart = t, this.openEnd = r;
  }
  /**
  The size this slice would add when inserted into a document.
  */
  get size() {
    return this.content.size - this.openStart - this.openEnd;
  }
  /**
  @internal
  */
  insertAt(e, t) {
    let r = hf(this.content, e + this.openStart, t);
    return r && new F(r, this.openStart, this.openEnd);
  }
  /**
  @internal
  */
  removeBetween(e, t) {
    return new F(mf(this.content, e + this.openStart, t + this.openStart), this.openStart, this.openEnd);
  }
  /**
  Tests whether this slice is equal to another slice.
  */
  eq(e) {
    return this.content.eq(e.content) && this.openStart == e.openStart && this.openEnd == e.openEnd;
  }
  /**
  @internal
  */
  toString() {
    return this.content + "(" + this.openStart + "," + this.openEnd + ")";
  }
  /**
  Convert a slice to a JSON-serializable representation.
  */
  toJSON() {
    if (!this.content.size)
      return null;
    let e = { content: this.content.toJSON() };
    return this.openStart > 0 && (e.openStart = this.openStart), this.openEnd > 0 && (e.openEnd = this.openEnd), e;
  }
  /**
  Deserialize a slice from its JSON representation.
  */
  static fromJSON(e, t) {
    if (!t)
      return F.empty;
    let r = t.openStart || 0, s = t.openEnd || 0;
    if (typeof r != "number" || typeof s != "number")
      throw new RangeError("Invalid input for Slice.fromJSON");
    return new F(D.fromJSON(e, t.content), r, s);
  }
  /**
  Create a slice from a fragment by taking the maximum possible
  open value on both side of the fragment.
  */
  static maxOpen(e, t = !0) {
    let r = 0, s = 0;
    for (let i = e.firstChild; i && !i.isLeaf && (t || !i.type.spec.isolating); i = i.firstChild)
      r++;
    for (let i = e.lastChild; i && !i.isLeaf && (t || !i.type.spec.isolating); i = i.lastChild)
      s++;
    return new F(e, r, s);
  }
}
F.empty = new F(D.empty, 0, 0);
function mf(n, e, t) {
  let { index: r, offset: s } = n.findIndex(e), i = n.maybeChild(r), { index: o, offset: a } = n.findIndex(t);
  if (s == e || i.isText) {
    if (a != t && !n.child(o).isText)
      throw new RangeError("Removing non-flat range");
    return n.cut(0, e).append(n.cut(t));
  }
  if (r != o)
    throw new RangeError("Removing non-flat range");
  return n.replaceChild(r, i.copy(mf(i.content, e - s - 1, t - s - 1)));
}
function hf(n, e, t, r) {
  let { index: s, offset: i } = n.findIndex(e), o = n.maybeChild(s);
  if (i == e || o.isText)
    return r && !r.canReplace(s, s, t) ? null : n.cut(0, e).append(t).append(n.cut(e));
  let a = hf(o.content, e - i - 1, t);
  return a && n.replaceChild(s, o.copy(a));
}
function wb(n, e, t) {
  if (t.openStart > n.depth)
    throw new Qs("Inserted content deeper than insertion position");
  if (n.depth - t.openStart != e.depth - t.openEnd)
    throw new Qs("Inconsistent open depths");
  return pf(n, e, t, 0);
}
function pf(n, e, t, r) {
  let s = n.index(r), i = n.node(r);
  if (s == e.index(r) && r < n.depth - t.openStart) {
    let o = pf(n, e, t, r + 1);
    return i.copy(i.content.replaceChild(s, o));
  } else if (t.content.size)
    if (!t.openStart && !t.openEnd && n.depth == r && e.depth == r) {
      let o = n.parent, a = o.content;
      return jn(o, a.cut(0, n.parentOffset).append(t.content).append(a.cut(e.parentOffset)));
    } else {
      let { start: o, end: a } = Nb(t, n);
      return jn(i, bf(n, o, a, e, r));
    }
  else
    return jn(i, Xs(n, e, r));
}
function gf(n, e) {
  if (!e.type.compatibleContent(n.type))
    throw new Qs("Cannot join " + e.type.name + " onto " + n.type.name);
}
function Uo(n, e, t) {
  let r = n.node(t);
  return gf(r, e.node(t)), r;
}
function Fn(n, e) {
  let t = e.length - 1;
  t >= 0 && n.isText && n.sameMarkup(e[t]) ? e[t] = n.withText(e[t].text + n.text) : e.push(n);
}
function Kr(n, e, t, r) {
  let s = (e || n).node(t), i = 0, o = e ? e.index(t) : s.childCount;
  n && (i = n.index(t), n.depth > t ? i++ : n.textOffset && (Fn(n.nodeAfter, r), i++));
  for (let a = i; a < o; a++)
    Fn(s.child(a), r);
  e && e.depth == t && e.textOffset && Fn(e.nodeBefore, r);
}
function jn(n, e) {
  return n.type.checkContent(e), n.copy(e);
}
function bf(n, e, t, r, s) {
  let i = n.depth > s && Uo(n, e, s + 1), o = r.depth > s && Uo(t, r, s + 1), a = [];
  return Kr(null, n, s, a), i && o && e.index(s) == t.index(s) ? (gf(i, o), Fn(jn(i, bf(n, e, t, r, s + 1)), a)) : (i && Fn(jn(i, Xs(n, e, s + 1)), a), Kr(e, t, s, a), o && Fn(jn(o, Xs(t, r, s + 1)), a)), Kr(r, null, s, a), new D(a);
}
function Xs(n, e, t) {
  let r = [];
  if (Kr(null, n, t, r), n.depth > t) {
    let s = Uo(n, e, t + 1);
    Fn(jn(s, Xs(n, e, t + 1)), r);
  }
  return Kr(e, null, t, r), new D(r);
}
function Nb(n, e) {
  let t = e.depth - n.openStart, s = e.node(t).copy(n.content);
  for (let i = t - 1; i >= 0; i--)
    s = e.node(i).copy(D.from(s));
  return {
    start: s.resolveNoCache(n.openStart + t),
    end: s.resolveNoCache(s.content.size - n.openEnd - t)
  };
}
class rs {
  /**
  @internal
  */
  constructor(e, t, r) {
    this.pos = e, this.path = t, this.parentOffset = r, this.depth = t.length / 3 - 1;
  }
  /**
  @internal
  */
  resolveDepth(e) {
    return e == null ? this.depth : e < 0 ? this.depth + e : e;
  }
  /**
  The parent node that the position points into. Note that even if
  a position points into a text node, that node is not considered
  the parent—text nodes are ‘flat’ in this model, and have no content.
  */
  get parent() {
    return this.node(this.depth);
  }
  /**
  The root node in which the position was resolved.
  */
  get doc() {
    return this.node(0);
  }
  /**
  The ancestor node at the given level. `p.node(p.depth)` is the
  same as `p.parent`.
  */
  node(e) {
    return this.path[this.resolveDepth(e) * 3];
  }
  /**
  The index into the ancestor at the given level. If this points
  at the 3rd node in the 2nd paragraph on the top level, for
  example, `p.index(0)` is 1 and `p.index(1)` is 2.
  */
  index(e) {
    return this.path[this.resolveDepth(e) * 3 + 1];
  }
  /**
  The index pointing after this position into the ancestor at the
  given level.
  */
  indexAfter(e) {
    return e = this.resolveDepth(e), this.index(e) + (e == this.depth && !this.textOffset ? 0 : 1);
  }
  /**
  The (absolute) position at the start of the node at the given
  level.
  */
  start(e) {
    return e = this.resolveDepth(e), e == 0 ? 0 : this.path[e * 3 - 1] + 1;
  }
  /**
  The (absolute) position at the end of the node at the given
  level.
  */
  end(e) {
    return e = this.resolveDepth(e), this.start(e) + this.node(e).content.size;
  }
  /**
  The (absolute) position directly before the wrapping node at the
  given level, or, when `depth` is `this.depth + 1`, the original
  position.
  */
  before(e) {
    if (e = this.resolveDepth(e), !e)
      throw new RangeError("There is no position before the top-level node");
    return e == this.depth + 1 ? this.pos : this.path[e * 3 - 1];
  }
  /**
  The (absolute) position directly after the wrapping node at the
  given level, or the original position when `depth` is `this.depth + 1`.
  */
  after(e) {
    if (e = this.resolveDepth(e), !e)
      throw new RangeError("There is no position after the top-level node");
    return e == this.depth + 1 ? this.pos : this.path[e * 3 - 1] + this.path[e * 3].nodeSize;
  }
  /**
  When this position points into a text node, this returns the
  distance between the position and the start of the text node.
  Will be zero for positions that point between nodes.
  */
  get textOffset() {
    return this.pos - this.path[this.path.length - 1];
  }
  /**
  Get the node directly after the position, if any. If the position
  points into a text node, only the part of that node after the
  position is returned.
  */
  get nodeAfter() {
    let e = this.parent, t = this.index(this.depth);
    if (t == e.childCount)
      return null;
    let r = this.pos - this.path[this.path.length - 1], s = e.child(t);
    return r ? e.child(t).cut(r) : s;
  }
  /**
  Get the node directly before the position, if any. If the
  position points into a text node, only the part of that node
  before the position is returned.
  */
  get nodeBefore() {
    let e = this.index(this.depth), t = this.pos - this.path[this.path.length - 1];
    return t ? this.parent.child(e).cut(0, t) : e == 0 ? null : this.parent.child(e - 1);
  }
  /**
  Get the position at the given index in the parent node at the
  given depth (which defaults to `this.depth`).
  */
  posAtIndex(e, t) {
    t = this.resolveDepth(t);
    let r = this.path[t * 3], s = t == 0 ? 0 : this.path[t * 3 - 1] + 1;
    for (let i = 0; i < e; i++)
      s += r.child(i).nodeSize;
    return s;
  }
  /**
  Get the marks at this position, factoring in the surrounding
  marks' [`inclusive`](https://prosemirror.net/docs/ref/#model.MarkSpec.inclusive) property. If the
  position is at the start of a non-empty node, the marks of the
  node after it (if any) are returned.
  */
  marks() {
    let e = this.parent, t = this.index();
    if (e.content.size == 0)
      return ye.none;
    if (this.textOffset)
      return e.child(t).marks;
    let r = e.maybeChild(t - 1), s = e.maybeChild(t);
    if (!r) {
      let a = r;
      r = s, s = a;
    }
    let i = r.marks;
    for (var o = 0; o < i.length; o++)
      i[o].type.spec.inclusive === !1 && (!s || !i[o].isInSet(s.marks)) && (i = i[o--].removeFromSet(i));
    return i;
  }
  /**
  Get the marks after the current position, if any, except those
  that are non-inclusive and not present at position `$end`. This
  is mostly useful for getting the set of marks to preserve after a
  deletion. Will return `null` if this position is at the end of
  its parent node or its parent node isn't a textblock (in which
  case no marks should be preserved).
  */
  marksAcross(e) {
    let t = this.parent.maybeChild(this.index());
    if (!t || !t.isInline)
      return null;
    let r = t.marks, s = e.parent.maybeChild(e.index());
    for (var i = 0; i < r.length; i++)
      r[i].type.spec.inclusive === !1 && (!s || !r[i].isInSet(s.marks)) && (r = r[i--].removeFromSet(r));
    return r;
  }
  /**
  The depth up to which this position and the given (non-resolved)
  position share the same parent nodes.
  */
  sharedDepth(e) {
    for (let t = this.depth; t > 0; t--)
      if (this.start(t) <= e && this.end(t) >= e)
        return t;
    return 0;
  }
  /**
  Returns a range based on the place where this position and the
  given position diverge around block content. If both point into
  the same textblock, for example, a range around that textblock
  will be returned. If they point into different blocks, the range
  around those blocks in their shared ancestor is returned. You can
  pass in an optional predicate that will be called with a parent
  node to see if a range into that parent is acceptable.
  */
  blockRange(e = this, t) {
    if (e.pos < this.pos)
      return e.blockRange(this);
    for (let r = this.depth - (this.parent.inlineContent || this.pos == e.pos ? 1 : 0); r >= 0; r--)
      if (e.pos <= this.end(r) && (!t || t(this.node(r))))
        return new ei(this, e, r);
    return null;
  }
  /**
  Query whether the given position shares the same parent node.
  */
  sameParent(e) {
    return this.pos - this.parentOffset == e.pos - e.parentOffset;
  }
  /**
  Return the greater of this and the given position.
  */
  max(e) {
    return e.pos > this.pos ? e : this;
  }
  /**
  Return the smaller of this and the given position.
  */
  min(e) {
    return e.pos < this.pos ? e : this;
  }
  /**
  @internal
  */
  toString() {
    let e = "";
    for (let t = 1; t <= this.depth; t++)
      e += (e ? "/" : "") + this.node(t).type.name + "_" + this.index(t - 1);
    return e + ":" + this.parentOffset;
  }
  /**
  @internal
  */
  static resolve(e, t) {
    if (!(t >= 0 && t <= e.content.size))
      throw new RangeError("Position " + t + " out of range");
    let r = [], s = 0, i = t;
    for (let o = e; ; ) {
      let { index: a, offset: l } = o.content.findIndex(i), c = i - l;
      if (r.push(o, a, s + l), !c || (o = o.child(a), o.isText))
        break;
      i = c - 1, s += l + 1;
    }
    return new rs(t, r, i);
  }
  /**
  @internal
  */
  static resolveCached(e, t) {
    for (let s = 0; s < io.length; s++) {
      let i = io[s];
      if (i.pos == t && i.doc == e)
        return i;
    }
    let r = io[oo] = rs.resolve(e, t);
    return oo = (oo + 1) % kb, r;
  }
}
let io = [], oo = 0, kb = 12;
class ei {
  /**
  Construct a node range. `$from` and `$to` should point into the
  same node until at least the given `depth`, since a node range
  denotes an adjacent set of nodes in a single parent node.
  */
  constructor(e, t, r) {
    this.$from = e, this.$to = t, this.depth = r;
  }
  /**
  The position at the start of the range.
  */
  get start() {
    return this.$from.before(this.depth + 1);
  }
  /**
  The position at the end of the range.
  */
  get end() {
    return this.$to.after(this.depth + 1);
  }
  /**
  The parent node that the range points into.
  */
  get parent() {
    return this.$from.node(this.depth);
  }
  /**
  The start index of the range in the parent node.
  */
  get startIndex() {
    return this.$from.index(this.depth);
  }
  /**
  The end index of the range in the parent node.
  */
  get endIndex() {
    return this.$to.indexAfter(this.depth);
  }
}
const Mb = /* @__PURE__ */ Object.create(null);
let Un = class Bo {
  /**
  @internal
  */
  constructor(e, t, r, s = ye.none) {
    this.type = e, this.attrs = t, this.marks = s, this.content = r || D.empty;
  }
  /**
  The size of this node, as defined by the integer-based [indexing
  scheme](/docs/guide/#doc.indexing). For text nodes, this is the
  amount of characters. For other leaf nodes, it is one. For
  non-leaf nodes, it is the size of the content plus two (the
  start and end token).
  */
  get nodeSize() {
    return this.isLeaf ? 1 : 2 + this.content.size;
  }
  /**
  The number of children that the node has.
  */
  get childCount() {
    return this.content.childCount;
  }
  /**
  Get the child node at the given index. Raises an error when the
  index is out of range.
  */
  child(e) {
    return this.content.child(e);
  }
  /**
  Get the child node at the given index, if it exists.
  */
  maybeChild(e) {
    return this.content.maybeChild(e);
  }
  /**
  Call `f` for every child node, passing the node, its offset
  into this parent node, and its index.
  */
  forEach(e) {
    this.content.forEach(e);
  }
  /**
  Invoke a callback for all descendant nodes recursively between
  the given two positions that are relative to start of this
  node's content. The callback is invoked with the node, its
  position relative to the original node (method receiver),
  its parent node, and its child index. When the callback returns
  false for a given node, that node's children will not be
  recursed over. The last parameter can be used to specify a
  starting position to count from.
  */
  nodesBetween(e, t, r, s = 0) {
    this.content.nodesBetween(e, t, r, s, this);
  }
  /**
  Call the given callback for every descendant node. Doesn't
  descend into a node when the callback returns `false`.
  */
  descendants(e) {
    this.nodesBetween(0, this.content.size, e);
  }
  /**
  Concatenates all the text nodes found in this fragment and its
  children.
  */
  get textContent() {
    return this.isLeaf && this.type.spec.leafText ? this.type.spec.leafText(this) : this.textBetween(0, this.content.size, "");
  }
  /**
  Get all text between positions `from` and `to`. When
  `blockSeparator` is given, it will be inserted to separate text
  from different block nodes. If `leafText` is given, it'll be
  inserted for every non-text leaf node encountered, otherwise
  [`leafText`](https://prosemirror.net/docs/ref/#model.NodeSpec^leafText) will be used.
  */
  textBetween(e, t, r, s) {
    return this.content.textBetween(e, t, r, s);
  }
  /**
  Returns this node's first child, or `null` if there are no
  children.
  */
  get firstChild() {
    return this.content.firstChild;
  }
  /**
  Returns this node's last child, or `null` if there are no
  children.
  */
  get lastChild() {
    return this.content.lastChild;
  }
  /**
  Test whether two nodes represent the same piece of document.
  */
  eq(e) {
    return this == e || this.sameMarkup(e) && this.content.eq(e.content);
  }
  /**
  Compare the markup (type, attributes, and marks) of this node to
  those of another. Returns `true` if both have the same markup.
  */
  sameMarkup(e) {
    return this.hasMarkup(e.type, e.attrs, e.marks);
  }
  /**
  Check whether this node's markup correspond to the given type,
  attributes, and marks.
  */
  hasMarkup(e, t, r) {
    return this.type == e && Ys(this.attrs, t || e.defaultAttrs || Mb) && ye.sameSet(this.marks, r || ye.none);
  }
  /**
  Create a new node with the same markup as this node, containing
  the given content (or empty, if no content is given).
  */
  copy(e = null) {
    return e == this.content ? this : new Bo(this.type, this.attrs, e, this.marks);
  }
  /**
  Create a copy of this node, with the given set of marks instead
  of the node's own marks.
  */
  mark(e) {
    return e == this.marks ? this : new Bo(this.type, this.attrs, this.content, e);
  }
  /**
  Create a copy of this node with only the content between the
  given positions. If `to` is not given, it defaults to the end of
  the node.
  */
  cut(e, t = this.content.size) {
    return e == 0 && t == this.content.size ? this : this.copy(this.content.cut(e, t));
  }
  /**
  Cut out the part of the document between the given positions, and
  return it as a `Slice` object.
  */
  slice(e, t = this.content.size, r = !1) {
    if (e == t)
      return F.empty;
    let s = this.resolve(e), i = this.resolve(t), o = r ? 0 : s.sharedDepth(t), a = s.start(o), c = s.node(o).content.cut(s.pos - a, i.pos - a);
    return new F(c, s.depth - o, i.depth - o);
  }
  /**
  Replace the part of the document between the given positions with
  the given slice. The slice must 'fit', meaning its open sides
  must be able to connect to the surrounding content, and its
  content nodes must be valid children for the node they are placed
  into. If any of this is violated, an error of type
  [`ReplaceError`](https://prosemirror.net/docs/ref/#model.ReplaceError) is thrown.
  */
  replace(e, t, r) {
    return wb(this.resolve(e), this.resolve(t), r);
  }
  /**
  Find the node directly after the given position.
  */
  nodeAt(e) {
    for (let t = this; ; ) {
      let { index: r, offset: s } = t.content.findIndex(e);
      if (t = t.maybeChild(r), !t)
        return null;
      if (s == e || t.isText)
        return t;
      e -= s + 1;
    }
  }
  /**
  Find the (direct) child node after the given offset, if any,
  and return it along with its index and offset relative to this
  node.
  */
  childAfter(e) {
    let { index: t, offset: r } = this.content.findIndex(e);
    return { node: this.content.maybeChild(t), index: t, offset: r };
  }
  /**
  Find the (direct) child node before the given offset, if any,
  and return it along with its index and offset relative to this
  node.
  */
  childBefore(e) {
    if (e == 0)
      return { node: null, index: 0, offset: 0 };
    let { index: t, offset: r } = this.content.findIndex(e);
    if (r < e)
      return { node: this.content.child(t), index: t, offset: r };
    let s = this.content.child(t - 1);
    return { node: s, index: t - 1, offset: r - s.nodeSize };
  }
  /**
  Resolve the given position in the document, returning an
  [object](https://prosemirror.net/docs/ref/#model.ResolvedPos) with information about its context.
  */
  resolve(e) {
    return rs.resolveCached(this, e);
  }
  /**
  @internal
  */
  resolveNoCache(e) {
    return rs.resolve(this, e);
  }
  /**
  Test whether a given mark or mark type occurs in this document
  between the two given positions.
  */
  rangeHasMark(e, t, r) {
    let s = !1;
    return t > e && this.nodesBetween(e, t, (i) => (r.isInSet(i.marks) && (s = !0), !s)), s;
  }
  /**
  True when this is a block (non-inline node)
  */
  get isBlock() {
    return this.type.isBlock;
  }
  /**
  True when this is a textblock node, a block node with inline
  content.
  */
  get isTextblock() {
    return this.type.isTextblock;
  }
  /**
  True when this node allows inline content.
  */
  get inlineContent() {
    return this.type.inlineContent;
  }
  /**
  True when this is an inline node (a text node or a node that can
  appear among text).
  */
  get isInline() {
    return this.type.isInline;
  }
  /**
  True when this is a text node.
  */
  get isText() {
    return this.type.isText;
  }
  /**
  True when this is a leaf node.
  */
  get isLeaf() {
    return this.type.isLeaf;
  }
  /**
  True when this is an atom, i.e. when it does not have directly
  editable content. This is usually the same as `isLeaf`, but can
  be configured with the [`atom` property](https://prosemirror.net/docs/ref/#model.NodeSpec.atom)
  on a node's spec (typically used when the node is displayed as
  an uneditable [node view](https://prosemirror.net/docs/ref/#view.NodeView)).
  */
  get isAtom() {
    return this.type.isAtom;
  }
  /**
  Return a string representation of this node for debugging
  purposes.
  */
  toString() {
    if (this.type.spec.toDebugString)
      return this.type.spec.toDebugString(this);
    let e = this.type.name;
    return this.content.size && (e += "(" + this.content.toStringInner() + ")"), yf(this.marks, e);
  }
  /**
  Get the content match in this node at the given index.
  */
  contentMatchAt(e) {
    let t = this.type.contentMatch.matchFragment(this.content, 0, e);
    if (!t)
      throw new Error("Called contentMatchAt on a node with invalid content");
    return t;
  }
  /**
  Test whether replacing the range between `from` and `to` (by
  child index) with the given replacement fragment (which defaults
  to the empty fragment) would leave the node's content valid. You
  can optionally pass `start` and `end` indices into the
  replacement fragment.
  */
  canReplace(e, t, r = D.empty, s = 0, i = r.childCount) {
    let o = this.contentMatchAt(e).matchFragment(r, s, i), a = o && o.matchFragment(this.content, t);
    if (!a || !a.validEnd)
      return !1;
    for (let l = s; l < i; l++)
      if (!this.type.allowsMarks(r.child(l).marks))
        return !1;
    return !0;
  }
  /**
  Test whether replacing the range `from` to `to` (by index) with
  a node of the given type would leave the node's content valid.
  */
  canReplaceWith(e, t, r, s) {
    if (s && !this.type.allowsMarks(s))
      return !1;
    let i = this.contentMatchAt(e).matchType(r), o = i && i.matchFragment(this.content, t);
    return o ? o.validEnd : !1;
  }
  /**
  Test whether the given node's content could be appended to this
  node. If that node is empty, this will only return true if there
  is at least one node type that can appear in both nodes (to avoid
  merging completely incompatible nodes).
  */
  canAppend(e) {
    return e.content.size ? this.canReplace(this.childCount, this.childCount, e.content) : this.type.compatibleContent(e.type);
  }
  /**
  Check whether this node and its descendants conform to the
  schema, and raise error when they do not.
  */
  check() {
    this.type.checkContent(this.content);
    let e = ye.none;
    for (let t = 0; t < this.marks.length; t++)
      e = this.marks[t].addToSet(e);
    if (!ye.sameSet(e, this.marks))
      throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map((t) => t.type.name)}`);
    this.content.forEach((t) => t.check());
  }
  /**
  Return a JSON-serializeable representation of this node.
  */
  toJSON() {
    let e = { type: this.type.name };
    for (let t in this.attrs) {
      e.attrs = this.attrs;
      break;
    }
    return this.content.size && (e.content = this.content.toJSON()), this.marks.length && (e.marks = this.marks.map((t) => t.toJSON())), e;
  }
  /**
  Deserialize a node from its JSON representation.
  */
  static fromJSON(e, t) {
    if (!t)
      throw new RangeError("Invalid input for Node.fromJSON");
    let r = null;
    if (t.marks) {
      if (!Array.isArray(t.marks))
        throw new RangeError("Invalid mark data for Node.fromJSON");
      r = t.marks.map(e.markFromJSON);
    }
    if (t.type == "text") {
      if (typeof t.text != "string")
        throw new RangeError("Invalid text node in JSON");
      return e.text(t.text, r);
    }
    let s = D.fromJSON(e, t.content);
    return e.nodeType(t.type).create(t.attrs, s, r);
  }
};
Un.prototype.text = void 0;
class ti extends Un {
  /**
  @internal
  */
  constructor(e, t, r, s) {
    if (super(e, t, null, s), !r)
      throw new RangeError("Empty text nodes are not allowed");
    this.text = r;
  }
  toString() {
    return this.type.spec.toDebugString ? this.type.spec.toDebugString(this) : yf(this.marks, JSON.stringify(this.text));
  }
  get textContent() {
    return this.text;
  }
  textBetween(e, t) {
    return this.text.slice(e, t);
  }
  get nodeSize() {
    return this.text.length;
  }
  mark(e) {
    return e == this.marks ? this : new ti(this.type, this.attrs, this.text, e);
  }
  withText(e) {
    return e == this.text ? this : new ti(this.type, this.attrs, e, this.marks);
  }
  cut(e = 0, t = this.text.length) {
    return e == 0 && t == this.text.length ? this : this.withText(this.text.slice(e, t));
  }
  eq(e) {
    return this.sameMarkup(e) && this.text == e.text;
  }
  toJSON() {
    let e = super.toJSON();
    return e.text = this.text, e;
  }
}
function yf(n, e) {
  for (let t = n.length - 1; t >= 0; t--)
    e = n[t].type.name + "(" + e + ")";
  return e;
}
class Jn {
  /**
  @internal
  */
  constructor(e) {
    this.validEnd = e, this.next = [], this.wrapCache = [];
  }
  /**
  @internal
  */
  static parse(e, t) {
    let r = new Cb(e, t);
    if (r.next == null)
      return Jn.empty;
    let s = vf(r);
    r.next && r.err("Unexpected trailing text");
    let i = _b(Tb(s));
    return Db(i, r), i;
  }
  /**
  Match a node type, returning a match after that node if
  successful.
  */
  matchType(e) {
    for (let t = 0; t < this.next.length; t++)
      if (this.next[t].type == e)
        return this.next[t].next;
    return null;
  }
  /**
  Try to match a fragment. Returns the resulting match when
  successful.
  */
  matchFragment(e, t = 0, r = e.childCount) {
    let s = this;
    for (let i = t; s && i < r; i++)
      s = s.matchType(e.child(i).type);
    return s;
  }
  /**
  @internal
  */
  get inlineContent() {
    return this.next.length != 0 && this.next[0].type.isInline;
  }
  /**
  Get the first matching node type at this match position that can
  be generated.
  */
  get defaultType() {
    for (let e = 0; e < this.next.length; e++) {
      let { type: t } = this.next[e];
      if (!(t.isText || t.hasRequiredAttrs()))
        return t;
    }
    return null;
  }
  /**
  @internal
  */
  compatible(e) {
    for (let t = 0; t < this.next.length; t++)
      for (let r = 0; r < e.next.length; r++)
        if (this.next[t].type == e.next[r].type)
          return !0;
    return !1;
  }
  /**
  Try to match the given fragment, and if that fails, see if it can
  be made to match by inserting nodes in front of it. When
  successful, return a fragment of inserted nodes (which may be
  empty if nothing had to be inserted). When `toEnd` is true, only
  return a fragment if the resulting match goes to the end of the
  content expression.
  */
  fillBefore(e, t = !1, r = 0) {
    let s = [this];
    function i(o, a) {
      let l = o.matchFragment(e, r);
      if (l && (!t || l.validEnd))
        return D.from(a.map((c) => c.createAndFill()));
      for (let c = 0; c < o.next.length; c++) {
        let { type: d, next: f } = o.next[c];
        if (!(d.isText || d.hasRequiredAttrs()) && s.indexOf(f) == -1) {
          s.push(f);
          let m = i(f, a.concat(d));
          if (m)
            return m;
        }
      }
      return null;
    }
    return i(this, []);
  }
  /**
  Find a set of wrapping node types that would allow a node of the
  given type to appear at this position. The result may be empty
  (when it fits directly) and will be null when no such wrapping
  exists.
  */
  findWrapping(e) {
    for (let r = 0; r < this.wrapCache.length; r += 2)
      if (this.wrapCache[r] == e)
        return this.wrapCache[r + 1];
    let t = this.computeWrapping(e);
    return this.wrapCache.push(e, t), t;
  }
  /**
  @internal
  */
  computeWrapping(e) {
    let t = /* @__PURE__ */ Object.create(null), r = [{ match: this, type: null, via: null }];
    for (; r.length; ) {
      let s = r.shift(), i = s.match;
      if (i.matchType(e)) {
        let o = [];
        for (let a = s; a.type; a = a.via)
          o.push(a.type);
        return o.reverse();
      }
      for (let o = 0; o < i.next.length; o++) {
        let { type: a, next: l } = i.next[o];
        !a.isLeaf && !a.hasRequiredAttrs() && !(a.name in t) && (!s.type || l.validEnd) && (r.push({ match: a.contentMatch, type: a, via: s }), t[a.name] = !0);
      }
    }
    return null;
  }
  /**
  The number of outgoing edges this node has in the finite
  automaton that describes the content expression.
  */
  get edgeCount() {
    return this.next.length;
  }
  /**
  Get the _n_​th outgoing edge from this node in the finite
  automaton that describes the content expression.
  */
  edge(e) {
    if (e >= this.next.length)
      throw new RangeError(`There's no ${e}th edge in this content match`);
    return this.next[e];
  }
  /**
  @internal
  */
  toString() {
    let e = [];
    function t(r) {
      e.push(r);
      for (let s = 0; s < r.next.length; s++)
        e.indexOf(r.next[s].next) == -1 && t(r.next[s].next);
    }
    return t(this), e.map((r, s) => {
      let i = s + (r.validEnd ? "*" : " ") + " ";
      for (let o = 0; o < r.next.length; o++)
        i += (o ? ", " : "") + r.next[o].type.name + "->" + e.indexOf(r.next[o].next);
      return i;
    }).join(`
`);
  }
}
Jn.empty = new Jn(!0);
class Cb {
  constructor(e, t) {
    this.string = e, this.nodeTypes = t, this.inline = null, this.pos = 0, this.tokens = e.split(/\s*(?=\b|\W|$)/), this.tokens[this.tokens.length - 1] == "" && this.tokens.pop(), this.tokens[0] == "" && this.tokens.shift();
  }
  get next() {
    return this.tokens[this.pos];
  }
  eat(e) {
    return this.next == e && (this.pos++ || !0);
  }
  err(e) {
    throw new SyntaxError(e + " (in content expression '" + this.string + "')");
  }
}
function vf(n) {
  let e = [];
  do
    e.push(Rb(n));
  while (n.eat("|"));
  return e.length == 1 ? e[0] : { type: "choice", exprs: e };
}
function Rb(n) {
  let e = [];
  do
    e.push(Eb(n));
  while (n.next && n.next != ")" && n.next != "|");
  return e.length == 1 ? e[0] : { type: "seq", exprs: e };
}
function Eb(n) {
  let e = Ob(n);
  for (; ; )
    if (n.eat("+"))
      e = { type: "plus", expr: e };
    else if (n.eat("*"))
      e = { type: "star", expr: e };
    else if (n.eat("?"))
      e = { type: "opt", expr: e };
    else if (n.eat("{"))
      e = Sb(n, e);
    else
      break;
  return e;
}
function Ac(n) {
  /\D/.test(n.next) && n.err("Expected number, got '" + n.next + "'");
  let e = Number(n.next);
  return n.pos++, e;
}
function Sb(n, e) {
  let t = Ac(n), r = t;
  return n.eat(",") && (n.next != "}" ? r = Ac(n) : r = -1), n.eat("}") || n.err("Unclosed braced range"), { type: "range", min: t, max: r, expr: e };
}
function Ab(n, e) {
  let t = n.nodeTypes, r = t[e];
  if (r)
    return [r];
  let s = [];
  for (let i in t) {
    let o = t[i];
    o.groups.indexOf(e) > -1 && s.push(o);
  }
  return s.length == 0 && n.err("No node type or group '" + e + "' found"), s;
}
function Ob(n) {
  if (n.eat("(")) {
    let e = vf(n);
    return n.eat(")") || n.err("Missing closing paren"), e;
  } else if (/\W/.test(n.next))
    n.err("Unexpected token '" + n.next + "'");
  else {
    let e = Ab(n, n.next).map((t) => (n.inline == null ? n.inline = t.isInline : n.inline != t.isInline && n.err("Mixing inline and block content"), { type: "name", value: t }));
    return n.pos++, e.length == 1 ? e[0] : { type: "choice", exprs: e };
  }
}
function Tb(n) {
  let e = [[]];
  return s(i(n, 0), t()), e;
  function t() {
    return e.push([]) - 1;
  }
  function r(o, a, l) {
    let c = { term: l, to: a };
    return e[o].push(c), c;
  }
  function s(o, a) {
    o.forEach((l) => l.to = a);
  }
  function i(o, a) {
    if (o.type == "choice")
      return o.exprs.reduce((l, c) => l.concat(i(c, a)), []);
    if (o.type == "seq")
      for (let l = 0; ; l++) {
        let c = i(o.exprs[l], a);
        if (l == o.exprs.length - 1)
          return c;
        s(c, a = t());
      }
    else if (o.type == "star") {
      let l = t();
      return r(a, l), s(i(o.expr, l), l), [r(l)];
    } else if (o.type == "plus") {
      let l = t();
      return s(i(o.expr, a), l), s(i(o.expr, l), l), [r(l)];
    } else {
      if (o.type == "opt")
        return [r(a)].concat(i(o.expr, a));
      if (o.type == "range") {
        let l = a;
        for (let c = 0; c < o.min; c++) {
          let d = t();
          s(i(o.expr, l), d), l = d;
        }
        if (o.max == -1)
          s(i(o.expr, l), l);
        else
          for (let c = o.min; c < o.max; c++) {
            let d = t();
            r(l, d), s(i(o.expr, l), d), l = d;
          }
        return [r(l)];
      } else {
        if (o.type == "name")
          return [r(a, void 0, o.value)];
        throw new Error("Unknown expr type");
      }
    }
  }
}
function xf(n, e) {
  return e - n;
}
function Oc(n, e) {
  let t = [];
  return r(e), t.sort(xf);
  function r(s) {
    let i = n[s];
    if (i.length == 1 && !i[0].term)
      return r(i[0].to);
    t.push(s);
    for (let o = 0; o < i.length; o++) {
      let { term: a, to: l } = i[o];
      !a && t.indexOf(l) == -1 && r(l);
    }
  }
}
function _b(n) {
  let e = /* @__PURE__ */ Object.create(null);
  return t(Oc(n, 0));
  function t(r) {
    let s = [];
    r.forEach((o) => {
      n[o].forEach(({ term: a, to: l }) => {
        if (!a)
          return;
        let c;
        for (let d = 0; d < s.length; d++)
          s[d][0] == a && (c = s[d][1]);
        Oc(n, l).forEach((d) => {
          c || s.push([a, c = []]), c.indexOf(d) == -1 && c.push(d);
        });
      });
    });
    let i = e[r.join(",")] = new Jn(r.indexOf(n.length - 1) > -1);
    for (let o = 0; o < s.length; o++) {
      let a = s[o][1].sort(xf);
      i.next.push({ type: s[o][0], next: e[a.join(",")] || t(a) });
    }
    return i;
  }
}
function Db(n, e) {
  for (let t = 0, r = [n]; t < r.length; t++) {
    let s = r[t], i = !s.validEnd, o = [];
    for (let a = 0; a < s.next.length; a++) {
      let { type: l, next: c } = s.next[a];
      o.push(l.name), i && !(l.isText || l.hasRequiredAttrs()) && (i = !1), r.indexOf(c) == -1 && r.push(c);
    }
    i && e.err("Only non-generatable nodes (" + o.join(", ") + ") in a required position (see https://prosemirror.net/docs/guide/#generatable)");
  }
}
function wf(n) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let t in n) {
    let r = n[t];
    if (!r.hasDefault)
      return null;
    e[t] = r.default;
  }
  return e;
}
function Nf(n, e) {
  let t = /* @__PURE__ */ Object.create(null);
  for (let r in n) {
    let s = e && e[r];
    if (s === void 0) {
      let i = n[r];
      if (i.hasDefault)
        s = i.default;
      else
        throw new RangeError("No value supplied for attribute " + r);
    }
    t[r] = s;
  }
  return t;
}
function kf(n) {
  let e = /* @__PURE__ */ Object.create(null);
  if (n)
    for (let t in n)
      e[t] = new Hb(n[t]);
  return e;
}
let Tc = class Mf {
  /**
  @internal
  */
  constructor(e, t, r) {
    this.name = e, this.schema = t, this.spec = r, this.markSet = null, this.groups = r.group ? r.group.split(" ") : [], this.attrs = kf(r.attrs), this.defaultAttrs = wf(this.attrs), this.contentMatch = null, this.inlineContent = null, this.isBlock = !(r.inline || e == "text"), this.isText = e == "text";
  }
  /**
  True if this is an inline type.
  */
  get isInline() {
    return !this.isBlock;
  }
  /**
  True if this is a textblock type, a block that contains inline
  content.
  */
  get isTextblock() {
    return this.isBlock && this.inlineContent;
  }
  /**
  True for node types that allow no content.
  */
  get isLeaf() {
    return this.contentMatch == Jn.empty;
  }
  /**
  True when this node is an atom, i.e. when it does not have
  directly editable content.
  */
  get isAtom() {
    return this.isLeaf || !!this.spec.atom;
  }
  /**
  The node type's [whitespace](https://prosemirror.net/docs/ref/#model.NodeSpec.whitespace) option.
  */
  get whitespace() {
    return this.spec.whitespace || (this.spec.code ? "pre" : "normal");
  }
  /**
  Tells you whether this node type has any required attributes.
  */
  hasRequiredAttrs() {
    for (let e in this.attrs)
      if (this.attrs[e].isRequired)
        return !0;
    return !1;
  }
  /**
  Indicates whether this node allows some of the same content as
  the given node type.
  */
  compatibleContent(e) {
    return this == e || this.contentMatch.compatible(e.contentMatch);
  }
  /**
  @internal
  */
  computeAttrs(e) {
    return !e && this.defaultAttrs ? this.defaultAttrs : Nf(this.attrs, e);
  }
  /**
  Create a `Node` of this type. The given attributes are
  checked and defaulted (you can pass `null` to use the type's
  defaults entirely, if no required attributes exist). `content`
  may be a `Fragment`, a node, an array of nodes, or
  `null`. Similarly `marks` may be `null` to default to the empty
  set of marks.
  */
  create(e = null, t, r) {
    if (this.isText)
      throw new Error("NodeType.create can't construct text nodes");
    return new Un(this, this.computeAttrs(e), D.from(t), ye.setFrom(r));
  }
  /**
  Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but check the given content
  against the node type's content restrictions, and throw an error
  if it doesn't match.
  */
  createChecked(e = null, t, r) {
    return t = D.from(t), this.checkContent(t), new Un(this, this.computeAttrs(e), t, ye.setFrom(r));
  }
  /**
  Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but see if it is
  necessary to add nodes to the start or end of the given fragment
  to make it fit the node. If no fitting wrapping can be found,
  return null. Note that, due to the fact that required nodes can
  always be created, this will always succeed if you pass null or
  `Fragment.empty` as content.
  */
  createAndFill(e = null, t, r) {
    if (e = this.computeAttrs(e), t = D.from(t), t.size) {
      let o = this.contentMatch.fillBefore(t);
      if (!o)
        return null;
      t = o.append(t);
    }
    let s = this.contentMatch.matchFragment(t), i = s && s.fillBefore(D.empty, !0);
    return i ? new Un(this, e, t.append(i), ye.setFrom(r)) : null;
  }
  /**
  Returns true if the given fragment is valid content for this node
  type with the given attributes.
  */
  validContent(e) {
    let t = this.contentMatch.matchFragment(e);
    if (!t || !t.validEnd)
      return !1;
    for (let r = 0; r < e.childCount; r++)
      if (!this.allowsMarks(e.child(r).marks))
        return !1;
    return !0;
  }
  /**
  Throws a RangeError if the given fragment is not valid content for this
  node type.
  @internal
  */
  checkContent(e) {
    if (!this.validContent(e))
      throw new RangeError(`Invalid content for node ${this.name}: ${e.toString().slice(0, 50)}`);
  }
  /**
  Check whether the given mark type is allowed in this node.
  */
  allowsMarkType(e) {
    return this.markSet == null || this.markSet.indexOf(e) > -1;
  }
  /**
  Test whether the given set of marks are allowed in this node.
  */
  allowsMarks(e) {
    if (this.markSet == null)
      return !0;
    for (let t = 0; t < e.length; t++)
      if (!this.allowsMarkType(e[t].type))
        return !1;
    return !0;
  }
  /**
  Removes the marks that are not allowed in this node from the given set.
  */
  allowedMarks(e) {
    if (this.markSet == null)
      return e;
    let t;
    for (let r = 0; r < e.length; r++)
      this.allowsMarkType(e[r].type) ? t && t.push(e[r]) : t || (t = e.slice(0, r));
    return t ? t.length ? t : ye.none : e;
  }
  /**
  @internal
  */
  static compile(e, t) {
    let r = /* @__PURE__ */ Object.create(null);
    e.forEach((i, o) => r[i] = new Mf(i, t, o));
    let s = t.spec.topNode || "doc";
    if (!r[s])
      throw new RangeError("Schema is missing its top node type ('" + s + "')");
    if (!r.text)
      throw new RangeError("Every schema needs a 'text' type");
    for (let i in r.text.attrs)
      throw new RangeError("The text node type should not have attributes");
    return r;
  }
};
class Hb {
  constructor(e) {
    this.hasDefault = Object.prototype.hasOwnProperty.call(e, "default"), this.default = e.default;
  }
  get isRequired() {
    return !this.hasDefault;
  }
}
class Zi {
  /**
  @internal
  */
  constructor(e, t, r, s) {
    this.name = e, this.rank = t, this.schema = r, this.spec = s, this.attrs = kf(s.attrs), this.excluded = null;
    let i = wf(this.attrs);
    this.instance = i ? new ye(this, i) : null;
  }
  /**
  Create a mark of this type. `attrs` may be `null` or an object
  containing only some of the mark's attributes. The others, if
  they have defaults, will be added.
  */
  create(e = null) {
    return !e && this.instance ? this.instance : new ye(this, Nf(this.attrs, e));
  }
  /**
  @internal
  */
  static compile(e, t) {
    let r = /* @__PURE__ */ Object.create(null), s = 0;
    return e.forEach((i, o) => r[i] = new Zi(i, s++, t, o)), r;
  }
  /**
  When there is a mark of this type in the given set, a new set
  without it is returned. Otherwise, the input set is returned.
  */
  removeFromSet(e) {
    for (var t = 0; t < e.length; t++)
      e[t].type == this && (e = e.slice(0, t).concat(e.slice(t + 1)), t--);
    return e;
  }
  /**
  Tests whether there is a mark of this type in the given set.
  */
  isInSet(e) {
    for (let t = 0; t < e.length; t++)
      if (e[t].type == this)
        return e[t];
  }
  /**
  Queries whether a given mark type is
  [excluded](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) by this one.
  */
  excludes(e) {
    return this.excluded.indexOf(e) > -1;
  }
}
class Ib {
  /**
  Construct a schema from a schema [specification](https://prosemirror.net/docs/ref/#model.SchemaSpec).
  */
  constructor(e) {
    this.cached = /* @__PURE__ */ Object.create(null);
    let t = this.spec = {};
    for (let s in e)
      t[s] = e[s];
    t.nodes = Ue.from(e.nodes), t.marks = Ue.from(e.marks || {}), this.nodes = Tc.compile(this.spec.nodes, this), this.marks = Zi.compile(this.spec.marks, this);
    let r = /* @__PURE__ */ Object.create(null);
    for (let s in this.nodes) {
      if (s in this.marks)
        throw new RangeError(s + " can not be both a node and a mark");
      let i = this.nodes[s], o = i.spec.content || "", a = i.spec.marks;
      i.contentMatch = r[o] || (r[o] = Jn.parse(o, this.nodes)), i.inlineContent = i.contentMatch.inlineContent, i.markSet = a == "_" ? null : a ? _c(this, a.split(" ")) : a == "" || !i.inlineContent ? [] : null;
    }
    for (let s in this.marks) {
      let i = this.marks[s], o = i.spec.excludes;
      i.excluded = o == null ? [i] : o == "" ? [] : _c(this, o.split(" "));
    }
    this.nodeFromJSON = this.nodeFromJSON.bind(this), this.markFromJSON = this.markFromJSON.bind(this), this.topNodeType = this.nodes[this.spec.topNode || "doc"], this.cached.wrappings = /* @__PURE__ */ Object.create(null);
  }
  /**
  Create a node in this schema. The `type` may be a string or a
  `NodeType` instance. Attributes will be extended with defaults,
  `content` may be a `Fragment`, `null`, a `Node`, or an array of
  nodes.
  */
  node(e, t = null, r, s) {
    if (typeof e == "string")
      e = this.nodeType(e);
    else if (e instanceof Tc) {
      if (e.schema != this)
        throw new RangeError("Node type from different schema used (" + e.name + ")");
    } else
      throw new RangeError("Invalid node type: " + e);
    return e.createChecked(t, r, s);
  }
  /**
  Create a text node in the schema. Empty text nodes are not
  allowed.
  */
  text(e, t) {
    let r = this.nodes.text;
    return new ti(r, r.defaultAttrs, e, ye.setFrom(t));
  }
  /**
  Create a mark with the given type and attributes.
  */
  mark(e, t) {
    return typeof e == "string" && (e = this.marks[e]), e.create(t);
  }
  /**
  Deserialize a node from its JSON representation. This method is
  bound.
  */
  nodeFromJSON(e) {
    return Un.fromJSON(this, e);
  }
  /**
  Deserialize a mark from its JSON representation. This method is
  bound.
  */
  markFromJSON(e) {
    return ye.fromJSON(this, e);
  }
  /**
  @internal
  */
  nodeType(e) {
    let t = this.nodes[e];
    if (!t)
      throw new RangeError("Unknown node type: " + e);
    return t;
  }
}
function _c(n, e) {
  let t = [];
  for (let r = 0; r < e.length; r++) {
    let s = e[r], i = n.marks[s], o = i;
    if (i)
      t.push(i);
    else
      for (let a in n.marks) {
        let l = n.marks[a];
        (s == "_" || l.spec.group && l.spec.group.split(" ").indexOf(s) > -1) && t.push(o = l);
      }
    if (!o)
      throw new SyntaxError("Unknown mark type: '" + e[r] + "'");
  }
  return t;
}
let Aa = class Wo {
  /**
  Create a parser that targets the given schema, using the given
  parsing rules.
  */
  constructor(e, t) {
    this.schema = e, this.rules = t, this.tags = [], this.styles = [], t.forEach((r) => {
      r.tag ? this.tags.push(r) : r.style && this.styles.push(r);
    }), this.normalizeLists = !this.tags.some((r) => {
      if (!/^(ul|ol)\b/.test(r.tag) || !r.node)
        return !1;
      let s = e.nodes[r.node];
      return s.contentMatch.matchType(s);
    });
  }
  /**
  Parse a document from the content of a DOM node.
  */
  parse(e, t = {}) {
    let r = new Hc(this, t, !1);
    return r.addAll(e, t.from, t.to), r.finish();
  }
  /**
  Parses the content of the given DOM node, like
  [`parse`](https://prosemirror.net/docs/ref/#model.DOMParser.parse), and takes the same set of
  options. But unlike that method, which produces a whole node,
  this one returns a slice that is open at the sides, meaning that
  the schema constraints aren't applied to the start of nodes to
  the left of the input and the end of nodes at the end.
  */
  parseSlice(e, t = {}) {
    let r = new Hc(this, t, !0);
    return r.addAll(e, t.from, t.to), F.maxOpen(r.finish());
  }
  /**
  @internal
  */
  matchTag(e, t, r) {
    for (let s = r ? this.tags.indexOf(r) + 1 : 0; s < this.tags.length; s++) {
      let i = this.tags[s];
      if (Zb(e, i.tag) && (i.namespace === void 0 || e.namespaceURI == i.namespace) && (!i.context || t.matchesContext(i.context))) {
        if (i.getAttrs) {
          let o = i.getAttrs(e);
          if (o === !1)
            continue;
          i.attrs = o || void 0;
        }
        return i;
      }
    }
  }
  /**
  @internal
  */
  matchStyle(e, t, r, s) {
    for (let i = s ? this.styles.indexOf(s) + 1 : 0; i < this.styles.length; i++) {
      let o = this.styles[i], a = o.style;
      if (!(a.indexOf(e) != 0 || o.context && !r.matchesContext(o.context) || // Test that the style string either precisely matches the prop,
      // or has an '=' sign after the prop, followed by the given
      // value.
      a.length > e.length && (a.charCodeAt(e.length) != 61 || a.slice(e.length + 1) != t))) {
        if (o.getAttrs) {
          let l = o.getAttrs(t);
          if (l === !1)
            continue;
          o.attrs = l || void 0;
        }
        return o;
      }
    }
  }
  /**
  @internal
  */
  static schemaRules(e) {
    let t = [];
    function r(s) {
      let i = s.priority == null ? 50 : s.priority, o = 0;
      for (; o < t.length; o++) {
        let a = t[o];
        if ((a.priority == null ? 50 : a.priority) < i)
          break;
      }
      t.splice(o, 0, s);
    }
    for (let s in e.marks) {
      let i = e.marks[s].spec.parseDOM;
      i && i.forEach((o) => {
        r(o = Ic(o)), o.mark || o.ignore || o.clearMark || (o.mark = s);
      });
    }
    for (let s in e.nodes) {
      let i = e.nodes[s].spec.parseDOM;
      i && i.forEach((o) => {
        r(o = Ic(o)), o.node || o.ignore || o.mark || (o.node = s);
      });
    }
    return t;
  }
  /**
  Construct a DOM parser using the parsing rules listed in a
  schema's [node specs](https://prosemirror.net/docs/ref/#model.NodeSpec.parseDOM), reordered by
  [priority](https://prosemirror.net/docs/ref/#model.ParseRule.priority).
  */
  static fromSchema(e) {
    return e.cached.domParser || (e.cached.domParser = new Wo(e, Wo.schemaRules(e)));
  }
};
const Cf = {
  address: !0,
  article: !0,
  aside: !0,
  blockquote: !0,
  canvas: !0,
  dd: !0,
  div: !0,
  dl: !0,
  fieldset: !0,
  figcaption: !0,
  figure: !0,
  footer: !0,
  form: !0,
  h1: !0,
  h2: !0,
  h3: !0,
  h4: !0,
  h5: !0,
  h6: !0,
  header: !0,
  hgroup: !0,
  hr: !0,
  li: !0,
  noscript: !0,
  ol: !0,
  output: !0,
  p: !0,
  pre: !0,
  section: !0,
  table: !0,
  tfoot: !0,
  ul: !0
}, Pb = {
  head: !0,
  noscript: !0,
  object: !0,
  script: !0,
  style: !0,
  title: !0
}, Rf = { ol: !0, ul: !0 }, ni = 1, ri = 2, Jr = 4;
function Dc(n, e, t) {
  return e != null ? (e ? ni : 0) | (e === "full" ? ri : 0) : n && n.whitespace == "pre" ? ni | ri : t & ~Jr;
}
class Ps {
  constructor(e, t, r, s, i, o, a) {
    this.type = e, this.attrs = t, this.marks = r, this.pendingMarks = s, this.solid = i, this.options = a, this.content = [], this.activeMarks = ye.none, this.stashMarks = [], this.match = o || (a & Jr ? null : e.contentMatch);
  }
  findWrapping(e) {
    if (!this.match) {
      if (!this.type)
        return [];
      let t = this.type.contentMatch.fillBefore(D.from(e));
      if (t)
        this.match = this.type.contentMatch.matchFragment(t);
      else {
        let r = this.type.contentMatch, s;
        return (s = r.findWrapping(e.type)) ? (this.match = r, s) : null;
      }
    }
    return this.match.findWrapping(e.type);
  }
  finish(e) {
    if (!(this.options & ni)) {
      let r = this.content[this.content.length - 1], s;
      if (r && r.isText && (s = /[ \t\r\n\u000c]+$/.exec(r.text))) {
        let i = r;
        r.text.length == s[0].length ? this.content.pop() : this.content[this.content.length - 1] = i.withText(i.text.slice(0, i.text.length - s[0].length));
      }
    }
    let t = D.from(this.content);
    return !e && this.match && (t = t.append(this.match.fillBefore(D.empty, !0))), this.type ? this.type.create(this.attrs, t, this.marks) : t;
  }
  popFromStashMark(e) {
    for (let t = this.stashMarks.length - 1; t >= 0; t--)
      if (e.eq(this.stashMarks[t]))
        return this.stashMarks.splice(t, 1)[0];
  }
  applyPending(e) {
    for (let t = 0, r = this.pendingMarks; t < r.length; t++) {
      let s = r[t];
      (this.type ? this.type.allowsMarkType(s.type) : Vb(s.type, e)) && !s.isInSet(this.activeMarks) && (this.activeMarks = s.addToSet(this.activeMarks), this.pendingMarks = s.removeFromSet(this.pendingMarks));
    }
  }
  inlineContext(e) {
    return this.type ? this.type.inlineContent : this.content.length ? this.content[0].isInline : e.parentNode && !Cf.hasOwnProperty(e.parentNode.nodeName.toLowerCase());
  }
}
class Hc {
  constructor(e, t, r) {
    this.parser = e, this.options = t, this.isOpen = r, this.open = 0;
    let s = t.topNode, i, o = Dc(null, t.preserveWhitespace, 0) | (r ? Jr : 0);
    s ? i = new Ps(s.type, s.attrs, ye.none, ye.none, !0, t.topMatch || s.type.contentMatch, o) : r ? i = new Ps(null, null, ye.none, ye.none, !0, null, o) : i = new Ps(e.schema.topNodeType, null, ye.none, ye.none, !0, null, o), this.nodes = [i], this.find = t.findPositions, this.needsBlock = !1;
  }
  get top() {
    return this.nodes[this.open];
  }
  // Add a DOM node to the content. Text is inserted as text node,
  // otherwise, the node is passed to `addElement` or, if it has a
  // `style` attribute, `addElementWithStyles`.
  addDOM(e) {
    e.nodeType == 3 ? this.addTextNode(e) : e.nodeType == 1 && this.addElement(e);
  }
  withStyleRules(e, t) {
    let r = e.getAttribute("style");
    if (!r)
      return t();
    let s = this.readStyles($b(r));
    if (!s)
      return;
    let [i, o] = s, a = this.top;
    for (let l = 0; l < o.length; l++)
      this.removePendingMark(o[l], a);
    for (let l = 0; l < i.length; l++)
      this.addPendingMark(i[l]);
    t();
    for (let l = 0; l < i.length; l++)
      this.removePendingMark(i[l], a);
    for (let l = 0; l < o.length; l++)
      this.addPendingMark(o[l]);
  }
  addTextNode(e) {
    let t = e.nodeValue, r = this.top;
    if (r.options & ri || r.inlineContext(e) || /[^ \t\r\n\u000c]/.test(t)) {
      if (r.options & ni)
        r.options & ri ? t = t.replace(/\r\n?/g, `
`) : t = t.replace(/\r?\n|\r/g, " ");
      else if (t = t.replace(/[ \t\r\n\u000c]+/g, " "), /^[ \t\r\n\u000c]/.test(t) && this.open == this.nodes.length - 1) {
        let s = r.content[r.content.length - 1], i = e.previousSibling;
        (!s || i && i.nodeName == "BR" || s.isText && /[ \t\r\n\u000c]$/.test(s.text)) && (t = t.slice(1));
      }
      t && this.insertNode(this.parser.schema.text(t)), this.findInText(e);
    } else
      this.findInside(e);
  }
  // Try to find a handler for the given tag and use that to parse. If
  // none is found, the element's content nodes are added directly.
  addElement(e, t) {
    let r = e.nodeName.toLowerCase(), s;
    Rf.hasOwnProperty(r) && this.parser.normalizeLists && Lb(e);
    let i = this.options.ruleFromNode && this.options.ruleFromNode(e) || (s = this.parser.matchTag(e, this, t));
    if (i ? i.ignore : Pb.hasOwnProperty(r))
      this.findInside(e), this.ignoreFallback(e);
    else if (!i || i.skip || i.closeParent) {
      i && i.closeParent ? this.open = Math.max(0, this.open - 1) : i && i.skip.nodeType && (e = i.skip);
      let o, a = this.top, l = this.needsBlock;
      if (Cf.hasOwnProperty(r))
        a.content.length && a.content[0].isInline && this.open && (this.open--, a = this.top), o = !0, a.type || (this.needsBlock = !0);
      else if (!e.firstChild) {
        this.leafFallback(e);
        return;
      }
      i && i.skip ? this.addAll(e) : this.withStyleRules(e, () => this.addAll(e)), o && this.sync(a), this.needsBlock = l;
    } else
      this.withStyleRules(e, () => {
        this.addElementByRule(e, i, i.consuming === !1 ? s : void 0);
      });
  }
  // Called for leaf DOM nodes that would otherwise be ignored
  leafFallback(e) {
    e.nodeName == "BR" && this.top.type && this.top.type.inlineContent && this.addTextNode(e.ownerDocument.createTextNode(`
`));
  }
  // Called for ignored nodes
  ignoreFallback(e) {
    e.nodeName == "BR" && (!this.top.type || !this.top.type.inlineContent) && this.findPlace(this.parser.schema.text("-"));
  }
  // Run any style parser associated with the node's styles. Either
  // return an array of marks, or null to indicate some of the styles
  // had a rule with `ignore` set.
  readStyles(e) {
    let t = ye.none, r = ye.none;
    for (let s = 0; s < e.length; s += 2)
      for (let i = void 0; ; ) {
        let o = this.parser.matchStyle(e[s], e[s + 1], this, i);
        if (!o)
          break;
        if (o.ignore)
          return null;
        if (o.clearMark ? this.top.pendingMarks.concat(this.top.activeMarks).forEach((a) => {
          o.clearMark(a) && (r = a.addToSet(r));
        }) : t = this.parser.schema.marks[o.mark].create(o.attrs).addToSet(t), o.consuming === !1)
          i = o;
        else
          break;
      }
    return [t, r];
  }
  // Look up a handler for the given node. If none are found, return
  // false. Otherwise, apply it, use its return value to drive the way
  // the node's content is wrapped, and return true.
  addElementByRule(e, t, r) {
    let s, i, o;
    t.node ? (i = this.parser.schema.nodes[t.node], i.isLeaf ? this.insertNode(i.create(t.attrs)) || this.leafFallback(e) : s = this.enter(i, t.attrs || null, t.preserveWhitespace)) : (o = this.parser.schema.marks[t.mark].create(t.attrs), this.addPendingMark(o));
    let a = this.top;
    if (i && i.isLeaf)
      this.findInside(e);
    else if (r)
      this.addElement(e, r);
    else if (t.getContent)
      this.findInside(e), t.getContent(e, this.parser.schema).forEach((l) => this.insertNode(l));
    else {
      let l = e;
      typeof t.contentElement == "string" ? l = e.querySelector(t.contentElement) : typeof t.contentElement == "function" ? l = t.contentElement(e) : t.contentElement && (l = t.contentElement), this.findAround(e, l, !0), this.addAll(l);
    }
    s && this.sync(a) && this.open--, o && this.removePendingMark(o, a);
  }
  // Add all child nodes between `startIndex` and `endIndex` (or the
  // whole node, if not given). If `sync` is passed, use it to
  // synchronize after every block element.
  addAll(e, t, r) {
    let s = t || 0;
    for (let i = t ? e.childNodes[t] : e.firstChild, o = r == null ? null : e.childNodes[r]; i != o; i = i.nextSibling, ++s)
      this.findAtPoint(e, s), this.addDOM(i);
    this.findAtPoint(e, s);
  }
  // Try to find a way to fit the given node type into the current
  // context. May add intermediate wrappers and/or leave non-solid
  // nodes that we're in.
  findPlace(e) {
    let t, r;
    for (let s = this.open; s >= 0; s--) {
      let i = this.nodes[s], o = i.findWrapping(e);
      if (o && (!t || t.length > o.length) && (t = o, r = i, !o.length) || i.solid)
        break;
    }
    if (!t)
      return !1;
    this.sync(r);
    for (let s = 0; s < t.length; s++)
      this.enterInner(t[s], null, !1);
    return !0;
  }
  // Try to insert the given node, adjusting the context when needed.
  insertNode(e) {
    if (e.isInline && this.needsBlock && !this.top.type) {
      let t = this.textblockFromContext();
      t && this.enterInner(t);
    }
    if (this.findPlace(e)) {
      this.closeExtra();
      let t = this.top;
      t.applyPending(e.type), t.match && (t.match = t.match.matchType(e.type));
      let r = t.activeMarks;
      for (let s = 0; s < e.marks.length; s++)
        (!t.type || t.type.allowsMarkType(e.marks[s].type)) && (r = e.marks[s].addToSet(r));
      return t.content.push(e.mark(r)), !0;
    }
    return !1;
  }
  // Try to start a node of the given type, adjusting the context when
  // necessary.
  enter(e, t, r) {
    let s = this.findPlace(e.create(t));
    return s && this.enterInner(e, t, !0, r), s;
  }
  // Open a node of the given type
  enterInner(e, t = null, r = !1, s) {
    this.closeExtra();
    let i = this.top;
    i.applyPending(e), i.match = i.match && i.match.matchType(e);
    let o = Dc(e, s, i.options);
    i.options & Jr && i.content.length == 0 && (o |= Jr), this.nodes.push(new Ps(e, t, i.activeMarks, i.pendingMarks, r, null, o)), this.open++;
  }
  // Make sure all nodes above this.open are finished and added to
  // their parents
  closeExtra(e = !1) {
    let t = this.nodes.length - 1;
    if (t > this.open) {
      for (; t > this.open; t--)
        this.nodes[t - 1].content.push(this.nodes[t].finish(e));
      this.nodes.length = this.open + 1;
    }
  }
  finish() {
    return this.open = 0, this.closeExtra(this.isOpen), this.nodes[0].finish(this.isOpen || this.options.topOpen);
  }
  sync(e) {
    for (let t = this.open; t >= 0; t--)
      if (this.nodes[t] == e)
        return this.open = t, !0;
    return !1;
  }
  get currentPos() {
    this.closeExtra();
    let e = 0;
    for (let t = this.open; t >= 0; t--) {
      let r = this.nodes[t].content;
      for (let s = r.length - 1; s >= 0; s--)
        e += r[s].nodeSize;
      t && e++;
    }
    return e;
  }
  findAtPoint(e, t) {
    if (this.find)
      for (let r = 0; r < this.find.length; r++)
        this.find[r].node == e && this.find[r].offset == t && (this.find[r].pos = this.currentPos);
  }
  findInside(e) {
    if (this.find)
      for (let t = 0; t < this.find.length; t++)
        this.find[t].pos == null && e.nodeType == 1 && e.contains(this.find[t].node) && (this.find[t].pos = this.currentPos);
  }
  findAround(e, t, r) {
    if (e != t && this.find)
      for (let s = 0; s < this.find.length; s++)
        this.find[s].pos == null && e.nodeType == 1 && e.contains(this.find[s].node) && t.compareDocumentPosition(this.find[s].node) & (r ? 2 : 4) && (this.find[s].pos = this.currentPos);
  }
  findInText(e) {
    if (this.find)
      for (let t = 0; t < this.find.length; t++)
        this.find[t].node == e && (this.find[t].pos = this.currentPos - (e.nodeValue.length - this.find[t].offset));
  }
  // Determines whether the given context string matches this context.
  matchesContext(e) {
    if (e.indexOf("|") > -1)
      return e.split(/\s*\|\s*/).some(this.matchesContext, this);
    let t = e.split("/"), r = this.options.context, s = !this.isOpen && (!r || r.parent.type == this.nodes[0].type), i = -(r ? r.depth + 1 : 0) + (s ? 0 : 1), o = (a, l) => {
      for (; a >= 0; a--) {
        let c = t[a];
        if (c == "") {
          if (a == t.length - 1 || a == 0)
            continue;
          for (; l >= i; l--)
            if (o(a - 1, l))
              return !0;
          return !1;
        } else {
          let d = l > 0 || l == 0 && s ? this.nodes[l].type : r && l >= i ? r.node(l - i).type : null;
          if (!d || d.name != c && d.groups.indexOf(c) == -1)
            return !1;
          l--;
        }
      }
      return !0;
    };
    return o(t.length - 1, this.open);
  }
  textblockFromContext() {
    let e = this.options.context;
    if (e)
      for (let t = e.depth; t >= 0; t--) {
        let r = e.node(t).contentMatchAt(e.indexAfter(t)).defaultType;
        if (r && r.isTextblock && r.defaultAttrs)
          return r;
      }
    for (let t in this.parser.schema.nodes) {
      let r = this.parser.schema.nodes[t];
      if (r.isTextblock && r.defaultAttrs)
        return r;
    }
  }
  addPendingMark(e) {
    let t = zb(e, this.top.pendingMarks);
    t && this.top.stashMarks.push(t), this.top.pendingMarks = e.addToSet(this.top.pendingMarks);
  }
  removePendingMark(e, t) {
    for (let r = this.open; r >= 0; r--) {
      let s = this.nodes[r];
      if (s.pendingMarks.lastIndexOf(e) > -1)
        s.pendingMarks = e.removeFromSet(s.pendingMarks);
      else {
        s.activeMarks = e.removeFromSet(s.activeMarks);
        let o = s.popFromStashMark(e);
        o && s.type && s.type.allowsMarkType(o.type) && (s.activeMarks = o.addToSet(s.activeMarks));
      }
      if (s == t)
        break;
    }
  }
}
function Lb(n) {
  for (let e = n.firstChild, t = null; e; e = e.nextSibling) {
    let r = e.nodeType == 1 ? e.nodeName.toLowerCase() : null;
    r && Rf.hasOwnProperty(r) && t ? (t.appendChild(e), e = t) : r == "li" ? t = e : r && (t = null);
  }
}
function Zb(n, e) {
  return (n.matches || n.msMatchesSelector || n.webkitMatchesSelector || n.mozMatchesSelector).call(n, e);
}
function $b(n) {
  let e = /\s*([\w-]+)\s*:\s*([^;]+)/g, t, r = [];
  for (; t = e.exec(n); )
    r.push(t[1], t[2].trim());
  return r;
}
function Ic(n) {
  let e = {};
  for (let t in n)
    e[t] = n[t];
  return e;
}
function Vb(n, e) {
  let t = e.schema.nodes;
  for (let r in t) {
    let s = t[r];
    if (!s.allowsMarkType(n))
      continue;
    let i = [], o = (a) => {
      i.push(a);
      for (let l = 0; l < a.edgeCount; l++) {
        let { type: c, next: d } = a.edge(l);
        if (c == e || i.indexOf(d) < 0 && o(d))
          return !0;
      }
    };
    if (o(s.contentMatch))
      return !0;
  }
}
function zb(n, e) {
  for (let t = 0; t < e.length; t++)
    if (n.eq(e[t]))
      return e[t];
}
class Zt {
  /**
  Create a serializer. `nodes` should map node names to functions
  that take a node and return a description of the corresponding
  DOM. `marks` does the same for mark names, but also gets an
  argument that tells it whether the mark's content is block or
  inline content (for typical use, it'll always be inline). A mark
  serializer may be `null` to indicate that marks of that type
  should not be serialized.
  */
  constructor(e, t) {
    this.nodes = e, this.marks = t;
  }
  /**
  Serialize the content of this fragment to a DOM fragment. When
  not in the browser, the `document` option, containing a DOM
  document, should be passed so that the serializer can create
  nodes.
  */
  serializeFragment(e, t = {}, r) {
    r || (r = ao(t).createDocumentFragment());
    let s = r, i = [];
    return e.forEach((o) => {
      if (i.length || o.marks.length) {
        let a = 0, l = 0;
        for (; a < i.length && l < o.marks.length; ) {
          let c = o.marks[l];
          if (!this.marks[c.type.name]) {
            l++;
            continue;
          }
          if (!c.eq(i[a][0]) || c.type.spec.spanning === !1)
            break;
          a++, l++;
        }
        for (; a < i.length; )
          s = i.pop()[1];
        for (; l < o.marks.length; ) {
          let c = o.marks[l++], d = this.serializeMark(c, o.isInline, t);
          d && (i.push([c, s]), s.appendChild(d.dom), s = d.contentDOM || d.dom);
        }
      }
      s.appendChild(this.serializeNodeInner(o, t));
    }), r;
  }
  /**
  @internal
  */
  serializeNodeInner(e, t) {
    let { dom: r, contentDOM: s } = Zt.renderSpec(ao(t), this.nodes[e.type.name](e));
    if (s) {
      if (e.isLeaf)
        throw new RangeError("Content hole not allowed in a leaf node spec");
      this.serializeFragment(e.content, t, s);
    }
    return r;
  }
  /**
  Serialize this node to a DOM node. This can be useful when you
  need to serialize a part of a document, as opposed to the whole
  document. To serialize a whole document, use
  [`serializeFragment`](https://prosemirror.net/docs/ref/#model.DOMSerializer.serializeFragment) on
  its [content](https://prosemirror.net/docs/ref/#model.Node.content).
  */
  serializeNode(e, t = {}) {
    let r = this.serializeNodeInner(e, t);
    for (let s = e.marks.length - 1; s >= 0; s--) {
      let i = this.serializeMark(e.marks[s], e.isInline, t);
      i && ((i.contentDOM || i.dom).appendChild(r), r = i.dom);
    }
    return r;
  }
  /**
  @internal
  */
  serializeMark(e, t, r = {}) {
    let s = this.marks[e.type.name];
    return s && Zt.renderSpec(ao(r), s(e, t));
  }
  /**
  Render an [output spec](https://prosemirror.net/docs/ref/#model.DOMOutputSpec) to a DOM node. If
  the spec has a hole (zero) in it, `contentDOM` will point at the
  node with the hole.
  */
  static renderSpec(e, t, r = null) {
    if (typeof t == "string")
      return { dom: e.createTextNode(t) };
    if (t.nodeType != null)
      return { dom: t };
    if (t.dom && t.dom.nodeType != null)
      return t;
    let s = t[0], i = s.indexOf(" ");
    i > 0 && (r = s.slice(0, i), s = s.slice(i + 1));
    let o, a = r ? e.createElementNS(r, s) : e.createElement(s), l = t[1], c = 1;
    if (l && typeof l == "object" && l.nodeType == null && !Array.isArray(l)) {
      c = 2;
      for (let d in l)
        if (l[d] != null) {
          let f = d.indexOf(" ");
          f > 0 ? a.setAttributeNS(d.slice(0, f), d.slice(f + 1), l[d]) : a.setAttribute(d, l[d]);
        }
    }
    for (let d = c; d < t.length; d++) {
      let f = t[d];
      if (f === 0) {
        if (d < t.length - 1 || d > c)
          throw new RangeError("Content hole must be the only child of its parent node");
        return { dom: a, contentDOM: a };
      } else {
        let { dom: m, contentDOM: h } = Zt.renderSpec(e, f, r);
        if (a.appendChild(m), h) {
          if (o)
            throw new RangeError("Multiple content holes");
          o = h;
        }
      }
    }
    return { dom: a, contentDOM: o };
  }
  /**
  Build a serializer using the [`toDOM`](https://prosemirror.net/docs/ref/#model.NodeSpec.toDOM)
  properties in a schema's node and mark specs.
  */
  static fromSchema(e) {
    return e.cached.domSerializer || (e.cached.domSerializer = new Zt(this.nodesFromSchema(e), this.marksFromSchema(e)));
  }
  /**
  Gather the serializers in a schema's node specs into an object.
  This can be useful as a base to build a custom serializer from.
  */
  static nodesFromSchema(e) {
    let t = Pc(e.nodes);
    return t.text || (t.text = (r) => r.text), t;
  }
  /**
  Gather the serializers in a schema's mark specs into an object.
  */
  static marksFromSchema(e) {
    return Pc(e.marks);
  }
}
function Pc(n) {
  let e = {};
  for (let t in n) {
    let r = n[t].spec.toDOM;
    r && (e[t] = r);
  }
  return e;
}
function ao(n) {
  return n.document || window.document;
}
const Ef = 65535, Sf = Math.pow(2, 16);
function Fb(n, e) {
  return n + e * Sf;
}
function Lc(n) {
  return n & Ef;
}
function jb(n) {
  return (n - (n & Ef)) / Sf;
}
const Af = 1, Of = 2, Fs = 4, Tf = 8;
class qo {
  /**
  @internal
  */
  constructor(e, t, r) {
    this.pos = e, this.delInfo = t, this.recover = r;
  }
  /**
  Tells you whether the position was deleted, that is, whether the
  step removed the token on the side queried (via the `assoc`)
  argument from the document.
  */
  get deleted() {
    return (this.delInfo & Tf) > 0;
  }
  /**
  Tells you whether the token before the mapped position was deleted.
  */
  get deletedBefore() {
    return (this.delInfo & (Af | Fs)) > 0;
  }
  /**
  True when the token after the mapped position was deleted.
  */
  get deletedAfter() {
    return (this.delInfo & (Of | Fs)) > 0;
  }
  /**
  Tells whether any of the steps mapped through deletes across the
  position (including both the token before and after the
  position).
  */
  get deletedAcross() {
    return (this.delInfo & Fs) > 0;
  }
}
class ut {
  /**
  Create a position map. The modifications to the document are
  represented as an array of numbers, in which each group of three
  represents a modified chunk as `[start, oldSize, newSize]`.
  */
  constructor(e, t = !1) {
    if (this.ranges = e, this.inverted = t, !e.length && ut.empty)
      return ut.empty;
  }
  /**
  @internal
  */
  recover(e) {
    let t = 0, r = Lc(e);
    if (!this.inverted)
      for (let s = 0; s < r; s++)
        t += this.ranges[s * 3 + 2] - this.ranges[s * 3 + 1];
    return this.ranges[r * 3] + t + jb(e);
  }
  mapResult(e, t = 1) {
    return this._map(e, t, !1);
  }
  map(e, t = 1) {
    return this._map(e, t, !0);
  }
  /**
  @internal
  */
  _map(e, t, r) {
    let s = 0, i = this.inverted ? 2 : 1, o = this.inverted ? 1 : 2;
    for (let a = 0; a < this.ranges.length; a += 3) {
      let l = this.ranges[a] - (this.inverted ? s : 0);
      if (l > e)
        break;
      let c = this.ranges[a + i], d = this.ranges[a + o], f = l + c;
      if (e <= f) {
        let m = c ? e == l ? -1 : e == f ? 1 : t : t, h = l + s + (m < 0 ? 0 : d);
        if (r)
          return h;
        let p = e == (t < 0 ? l : f) ? null : Fb(a / 3, e - l), y = e == l ? Of : e == f ? Af : Fs;
        return (t < 0 ? e != l : e != f) && (y |= Tf), new qo(h, y, p);
      }
      s += d - c;
    }
    return r ? e + s : new qo(e + s, 0, null);
  }
  /**
  @internal
  */
  touches(e, t) {
    let r = 0, s = Lc(t), i = this.inverted ? 2 : 1, o = this.inverted ? 1 : 2;
    for (let a = 0; a < this.ranges.length; a += 3) {
      let l = this.ranges[a] - (this.inverted ? r : 0);
      if (l > e)
        break;
      let c = this.ranges[a + i], d = l + c;
      if (e <= d && a == s * 3)
        return !0;
      r += this.ranges[a + o] - c;
    }
    return !1;
  }
  /**
  Calls the given function on each of the changed ranges included in
  this map.
  */
  forEach(e) {
    let t = this.inverted ? 2 : 1, r = this.inverted ? 1 : 2;
    for (let s = 0, i = 0; s < this.ranges.length; s += 3) {
      let o = this.ranges[s], a = o - (this.inverted ? i : 0), l = o + (this.inverted ? 0 : i), c = this.ranges[s + t], d = this.ranges[s + r];
      e(a, a + c, l, l + d), i += d - c;
    }
  }
  /**
  Create an inverted version of this map. The result can be used to
  map positions in the post-step document to the pre-step document.
  */
  invert() {
    return new ut(this.ranges, !this.inverted);
  }
  /**
  @internal
  */
  toString() {
    return (this.inverted ? "-" : "") + JSON.stringify(this.ranges);
  }
  /**
  Create a map that moves all positions by offset `n` (which may be
  negative). This can be useful when applying steps meant for a
  sub-document to a larger document, or vice-versa.
  */
  static offset(e) {
    return e == 0 ? ut.empty : new ut(e < 0 ? [0, -e, 0] : [0, 0, e]);
  }
}
ut.empty = new ut([]);
class xr {
  /**
  Create a new mapping with the given position maps.
  */
  constructor(e = [], t, r = 0, s = e.length) {
    this.maps = e, this.mirror = t, this.from = r, this.to = s;
  }
  /**
  Create a mapping that maps only through a part of this one.
  */
  slice(e = 0, t = this.maps.length) {
    return new xr(this.maps, this.mirror, e, t);
  }
  /**
  @internal
  */
  copy() {
    return new xr(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to);
  }
  /**
  Add a step map to the end of this mapping. If `mirrors` is
  given, it should be the index of the step map that is the mirror
  image of this one.
  */
  appendMap(e, t) {
    this.to = this.maps.push(e), t != null && this.setMirror(this.maps.length - 1, t);
  }
  /**
  Add all the step maps in a given mapping to this one (preserving
  mirroring information).
  */
  appendMapping(e) {
    for (let t = 0, r = this.maps.length; t < e.maps.length; t++) {
      let s = e.getMirror(t);
      this.appendMap(e.maps[t], s != null && s < t ? r + s : void 0);
    }
  }
  /**
  Finds the offset of the step map that mirrors the map at the
  given offset, in this mapping (as per the second argument to
  `appendMap`).
  */
  getMirror(e) {
    if (this.mirror) {
      for (let t = 0; t < this.mirror.length; t++)
        if (this.mirror[t] == e)
          return this.mirror[t + (t % 2 ? -1 : 1)];
    }
  }
  /**
  @internal
  */
  setMirror(e, t) {
    this.mirror || (this.mirror = []), this.mirror.push(e, t);
  }
  /**
  Append the inverse of the given mapping to this one.
  */
  appendMappingInverted(e) {
    for (let t = e.maps.length - 1, r = this.maps.length + e.maps.length; t >= 0; t--) {
      let s = e.getMirror(t);
      this.appendMap(e.maps[t].invert(), s != null && s > t ? r - s - 1 : void 0);
    }
  }
  /**
  Create an inverted version of this mapping.
  */
  invert() {
    let e = new xr();
    return e.appendMappingInverted(this), e;
  }
  /**
  Map a position through this mapping.
  */
  map(e, t = 1) {
    if (this.mirror)
      return this._map(e, t, !0);
    for (let r = this.from; r < this.to; r++)
      e = this.maps[r].map(e, t);
    return e;
  }
  /**
  Map a position through this mapping, returning a mapping
  result.
  */
  mapResult(e, t = 1) {
    return this._map(e, t, !1);
  }
  /**
  @internal
  */
  _map(e, t, r) {
    let s = 0;
    for (let i = this.from; i < this.to; i++) {
      let o = this.maps[i], a = o.mapResult(e, t);
      if (a.recover != null) {
        let l = this.getMirror(i);
        if (l != null && l > i && l < this.to) {
          i = l, e = this.maps[l].recover(a.recover);
          continue;
        }
      }
      s |= a.delInfo, e = a.pos;
    }
    return r ? e : new qo(e, s, null);
  }
}
const lo = /* @__PURE__ */ Object.create(null);
class Xe {
  /**
  Get the step map that represents the changes made by this step,
  and which can be used to transform between positions in the old
  and the new document.
  */
  getMap() {
    return ut.empty;
  }
  /**
  Try to merge this step with another one, to be applied directly
  after it. Returns the merged step when possible, null if the
  steps can't be merged.
  */
  merge(e) {
    return null;
  }
  /**
  Deserialize a step from its JSON representation. Will call
  through to the step class' own implementation of this method.
  */
  static fromJSON(e, t) {
    if (!t || !t.stepType)
      throw new RangeError("Invalid input for Step.fromJSON");
    let r = lo[t.stepType];
    if (!r)
      throw new RangeError(`No step type ${t.stepType} defined`);
    return r.fromJSON(e, t);
  }
  /**
  To be able to serialize steps to JSON, each step needs a string
  ID to attach to its JSON representation. Use this method to
  register an ID for your step classes. Try to pick something
  that's unlikely to clash with steps from other modules.
  */
  static jsonID(e, t) {
    if (e in lo)
      throw new RangeError("Duplicate use of step JSON ID " + e);
    return lo[e] = t, t.prototype.jsonID = e, t;
  }
}
class Pe {
  /**
  @internal
  */
  constructor(e, t) {
    this.doc = e, this.failed = t;
  }
  /**
  Create a successful step result.
  */
  static ok(e) {
    return new Pe(e, null);
  }
  /**
  Create a failed step result.
  */
  static fail(e) {
    return new Pe(null, e);
  }
  /**
  Call [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) with the given
  arguments. Create a successful result if it succeeds, and a
  failed one if it throws a `ReplaceError`.
  */
  static fromReplace(e, t, r, s) {
    try {
      return Pe.ok(e.replace(t, r, s));
    } catch (i) {
      if (i instanceof Qs)
        return Pe.fail(i.message);
      throw i;
    }
  }
}
function Oa(n, e, t) {
  let r = [];
  for (let s = 0; s < n.childCount; s++) {
    let i = n.child(s);
    i.content.size && (i = i.copy(Oa(i.content, e, i))), i.isInline && (i = e(i, t, s)), r.push(i);
  }
  return D.fromArray(r);
}
class pn extends Xe {
  /**
  Create a mark step.
  */
  constructor(e, t, r) {
    super(), this.from = e, this.to = t, this.mark = r;
  }
  apply(e) {
    let t = e.slice(this.from, this.to), r = e.resolve(this.from), s = r.node(r.sharedDepth(this.to)), i = new F(Oa(t.content, (o, a) => !o.isAtom || !a.type.allowsMarkType(this.mark.type) ? o : o.mark(this.mark.addToSet(o.marks)), s), t.openStart, t.openEnd);
    return Pe.fromReplace(e, this.from, this.to, i);
  }
  invert() {
    return new $t(this.from, this.to, this.mark);
  }
  map(e) {
    let t = e.mapResult(this.from, 1), r = e.mapResult(this.to, -1);
    return t.deleted && r.deleted || t.pos >= r.pos ? null : new pn(t.pos, r.pos, this.mark);
  }
  merge(e) {
    return e instanceof pn && e.mark.eq(this.mark) && this.from <= e.to && this.to >= e.from ? new pn(Math.min(this.from, e.from), Math.max(this.to, e.to), this.mark) : null;
  }
  toJSON() {
    return {
      stepType: "addMark",
      mark: this.mark.toJSON(),
      from: this.from,
      to: this.to
    };
  }
  /**
  @internal
  */
  static fromJSON(e, t) {
    if (typeof t.from != "number" || typeof t.to != "number")
      throw new RangeError("Invalid input for AddMarkStep.fromJSON");
    return new pn(t.from, t.to, e.markFromJSON(t.mark));
  }
}
Xe.jsonID("addMark", pn);
class $t extends Xe {
  /**
  Create a mark-removing step.
  */
  constructor(e, t, r) {
    super(), this.from = e, this.to = t, this.mark = r;
  }
  apply(e) {
    let t = e.slice(this.from, this.to), r = new F(Oa(t.content, (s) => s.mark(this.mark.removeFromSet(s.marks)), e), t.openStart, t.openEnd);
    return Pe.fromReplace(e, this.from, this.to, r);
  }
  invert() {
    return new pn(this.from, this.to, this.mark);
  }
  map(e) {
    let t = e.mapResult(this.from, 1), r = e.mapResult(this.to, -1);
    return t.deleted && r.deleted || t.pos >= r.pos ? null : new $t(t.pos, r.pos, this.mark);
  }
  merge(e) {
    return e instanceof $t && e.mark.eq(this.mark) && this.from <= e.to && this.to >= e.from ? new $t(Math.min(this.from, e.from), Math.max(this.to, e.to), this.mark) : null;
  }
  toJSON() {
    return {
      stepType: "removeMark",
      mark: this.mark.toJSON(),
      from: this.from,
      to: this.to
    };
  }
  /**
  @internal
  */
  static fromJSON(e, t) {
    if (typeof t.from != "number" || typeof t.to != "number")
      throw new RangeError("Invalid input for RemoveMarkStep.fromJSON");
    return new $t(t.from, t.to, e.markFromJSON(t.mark));
  }
}
Xe.jsonID("removeMark", $t);
class gn extends Xe {
  /**
  Create a node mark step.
  */
  constructor(e, t) {
    super(), this.pos = e, this.mark = t;
  }
  apply(e) {
    let t = e.nodeAt(this.pos);
    if (!t)
      return Pe.fail("No node at mark step's position");
    let r = t.type.create(t.attrs, null, this.mark.addToSet(t.marks));
    return Pe.fromReplace(e, this.pos, this.pos + 1, new F(D.from(r), 0, t.isLeaf ? 0 : 1));
  }
  invert(e) {
    let t = e.nodeAt(this.pos);
    if (t) {
      let r = this.mark.addToSet(t.marks);
      if (r.length == t.marks.length) {
        for (let s = 0; s < t.marks.length; s++)
          if (!t.marks[s].isInSet(r))
            return new gn(this.pos, t.marks[s]);
        return new gn(this.pos, this.mark);
      }
    }
    return new Sr(this.pos, this.mark);
  }
  map(e) {
    let t = e.mapResult(this.pos, 1);
    return t.deletedAfter ? null : new gn(t.pos, this.mark);
  }
  toJSON() {
    return { stepType: "addNodeMark", pos: this.pos, mark: this.mark.toJSON() };
  }
  /**
  @internal
  */
  static fromJSON(e, t) {
    if (typeof t.pos != "number")
      throw new RangeError("Invalid input for AddNodeMarkStep.fromJSON");
    return new gn(t.pos, e.markFromJSON(t.mark));
  }
}
Xe.jsonID("addNodeMark", gn);
class Sr extends Xe {
  /**
  Create a mark-removing step.
  */
  constructor(e, t) {
    super(), this.pos = e, this.mark = t;
  }
  apply(e) {
    let t = e.nodeAt(this.pos);
    if (!t)
      return Pe.fail("No node at mark step's position");
    let r = t.type.create(t.attrs, null, this.mark.removeFromSet(t.marks));
    return Pe.fromReplace(e, this.pos, this.pos + 1, new F(D.from(r), 0, t.isLeaf ? 0 : 1));
  }
  invert(e) {
    let t = e.nodeAt(this.pos);
    return !t || !this.mark.isInSet(t.marks) ? this : new gn(this.pos, this.mark);
  }
  map(e) {
    let t = e.mapResult(this.pos, 1);
    return t.deletedAfter ? null : new Sr(t.pos, this.mark);
  }
  toJSON() {
    return { stepType: "removeNodeMark", pos: this.pos, mark: this.mark.toJSON() };
  }
  /**
  @internal
  */
  static fromJSON(e, t) {
    if (typeof t.pos != "number")
      throw new RangeError("Invalid input for RemoveNodeMarkStep.fromJSON");
    return new Sr(t.pos, e.markFromJSON(t.mark));
  }
}
Xe.jsonID("removeNodeMark", Sr);
class Be extends Xe {
  /**
  The given `slice` should fit the 'gap' between `from` and
  `to`—the depths must line up, and the surrounding nodes must be
  able to be joined with the open sides of the slice. When
  `structure` is true, the step will fail if the content between
  from and to is not just a sequence of closing and then opening
  tokens (this is to guard against rebased replace steps
  overwriting something they weren't supposed to).
  */
  constructor(e, t, r, s = !1) {
    super(), this.from = e, this.to = t, this.slice = r, this.structure = s;
  }
  apply(e) {
    return this.structure && Ko(e, this.from, this.to) ? Pe.fail("Structure replace would overwrite content") : Pe.fromReplace(e, this.from, this.to, this.slice);
  }
  getMap() {
    return new ut([this.from, this.to - this.from, this.slice.size]);
  }
  invert(e) {
    return new Be(this.from, this.from + this.slice.size, e.slice(this.from, this.to));
  }
  map(e) {
    let t = e.mapResult(this.from, 1), r = e.mapResult(this.to, -1);
    return t.deletedAcross && r.deletedAcross ? null : new Be(t.pos, Math.max(t.pos, r.pos), this.slice);
  }
  merge(e) {
    if (!(e instanceof Be) || e.structure || this.structure)
      return null;
    if (this.from + this.slice.size == e.from && !this.slice.openEnd && !e.slice.openStart) {
      let t = this.slice.size + e.slice.size == 0 ? F.empty : new F(this.slice.content.append(e.slice.content), this.slice.openStart, e.slice.openEnd);
      return new Be(this.from, this.to + (e.to - e.from), t, this.structure);
    } else if (e.to == this.from && !this.slice.openStart && !e.slice.openEnd) {
      let t = this.slice.size + e.slice.size == 0 ? F.empty : new F(e.slice.content.append(this.slice.content), e.slice.openStart, this.slice.openEnd);
      return new Be(e.from, this.to, t, this.structure);
    } else
      return null;
  }
  toJSON() {
    let e = { stepType: "replace", from: this.from, to: this.to };
    return this.slice.size && (e.slice = this.slice.toJSON()), this.structure && (e.structure = !0), e;
  }
  /**
  @internal
  */
  static fromJSON(e, t) {
    if (typeof t.from != "number" || typeof t.to != "number")
      throw new RangeError("Invalid input for ReplaceStep.fromJSON");
    return new Be(t.from, t.to, F.fromJSON(e, t.slice), !!t.structure);
  }
}
Xe.jsonID("replace", Be);
class ze extends Xe {
  /**
  Create a replace-around step with the given range and gap.
  `insert` should be the point in the slice into which the content
  of the gap should be moved. `structure` has the same meaning as
  it has in the [`ReplaceStep`](https://prosemirror.net/docs/ref/#transform.ReplaceStep) class.
  */
  constructor(e, t, r, s, i, o, a = !1) {
    super(), this.from = e, this.to = t, this.gapFrom = r, this.gapTo = s, this.slice = i, this.insert = o, this.structure = a;
  }
  apply(e) {
    if (this.structure && (Ko(e, this.from, this.gapFrom) || Ko(e, this.gapTo, this.to)))
      return Pe.fail("Structure gap-replace would overwrite content");
    let t = e.slice(this.gapFrom, this.gapTo);
    if (t.openStart || t.openEnd)
      return Pe.fail("Gap is not a flat range");
    let r = this.slice.insertAt(this.insert, t.content);
    return r ? Pe.fromReplace(e, this.from, this.to, r) : Pe.fail("Content does not fit in gap");
  }
  getMap() {
    return new ut([
      this.from,
      this.gapFrom - this.from,
      this.insert,
      this.gapTo,
      this.to - this.gapTo,
      this.slice.size - this.insert
    ]);
  }
  invert(e) {
    let t = this.gapTo - this.gapFrom;
    return new ze(this.from, this.from + this.slice.size + t, this.from + this.insert, this.from + this.insert + t, e.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from), this.gapFrom - this.from, this.structure);
  }
  map(e) {
    let t = e.mapResult(this.from, 1), r = e.mapResult(this.to, -1), s = e.map(this.gapFrom, -1), i = e.map(this.gapTo, 1);
    return t.deletedAcross && r.deletedAcross || s < t.pos || i > r.pos ? null : new ze(t.pos, r.pos, s, i, this.slice, this.insert, this.structure);
  }
  toJSON() {
    let e = {
      stepType: "replaceAround",
      from: this.from,
      to: this.to,
      gapFrom: this.gapFrom,
      gapTo: this.gapTo,
      insert: this.insert
    };
    return this.slice.size && (e.slice = this.slice.toJSON()), this.structure && (e.structure = !0), e;
  }
  /**
  @internal
  */
  static fromJSON(e, t) {
    if (typeof t.from != "number" || typeof t.to != "number" || typeof t.gapFrom != "number" || typeof t.gapTo != "number" || typeof t.insert != "number")
      throw new RangeError("Invalid input for ReplaceAroundStep.fromJSON");
    return new ze(t.from, t.to, t.gapFrom, t.gapTo, F.fromJSON(e, t.slice), t.insert, !!t.structure);
  }
}
Xe.jsonID("replaceAround", ze);
function Ko(n, e, t) {
  let r = n.resolve(e), s = t - e, i = r.depth;
  for (; s > 0 && i > 0 && r.indexAfter(i) == r.node(i).childCount; )
    i--, s--;
  if (s > 0) {
    let o = r.node(i).maybeChild(r.indexAfter(i));
    for (; s > 0; ) {
      if (!o || o.isLeaf)
        return !0;
      o = o.firstChild, s--;
    }
  }
  return !1;
}
function Ub(n, e, t, r) {
  let s = [], i = [], o, a;
  n.doc.nodesBetween(e, t, (l, c, d) => {
    if (!l.isInline)
      return;
    let f = l.marks;
    if (!r.isInSet(f) && d.type.allowsMarkType(r.type)) {
      let m = Math.max(c, e), h = Math.min(c + l.nodeSize, t), p = r.addToSet(f);
      for (let y = 0; y < f.length; y++)
        f[y].isInSet(p) || (o && o.to == m && o.mark.eq(f[y]) ? o.to = h : s.push(o = new $t(m, h, f[y])));
      a && a.to == m ? a.to = h : i.push(a = new pn(m, h, r));
    }
  }), s.forEach((l) => n.step(l)), i.forEach((l) => n.step(l));
}
function Bb(n, e, t, r) {
  let s = [], i = 0;
  n.doc.nodesBetween(e, t, (o, a) => {
    if (!o.isInline)
      return;
    i++;
    let l = null;
    if (r instanceof Zi) {
      let c = o.marks, d;
      for (; d = r.isInSet(c); )
        (l || (l = [])).push(d), c = d.removeFromSet(c);
    } else
      r ? r.isInSet(o.marks) && (l = [r]) : l = o.marks;
    if (l && l.length) {
      let c = Math.min(a + o.nodeSize, t);
      for (let d = 0; d < l.length; d++) {
        let f = l[d], m;
        for (let h = 0; h < s.length; h++) {
          let p = s[h];
          p.step == i - 1 && f.eq(s[h].style) && (m = p);
        }
        m ? (m.to = c, m.step = i) : s.push({ style: f, from: Math.max(a, e), to: c, step: i });
      }
    }
  }), s.forEach((o) => n.step(new $t(o.from, o.to, o.style)));
}
function Wb(n, e, t, r = t.contentMatch) {
  let s = n.doc.nodeAt(e), i = [], o = e + 1;
  for (let a = 0; a < s.childCount; a++) {
    let l = s.child(a), c = o + l.nodeSize, d = r.matchType(l.type);
    if (!d)
      i.push(new Be(o, c, F.empty));
    else {
      r = d;
      for (let f = 0; f < l.marks.length; f++)
        t.allowsMarkType(l.marks[f].type) || n.step(new $t(o, c, l.marks[f]));
      if (l.isText && !t.spec.code) {
        let f, m = /\r?\n|\r/g, h;
        for (; f = m.exec(l.text); )
          h || (h = new F(D.from(t.schema.text(" ", t.allowedMarks(l.marks))), 0, 0)), i.push(new Be(o + f.index, o + f.index + f[0].length, h));
      }
    }
    o = c;
  }
  if (!r.validEnd) {
    let a = r.fillBefore(D.empty, !0);
    n.replace(o, o, new F(a, 0, 0));
  }
  for (let a = i.length - 1; a >= 0; a--)
    n.step(i[a]);
}
function qb(n, e, t) {
  return (e == 0 || n.canReplace(e, n.childCount)) && (t == n.childCount || n.canReplace(0, t));
}
function Zr(n) {
  let t = n.parent.content.cutByIndex(n.startIndex, n.endIndex);
  for (let r = n.depth; ; --r) {
    let s = n.$from.node(r), i = n.$from.index(r), o = n.$to.indexAfter(r);
    if (r < n.depth && s.canReplace(i, o, t))
      return r;
    if (r == 0 || s.type.spec.isolating || !qb(s, i, o))
      break;
  }
  return null;
}
function Kb(n, e, t) {
  let { $from: r, $to: s, depth: i } = e, o = r.before(i + 1), a = s.after(i + 1), l = o, c = a, d = D.empty, f = 0;
  for (let p = i, y = !1; p > t; p--)
    y || r.index(p) > 0 ? (y = !0, d = D.from(r.node(p).copy(d)), f++) : l--;
  let m = D.empty, h = 0;
  for (let p = i, y = !1; p > t; p--)
    y || s.after(p + 1) < s.end(p) ? (y = !0, m = D.from(s.node(p).copy(m)), h++) : c++;
  n.step(new ze(l, c, o, a, new F(d.append(m), f, h), d.size - f, !0));
}
function Ta(n, e, t = null, r = n) {
  let s = Jb(n, e), i = s && Gb(r, e);
  return i ? s.map(Zc).concat({ type: e, attrs: t }).concat(i.map(Zc)) : null;
}
function Zc(n) {
  return { type: n, attrs: null };
}
function Jb(n, e) {
  let { parent: t, startIndex: r, endIndex: s } = n, i = t.contentMatchAt(r).findWrapping(e);
  if (!i)
    return null;
  let o = i.length ? i[0] : e;
  return t.canReplaceWith(r, s, o) ? i : null;
}
function Gb(n, e) {
  let { parent: t, startIndex: r, endIndex: s } = n, i = t.child(r), o = e.contentMatch.findWrapping(i.type);
  if (!o)
    return null;
  let l = (o.length ? o[o.length - 1] : e).contentMatch;
  for (let c = r; l && c < s; c++)
    l = l.matchType(t.child(c).type);
  return !l || !l.validEnd ? null : o;
}
function Yb(n, e, t) {
  let r = D.empty;
  for (let o = t.length - 1; o >= 0; o--) {
    if (r.size) {
      let a = t[o].type.contentMatch.matchFragment(r);
      if (!a || !a.validEnd)
        throw new RangeError("Wrapper type given to Transform.wrap does not form valid content of its parent wrapper");
    }
    r = D.from(t[o].type.create(t[o].attrs, r));
  }
  let s = e.start, i = e.end;
  n.step(new ze(s, i, s, i, new F(r, 0, 0), t.length, !0));
}
function Qb(n, e, t, r, s) {
  if (!r.isTextblock)
    throw new RangeError("Type given to setBlockType should be a textblock");
  let i = n.steps.length;
  n.doc.nodesBetween(e, t, (o, a) => {
    if (o.isTextblock && !o.hasMarkup(r, s) && Xb(n.doc, n.mapping.slice(i).map(a), r)) {
      n.clearIncompatible(n.mapping.slice(i).map(a, 1), r);
      let l = n.mapping.slice(i), c = l.map(a, 1), d = l.map(a + o.nodeSize, 1);
      return n.step(new ze(c, d, c + 1, d - 1, new F(D.from(r.create(s, null, o.marks)), 0, 0), 1, !0)), !1;
    }
  });
}
function Xb(n, e, t) {
  let r = n.resolve(e), s = r.index();
  return r.parent.canReplaceWith(s, s + 1, t);
}
function e6(n, e, t, r, s) {
  let i = n.doc.nodeAt(e);
  if (!i)
    throw new RangeError("No node at given position");
  t || (t = i.type);
  let o = t.create(r, null, s || i.marks);
  if (i.isLeaf)
    return n.replaceWith(e, e + i.nodeSize, o);
  if (!t.validContent(i.content))
    throw new RangeError("Invalid content for node type " + t.name);
  n.step(new ze(e, e + i.nodeSize, e + 1, e + i.nodeSize - 1, new F(D.from(o), 0, 0), 1, !0));
}
function wr(n, e, t = 1, r) {
  let s = n.resolve(e), i = s.depth - t, o = r && r[r.length - 1] || s.parent;
  if (i < 0 || s.parent.type.spec.isolating || !s.parent.canReplace(s.index(), s.parent.childCount) || !o.type.validContent(s.parent.content.cutByIndex(s.index(), s.parent.childCount)))
    return !1;
  for (let c = s.depth - 1, d = t - 2; c > i; c--, d--) {
    let f = s.node(c), m = s.index(c);
    if (f.type.spec.isolating)
      return !1;
    let h = f.content.cutByIndex(m, f.childCount), p = r && r[d + 1];
    p && (h = h.replaceChild(0, p.type.create(p.attrs)));
    let y = r && r[d] || f;
    if (!f.canReplace(m + 1, f.childCount) || !y.type.validContent(h))
      return !1;
  }
  let a = s.indexAfter(i), l = r && r[0];
  return s.node(i).canReplaceWith(a, a, l ? l.type : s.node(i + 1).type);
}
function t6(n, e, t = 1, r) {
  let s = n.doc.resolve(e), i = D.empty, o = D.empty;
  for (let a = s.depth, l = s.depth - t, c = t - 1; a > l; a--, c--) {
    i = D.from(s.node(a).copy(i));
    let d = r && r[c];
    o = D.from(d ? d.type.create(d.attrs, o) : s.node(a).copy(o));
  }
  n.step(new Be(e, e, new F(i.append(o), t, t), !0));
}
function En(n, e) {
  let t = n.resolve(e), r = t.index();
  return _f(t.nodeBefore, t.nodeAfter) && t.parent.canReplace(r, r + 1);
}
function _f(n, e) {
  return !!(n && e && !n.isLeaf && n.canAppend(e));
}
function $i(n, e, t = -1) {
  let r = n.resolve(e);
  for (let s = r.depth; ; s--) {
    let i, o, a = r.index(s);
    if (s == r.depth ? (i = r.nodeBefore, o = r.nodeAfter) : t > 0 ? (i = r.node(s + 1), a++, o = r.node(s).maybeChild(a)) : (i = r.node(s).maybeChild(a - 1), o = r.node(s + 1)), i && !i.isTextblock && _f(i, o) && r.node(s).canReplace(a, a + 1))
      return e;
    if (s == 0)
      break;
    e = t < 0 ? r.before(s) : r.after(s);
  }
}
function n6(n, e, t) {
  let r = new Be(e - t, e + t, F.empty, !0);
  n.step(r);
}
function r6(n, e, t) {
  let r = n.resolve(e);
  if (r.parent.canReplaceWith(r.index(), r.index(), t))
    return e;
  if (r.parentOffset == 0)
    for (let s = r.depth - 1; s >= 0; s--) {
      let i = r.index(s);
      if (r.node(s).canReplaceWith(i, i, t))
        return r.before(s + 1);
      if (i > 0)
        return null;
    }
  if (r.parentOffset == r.parent.content.size)
    for (let s = r.depth - 1; s >= 0; s--) {
      let i = r.indexAfter(s);
      if (r.node(s).canReplaceWith(i, i, t))
        return r.after(s + 1);
      if (i < r.node(s).childCount)
        return null;
    }
  return null;
}
function Df(n, e, t) {
  let r = n.resolve(e);
  if (!t.content.size)
    return e;
  let s = t.content;
  for (let i = 0; i < t.openStart; i++)
    s = s.firstChild.content;
  for (let i = 1; i <= (t.openStart == 0 && t.size ? 2 : 1); i++)
    for (let o = r.depth; o >= 0; o--) {
      let a = o == r.depth ? 0 : r.pos <= (r.start(o + 1) + r.end(o + 1)) / 2 ? -1 : 1, l = r.index(o) + (a > 0 ? 1 : 0), c = r.node(o), d = !1;
      if (i == 1)
        d = c.canReplace(l, l, s);
      else {
        let f = c.contentMatchAt(l).findWrapping(s.firstChild.type);
        d = f && c.canReplaceWith(l, l, f[0]);
      }
      if (d)
        return a == 0 ? r.pos : a < 0 ? r.before(o + 1) : r.after(o + 1);
    }
  return null;
}
function _a(n, e, t = e, r = F.empty) {
  if (e == t && !r.size)
    return null;
  let s = n.resolve(e), i = n.resolve(t);
  return Hf(s, i, r) ? new Be(e, t, r) : new s6(s, i, r).fit();
}
function Hf(n, e, t) {
  return !t.openStart && !t.openEnd && n.start() == e.start() && n.parent.canReplace(n.index(), e.index(), t.content);
}
class s6 {
  constructor(e, t, r) {
    this.$from = e, this.$to = t, this.unplaced = r, this.frontier = [], this.placed = D.empty;
    for (let s = 0; s <= e.depth; s++) {
      let i = e.node(s);
      this.frontier.push({
        type: i.type,
        match: i.contentMatchAt(e.indexAfter(s))
      });
    }
    for (let s = e.depth; s > 0; s--)
      this.placed = D.from(e.node(s).copy(this.placed));
  }
  get depth() {
    return this.frontier.length - 1;
  }
  fit() {
    for (; this.unplaced.size; ) {
      let c = this.findFittable();
      c ? this.placeNodes(c) : this.openMore() || this.dropNode();
    }
    let e = this.mustMoveInline(), t = this.placed.size - this.depth - this.$from.depth, r = this.$from, s = this.close(e < 0 ? this.$to : r.doc.resolve(e));
    if (!s)
      return null;
    let i = this.placed, o = r.depth, a = s.depth;
    for (; o && a && i.childCount == 1; )
      i = i.firstChild.content, o--, a--;
    let l = new F(i, o, a);
    return e > -1 ? new ze(r.pos, e, this.$to.pos, this.$to.end(), l, t) : l.size || r.pos != this.$to.pos ? new Be(r.pos, s.pos, l) : null;
  }
  // Find a position on the start spine of `this.unplaced` that has
  // content that can be moved somewhere on the frontier. Returns two
  // depths, one for the slice and one for the frontier.
  findFittable() {
    let e = this.unplaced.openStart;
    for (let t = this.unplaced.content, r = 0, s = this.unplaced.openEnd; r < e; r++) {
      let i = t.firstChild;
      if (t.childCount > 1 && (s = 0), i.type.spec.isolating && s <= r) {
        e = r;
        break;
      }
      t = i.content;
    }
    for (let t = 1; t <= 2; t++)
      for (let r = t == 1 ? e : this.unplaced.openStart; r >= 0; r--) {
        let s, i = null;
        r ? (i = co(this.unplaced.content, r - 1).firstChild, s = i.content) : s = this.unplaced.content;
        let o = s.firstChild;
        for (let a = this.depth; a >= 0; a--) {
          let { type: l, match: c } = this.frontier[a], d, f = null;
          if (t == 1 && (o ? c.matchType(o.type) || (f = c.fillBefore(D.from(o), !1)) : i && l.compatibleContent(i.type)))
            return { sliceDepth: r, frontierDepth: a, parent: i, inject: f };
          if (t == 2 && o && (d = c.findWrapping(o.type)))
            return { sliceDepth: r, frontierDepth: a, parent: i, wrap: d };
          if (i && c.matchType(i.type))
            break;
        }
      }
  }
  openMore() {
    let { content: e, openStart: t, openEnd: r } = this.unplaced, s = co(e, t);
    return !s.childCount || s.firstChild.isLeaf ? !1 : (this.unplaced = new F(e, t + 1, Math.max(r, s.size + t >= e.size - r ? t + 1 : 0)), !0);
  }
  dropNode() {
    let { content: e, openStart: t, openEnd: r } = this.unplaced, s = co(e, t);
    if (s.childCount <= 1 && t > 0) {
      let i = e.size - t <= t + s.size;
      this.unplaced = new F(Ur(e, t - 1, 1), t - 1, i ? t - 1 : r);
    } else
      this.unplaced = new F(Ur(e, t, 1), t, r);
  }
  // Move content from the unplaced slice at `sliceDepth` to the
  // frontier node at `frontierDepth`. Close that frontier node when
  // applicable.
  placeNodes({ sliceDepth: e, frontierDepth: t, parent: r, inject: s, wrap: i }) {
    for (; this.depth > t; )
      this.closeFrontierNode();
    if (i)
      for (let y = 0; y < i.length; y++)
        this.openFrontierNode(i[y]);
    let o = this.unplaced, a = r ? r.content : o.content, l = o.openStart - e, c = 0, d = [], { match: f, type: m } = this.frontier[t];
    if (s) {
      for (let y = 0; y < s.childCount; y++)
        d.push(s.child(y));
      f = f.matchFragment(s);
    }
    let h = a.size + e - (o.content.size - o.openEnd);
    for (; c < a.childCount; ) {
      let y = a.child(c), v = f.matchType(y.type);
      if (!v)
        break;
      c++, (c > 1 || l == 0 || y.content.size) && (f = v, d.push(If(y.mark(m.allowedMarks(y.marks)), c == 1 ? l : 0, c == a.childCount ? h : -1)));
    }
    let p = c == a.childCount;
    p || (h = -1), this.placed = Br(this.placed, t, D.from(d)), this.frontier[t].match = f, p && h < 0 && r && r.type == this.frontier[this.depth].type && this.frontier.length > 1 && this.closeFrontierNode();
    for (let y = 0, v = a; y < h; y++) {
      let k = v.lastChild;
      this.frontier.push({ type: k.type, match: k.contentMatchAt(k.childCount) }), v = k.content;
    }
    this.unplaced = p ? e == 0 ? F.empty : new F(Ur(o.content, e - 1, 1), e - 1, h < 0 ? o.openEnd : e - 1) : new F(Ur(o.content, e, c), o.openStart, o.openEnd);
  }
  mustMoveInline() {
    if (!this.$to.parent.isTextblock)
      return -1;
    let e = this.frontier[this.depth], t;
    if (!e.type.isTextblock || !uo(this.$to, this.$to.depth, e.type, e.match, !1) || this.$to.depth == this.depth && (t = this.findCloseLevel(this.$to)) && t.depth == this.depth)
      return -1;
    let { depth: r } = this.$to, s = this.$to.after(r);
    for (; r > 1 && s == this.$to.end(--r); )
      ++s;
    return s;
  }
  findCloseLevel(e) {
    e:
      for (let t = Math.min(this.depth, e.depth); t >= 0; t--) {
        let { match: r, type: s } = this.frontier[t], i = t < e.depth && e.end(t + 1) == e.pos + (e.depth - (t + 1)), o = uo(e, t, s, r, i);
        if (o) {
          for (let a = t - 1; a >= 0; a--) {
            let { match: l, type: c } = this.frontier[a], d = uo(e, a, c, l, !0);
            if (!d || d.childCount)
              continue e;
          }
          return { depth: t, fit: o, move: i ? e.doc.resolve(e.after(t + 1)) : e };
        }
      }
  }
  close(e) {
    let t = this.findCloseLevel(e);
    if (!t)
      return null;
    for (; this.depth > t.depth; )
      this.closeFrontierNode();
    t.fit.childCount && (this.placed = Br(this.placed, t.depth, t.fit)), e = t.move;
    for (let r = t.depth + 1; r <= e.depth; r++) {
      let s = e.node(r), i = s.type.contentMatch.fillBefore(s.content, !0, e.index(r));
      this.openFrontierNode(s.type, s.attrs, i);
    }
    return e;
  }
  openFrontierNode(e, t = null, r) {
    let s = this.frontier[this.depth];
    s.match = s.match.matchType(e), this.placed = Br(this.placed, this.depth, D.from(e.create(t, r))), this.frontier.push({ type: e, match: e.contentMatch });
  }
  closeFrontierNode() {
    let t = this.frontier.pop().match.fillBefore(D.empty, !0);
    t.childCount && (this.placed = Br(this.placed, this.frontier.length, t));
  }
}
function Ur(n, e, t) {
  return e == 0 ? n.cutByIndex(t, n.childCount) : n.replaceChild(0, n.firstChild.copy(Ur(n.firstChild.content, e - 1, t)));
}
function Br(n, e, t) {
  return e == 0 ? n.append(t) : n.replaceChild(n.childCount - 1, n.lastChild.copy(Br(n.lastChild.content, e - 1, t)));
}
function co(n, e) {
  for (let t = 0; t < e; t++)
    n = n.firstChild.content;
  return n;
}
function If(n, e, t) {
  if (e <= 0)
    return n;
  let r = n.content;
  return e > 1 && (r = r.replaceChild(0, If(r.firstChild, e - 1, r.childCount == 1 ? t - 1 : 0))), e > 0 && (r = n.type.contentMatch.fillBefore(r).append(r), t <= 0 && (r = r.append(n.type.contentMatch.matchFragment(r).fillBefore(D.empty, !0)))), n.copy(r);
}
function uo(n, e, t, r, s) {
  let i = n.node(e), o = s ? n.indexAfter(e) : n.index(e);
  if (o == i.childCount && !t.compatibleContent(i.type))
    return null;
  let a = r.fillBefore(i.content, !0, o);
  return a && !i6(t, i.content, o) ? a : null;
}
function i6(n, e, t) {
  for (let r = t; r < e.childCount; r++)
    if (!n.allowsMarks(e.child(r).marks))
      return !0;
  return !1;
}
function o6(n) {
  return n.spec.defining || n.spec.definingForContent;
}
function a6(n, e, t, r) {
  if (!r.size)
    return n.deleteRange(e, t);
  let s = n.doc.resolve(e), i = n.doc.resolve(t);
  if (Hf(s, i, r))
    return n.step(new Be(e, t, r));
  let o = Lf(s, n.doc.resolve(t));
  o[o.length - 1] == 0 && o.pop();
  let a = -(s.depth + 1);
  o.unshift(a);
  for (let m = s.depth, h = s.pos - 1; m > 0; m--, h--) {
    let p = s.node(m).type.spec;
    if (p.defining || p.definingAsContext || p.isolating)
      break;
    o.indexOf(m) > -1 ? a = m : s.before(m) == h && o.splice(1, 0, -m);
  }
  let l = o.indexOf(a), c = [], d = r.openStart;
  for (let m = r.content, h = 0; ; h++) {
    let p = m.firstChild;
    if (c.push(p), h == r.openStart)
      break;
    m = p.content;
  }
  for (let m = d - 1; m >= 0; m--) {
    let h = c[m], p = o6(h.type);
    if (p && !h.sameMarkup(s.node(Math.abs(a) - 1)))
      d = m;
    else if (p || !h.type.isTextblock)
      break;
  }
  for (let m = r.openStart; m >= 0; m--) {
    let h = (m + d + 1) % (r.openStart + 1), p = c[h];
    if (p)
      for (let y = 0; y < o.length; y++) {
        let v = o[(y + l) % o.length], k = !0;
        v < 0 && (k = !1, v = -v);
        let P = s.node(v - 1), q = s.index(v - 1);
        if (P.canReplaceWith(q, q, p.type, p.marks))
          return n.replace(s.before(v), k ? i.after(v) : t, new F(Pf(r.content, 0, r.openStart, h), h, r.openEnd));
      }
  }
  let f = n.steps.length;
  for (let m = o.length - 1; m >= 0 && (n.replace(e, t, r), !(n.steps.length > f)); m--) {
    let h = o[m];
    h < 0 || (e = s.before(h), t = i.after(h));
  }
}
function Pf(n, e, t, r, s) {
  if (e < t) {
    let i = n.firstChild;
    n = n.replaceChild(0, i.copy(Pf(i.content, e + 1, t, r, i)));
  }
  if (e > r) {
    let i = s.contentMatchAt(0), o = i.fillBefore(n).append(n);
    n = o.append(i.matchFragment(o).fillBefore(D.empty, !0));
  }
  return n;
}
function l6(n, e, t, r) {
  if (!r.isInline && e == t && n.doc.resolve(e).parent.content.size) {
    let s = r6(n.doc, e, r.type);
    s != null && (e = t = s);
  }
  n.replaceRange(e, t, new F(D.from(r), 0, 0));
}
function c6(n, e, t) {
  let r = n.doc.resolve(e), s = n.doc.resolve(t), i = Lf(r, s);
  for (let o = 0; o < i.length; o++) {
    let a = i[o], l = o == i.length - 1;
    if (l && a == 0 || r.node(a).type.contentMatch.validEnd)
      return n.delete(r.start(a), s.end(a));
    if (a > 0 && (l || r.node(a - 1).canReplace(r.index(a - 1), s.indexAfter(a - 1))))
      return n.delete(r.before(a), s.after(a));
  }
  for (let o = 1; o <= r.depth && o <= s.depth; o++)
    if (e - r.start(o) == r.depth - o && t > r.end(o) && s.end(o) - t != s.depth - o)
      return n.delete(r.before(o), t);
  n.delete(e, t);
}
function Lf(n, e) {
  let t = [], r = Math.min(n.depth, e.depth);
  for (let s = r; s >= 0; s--) {
    let i = n.start(s);
    if (i < n.pos - (n.depth - s) || e.end(s) > e.pos + (e.depth - s) || n.node(s).type.spec.isolating || e.node(s).type.spec.isolating)
      break;
    (i == e.start(s) || s == n.depth && s == e.depth && n.parent.inlineContent && e.parent.inlineContent && s && e.start(s - 1) == i - 1) && t.push(s);
  }
  return t;
}
class Nr extends Xe {
  /**
  Construct an attribute step.
  */
  constructor(e, t, r) {
    super(), this.pos = e, this.attr = t, this.value = r;
  }
  apply(e) {
    let t = e.nodeAt(this.pos);
    if (!t)
      return Pe.fail("No node at attribute step's position");
    let r = /* @__PURE__ */ Object.create(null);
    for (let i in t.attrs)
      r[i] = t.attrs[i];
    r[this.attr] = this.value;
    let s = t.type.create(r, null, t.marks);
    return Pe.fromReplace(e, this.pos, this.pos + 1, new F(D.from(s), 0, t.isLeaf ? 0 : 1));
  }
  getMap() {
    return ut.empty;
  }
  invert(e) {
    return new Nr(this.pos, this.attr, e.nodeAt(this.pos).attrs[this.attr]);
  }
  map(e) {
    let t = e.mapResult(this.pos, 1);
    return t.deletedAfter ? null : new Nr(t.pos, this.attr, this.value);
  }
  toJSON() {
    return { stepType: "attr", pos: this.pos, attr: this.attr, value: this.value };
  }
  static fromJSON(e, t) {
    if (typeof t.pos != "number" || typeof t.attr != "string")
      throw new RangeError("Invalid input for AttrStep.fromJSON");
    return new Nr(t.pos, t.attr, t.value);
  }
}
Xe.jsonID("attr", Nr);
class ss extends Xe {
  /**
  Construct an attribute step.
  */
  constructor(e, t) {
    super(), this.attr = e, this.value = t;
  }
  apply(e) {
    let t = /* @__PURE__ */ Object.create(null);
    for (let s in e.attrs)
      t[s] = e.attrs[s];
    t[this.attr] = this.value;
    let r = e.type.create(t, e.content, e.marks);
    return Pe.ok(r);
  }
  getMap() {
    return ut.empty;
  }
  invert(e) {
    return new ss(this.attr, e.attrs[this.attr]);
  }
  map(e) {
    return this;
  }
  toJSON() {
    return { stepType: "docAttr", attr: this.attr, value: this.value };
  }
  static fromJSON(e, t) {
    if (typeof t.attr != "string")
      throw new RangeError("Invalid input for DocAttrStep.fromJSON");
    return new ss(t.attr, t.value);
  }
}
Xe.jsonID("docAttr", ss);
let Ar = class extends Error {
};
Ar = function n(e) {
  let t = Error.call(this, e);
  return t.__proto__ = n.prototype, t;
};
Ar.prototype = Object.create(Error.prototype);
Ar.prototype.constructor = Ar;
Ar.prototype.name = "TransformError";
class Zf {
  /**
  Create a transform that starts with the given document.
  */
  constructor(e) {
    this.doc = e, this.steps = [], this.docs = [], this.mapping = new xr();
  }
  /**
  The starting document.
  */
  get before() {
    return this.docs.length ? this.docs[0] : this.doc;
  }
  /**
  Apply a new step in this transform, saving the result. Throws an
  error when the step fails.
  */
  step(e) {
    let t = this.maybeStep(e);
    if (t.failed)
      throw new Ar(t.failed);
    return this;
  }
  /**
  Try to apply a step in this transformation, ignoring it if it
  fails. Returns the step result.
  */
  maybeStep(e) {
    let t = e.apply(this.doc);
    return t.failed || this.addStep(e, t.doc), t;
  }
  /**
  True when the document has been changed (when there are any
  steps).
  */
  get docChanged() {
    return this.steps.length > 0;
  }
  /**
  @internal
  */
  addStep(e, t) {
    this.docs.push(this.doc), this.steps.push(e), this.mapping.appendMap(e.getMap()), this.doc = t;
  }
  /**
  Replace the part of the document between `from` and `to` with the
  given `slice`.
  */
  replace(e, t = e, r = F.empty) {
    let s = _a(this.doc, e, t, r);
    return s && this.step(s), this;
  }
  /**
  Replace the given range with the given content, which may be a
  fragment, node, or array of nodes.
  */
  replaceWith(e, t, r) {
    return this.replace(e, t, new F(D.from(r), 0, 0));
  }
  /**
  Delete the content between the given positions.
  */
  delete(e, t) {
    return this.replace(e, t, F.empty);
  }
  /**
  Insert the given content at the given position.
  */
  insert(e, t) {
    return this.replaceWith(e, e, t);
  }
  /**
  Replace a range of the document with a given slice, using
  `from`, `to`, and the slice's
  [`openStart`](https://prosemirror.net/docs/ref/#model.Slice.openStart) property as hints, rather
  than fixed start and end points. This method may grow the
  replaced area or close open nodes in the slice in order to get a
  fit that is more in line with WYSIWYG expectations, by dropping
  fully covered parent nodes of the replaced region when they are
  marked [non-defining as
  context](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext), or including an
  open parent node from the slice that _is_ marked as [defining
  its content](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).
  
  This is the method, for example, to handle paste. The similar
  [`replace`](https://prosemirror.net/docs/ref/#transform.Transform.replace) method is a more
  primitive tool which will _not_ move the start and end of its given
  range, and is useful in situations where you need more precise
  control over what happens.
  */
  replaceRange(e, t, r) {
    return a6(this, e, t, r), this;
  }
  /**
  Replace the given range with a node, but use `from` and `to` as
  hints, rather than precise positions. When from and to are the same
  and are at the start or end of a parent node in which the given
  node doesn't fit, this method may _move_ them out towards a parent
  that does allow the given node to be placed. When the given range
  completely covers a parent node, this method may completely replace
  that parent node.
  */
  replaceRangeWith(e, t, r) {
    return l6(this, e, t, r), this;
  }
  /**
  Delete the given range, expanding it to cover fully covered
  parent nodes until a valid replace is found.
  */
  deleteRange(e, t) {
    return c6(this, e, t), this;
  }
  /**
  Split the content in the given range off from its parent, if there
  is sibling content before or after it, and move it up the tree to
  the depth specified by `target`. You'll probably want to use
  [`liftTarget`](https://prosemirror.net/docs/ref/#transform.liftTarget) to compute `target`, to make
  sure the lift is valid.
  */
  lift(e, t) {
    return Kb(this, e, t), this;
  }
  /**
  Join the blocks around the given position. If depth is 2, their
  last and first siblings are also joined, and so on.
  */
  join(e, t = 1) {
    return n6(this, e, t), this;
  }
  /**
  Wrap the given [range](https://prosemirror.net/docs/ref/#model.NodeRange) in the given set of wrappers.
  The wrappers are assumed to be valid in this position, and should
  probably be computed with [`findWrapping`](https://prosemirror.net/docs/ref/#transform.findWrapping).
  */
  wrap(e, t) {
    return Yb(this, e, t), this;
  }
  /**
  Set the type of all textblocks (partly) between `from` and `to` to
  the given node type with the given attributes.
  */
  setBlockType(e, t = e, r, s = null) {
    return Qb(this, e, t, r, s), this;
  }
  /**
  Change the type, attributes, and/or marks of the node at `pos`.
  When `type` isn't given, the existing node type is preserved,
  */
  setNodeMarkup(e, t, r = null, s) {
    return e6(this, e, t, r, s), this;
  }
  /**
  Set a single attribute on a given node to a new value.
  The `pos` addresses the document content. Use `setDocAttribute`
  to set attributes on the document itself.
  */
  setNodeAttribute(e, t, r) {
    return this.step(new Nr(e, t, r)), this;
  }
  /**
  Set a single attribute on the document to a new value.
  */
  setDocAttribute(e, t) {
    return this.step(new ss(e, t)), this;
  }
  /**
  Add a mark to the node at position `pos`.
  */
  addNodeMark(e, t) {
    return this.step(new gn(e, t)), this;
  }
  /**
  Remove a mark (or a mark of the given type) from the node at
  position `pos`.
  */
  removeNodeMark(e, t) {
    if (!(t instanceof ye)) {
      let r = this.doc.nodeAt(e);
      if (!r)
        throw new RangeError("No node at position " + e);
      if (t = t.isInSet(r.marks), !t)
        return this;
    }
    return this.step(new Sr(e, t)), this;
  }
  /**
  Split the node at the given position, and optionally, if `depth` is
  greater than one, any number of nodes above that. By default, the
  parts split off will inherit the node type of the original node.
  This can be changed by passing an array of types and attributes to
  use after the split.
  */
  split(e, t = 1, r) {
    return t6(this, e, t, r), this;
  }
  /**
  Add the given mark to the inline content between `from` and `to`.
  */
  addMark(e, t, r) {
    return Ub(this, e, t, r), this;
  }
  /**
  Remove marks from inline nodes between `from` and `to`. When
  `mark` is a single mark, remove precisely that mark. When it is
  a mark type, remove all marks of that type. When it is null,
  remove all marks of any type.
  */
  removeMark(e, t, r) {
    return Bb(this, e, t, r), this;
  }
  /**
  Removes all marks and nodes from the content of the node at
  `pos` that don't match the given new parent node type. Accepts
  an optional starting [content match](https://prosemirror.net/docs/ref/#model.ContentMatch) as
  third argument.
  */
  clearIncompatible(e, t, r) {
    return Wb(this, e, t, r), this;
  }
}
const fo = /* @__PURE__ */ Object.create(null);
class de {
  /**
  Initialize a selection with the head and anchor and ranges. If no
  ranges are given, constructs a single range across `$anchor` and
  `$head`.
  */
  constructor(e, t, r) {
    this.$anchor = e, this.$head = t, this.ranges = r || [new u6(e.min(t), e.max(t))];
  }
  /**
  The selection's anchor, as an unresolved position.
  */
  get anchor() {
    return this.$anchor.pos;
  }
  /**
  The selection's head.
  */
  get head() {
    return this.$head.pos;
  }
  /**
  The lower bound of the selection's main range.
  */
  get from() {
    return this.$from.pos;
  }
  /**
  The upper bound of the selection's main range.
  */
  get to() {
    return this.$to.pos;
  }
  /**
  The resolved lower  bound of the selection's main range.
  */
  get $from() {
    return this.ranges[0].$from;
  }
  /**
  The resolved upper bound of the selection's main range.
  */
  get $to() {
    return this.ranges[0].$to;
  }
  /**
  Indicates whether the selection contains any content.
  */
  get empty() {
    let e = this.ranges;
    for (let t = 0; t < e.length; t++)
      if (e[t].$from.pos != e[t].$to.pos)
        return !1;
    return !0;
  }
  /**
  Get the content of this selection as a slice.
  */
  content() {
    return this.$from.doc.slice(this.from, this.to, !0);
  }
  /**
  Replace the selection with a slice or, if no slice is given,
  delete the selection. Will append to the given transaction.
  */
  replace(e, t = F.empty) {
    let r = t.content.lastChild, s = null;
    for (let a = 0; a < t.openEnd; a++)
      s = r, r = r.lastChild;
    let i = e.steps.length, o = this.ranges;
    for (let a = 0; a < o.length; a++) {
      let { $from: l, $to: c } = o[a], d = e.mapping.slice(i);
      e.replaceRange(d.map(l.pos), d.map(c.pos), a ? F.empty : t), a == 0 && zc(e, i, (r ? r.isInline : s && s.isTextblock) ? -1 : 1);
    }
  }
  /**
  Replace the selection with the given node, appending the changes
  to the given transaction.
  */
  replaceWith(e, t) {
    let r = e.steps.length, s = this.ranges;
    for (let i = 0; i < s.length; i++) {
      let { $from: o, $to: a } = s[i], l = e.mapping.slice(r), c = l.map(o.pos), d = l.map(a.pos);
      i ? e.deleteRange(c, d) : (e.replaceRangeWith(c, d, t), zc(e, r, t.isInline ? -1 : 1));
    }
  }
  /**
  Find a valid cursor or leaf node selection starting at the given
  position and searching back if `dir` is negative, and forward if
  positive. When `textOnly` is true, only consider cursor
  selections. Will return null when no valid selection position is
  found.
  */
  static findFrom(e, t, r = !1) {
    let s = e.parent.inlineContent ? new oe(e) : ur(e.node(0), e.parent, e.pos, e.index(), t, r);
    if (s)
      return s;
    for (let i = e.depth - 1; i >= 0; i--) {
      let o = t < 0 ? ur(e.node(0), e.node(i), e.before(i + 1), e.index(i), t, r) : ur(e.node(0), e.node(i), e.after(i + 1), e.index(i) + 1, t, r);
      if (o)
        return o;
    }
    return null;
  }
  /**
  Find a valid cursor or leaf node selection near the given
  position. Searches forward first by default, but if `bias` is
  negative, it will search backwards first.
  */
  static near(e, t = 1) {
    return this.findFrom(e, t) || this.findFrom(e, -t) || new Rt(e.node(0));
  }
  /**
  Find the cursor or leaf node selection closest to the start of
  the given document. Will return an
  [`AllSelection`](https://prosemirror.net/docs/ref/#state.AllSelection) if no valid position
  exists.
  */
  static atStart(e) {
    return ur(e, e, 0, 0, 1) || new Rt(e);
  }
  /**
  Find the cursor or leaf node selection closest to the end of the
  given document.
  */
  static atEnd(e) {
    return ur(e, e, e.content.size, e.childCount, -1) || new Rt(e);
  }
  /**
  Deserialize the JSON representation of a selection. Must be
  implemented for custom classes (as a static class method).
  */
  static fromJSON(e, t) {
    if (!t || !t.type)
      throw new RangeError("Invalid input for Selection.fromJSON");
    let r = fo[t.type];
    if (!r)
      throw new RangeError(`No selection type ${t.type} defined`);
    return r.fromJSON(e, t);
  }
  /**
  To be able to deserialize selections from JSON, custom selection
  classes must register themselves with an ID string, so that they
  can be disambiguated. Try to pick something that's unlikely to
  clash with classes from other modules.
  */
  static jsonID(e, t) {
    if (e in fo)
      throw new RangeError("Duplicate use of selection JSON ID " + e);
    return fo[e] = t, t.prototype.jsonID = e, t;
  }
  /**
  Get a [bookmark](https://prosemirror.net/docs/ref/#state.SelectionBookmark) for this selection,
  which is a value that can be mapped without having access to a
  current document, and later resolved to a real selection for a
  given document again. (This is used mostly by the history to
  track and restore old selections.) The default implementation of
  this method just converts the selection to a text selection and
  returns the bookmark for that.
  */
  getBookmark() {
    return oe.between(this.$anchor, this.$head).getBookmark();
  }
}
de.prototype.visible = !0;
class u6 {
  /**
  Create a range.
  */
  constructor(e, t) {
    this.$from = e, this.$to = t;
  }
}
let $c = !1;
function Vc(n) {
  !$c && !n.parent.inlineContent && ($c = !0, console.warn("TextSelection endpoint not pointing into a node with inline content (" + n.parent.type.name + ")"));
}
class oe extends de {
  /**
  Construct a text selection between the given points.
  */
  constructor(e, t = e) {
    Vc(e), Vc(t), super(e, t);
  }
  /**
  Returns a resolved position if this is a cursor selection (an
  empty text selection), and null otherwise.
  */
  get $cursor() {
    return this.$anchor.pos == this.$head.pos ? this.$head : null;
  }
  map(e, t) {
    let r = e.resolve(t.map(this.head));
    if (!r.parent.inlineContent)
      return de.near(r);
    let s = e.resolve(t.map(this.anchor));
    return new oe(s.parent.inlineContent ? s : r, r);
  }
  replace(e, t = F.empty) {
    if (super.replace(e, t), t == F.empty) {
      let r = this.$from.marksAcross(this.$to);
      r && e.ensureMarks(r);
    }
  }
  eq(e) {
    return e instanceof oe && e.anchor == this.anchor && e.head == this.head;
  }
  getBookmark() {
    return new Vi(this.anchor, this.head);
  }
  toJSON() {
    return { type: "text", anchor: this.anchor, head: this.head };
  }
  /**
  @internal
  */
  static fromJSON(e, t) {
    if (typeof t.anchor != "number" || typeof t.head != "number")
      throw new RangeError("Invalid input for TextSelection.fromJSON");
    return new oe(e.resolve(t.anchor), e.resolve(t.head));
  }
  /**
  Create a text selection from non-resolved positions.
  */
  static create(e, t, r = t) {
    let s = e.resolve(t);
    return new this(s, r == t ? s : e.resolve(r));
  }
  /**
  Return a text selection that spans the given positions or, if
  they aren't text positions, find a text selection near them.
  `bias` determines whether the method searches forward (default)
  or backwards (negative number) first. Will fall back to calling
  [`Selection.near`](https://prosemirror.net/docs/ref/#state.Selection^near) when the document
  doesn't contain a valid text position.
  */
  static between(e, t, r) {
    let s = e.pos - t.pos;
    if ((!r || s) && (r = s >= 0 ? 1 : -1), !t.parent.inlineContent) {
      let i = de.findFrom(t, r, !0) || de.findFrom(t, -r, !0);
      if (i)
        t = i.$head;
      else
        return de.near(t, r);
    }
    return e.parent.inlineContent || (s == 0 ? e = t : (e = (de.findFrom(e, -r, !0) || de.findFrom(e, r, !0)).$anchor, e.pos < t.pos != s < 0 && (e = t))), new oe(e, t);
  }
}
de.jsonID("text", oe);
class Vi {
  constructor(e, t) {
    this.anchor = e, this.head = t;
  }
  map(e) {
    return new Vi(e.map(this.anchor), e.map(this.head));
  }
  resolve(e) {
    return oe.between(e.resolve(this.anchor), e.resolve(this.head));
  }
}
class X extends de {
  /**
  Create a node selection. Does not verify the validity of its
  argument.
  */
  constructor(e) {
    let t = e.nodeAfter, r = e.node(0).resolve(e.pos + t.nodeSize);
    super(e, r), this.node = t;
  }
  map(e, t) {
    let { deleted: r, pos: s } = t.mapResult(this.anchor), i = e.resolve(s);
    return r ? de.near(i) : new X(i);
  }
  content() {
    return new F(D.from(this.node), 0, 0);
  }
  eq(e) {
    return e instanceof X && e.anchor == this.anchor;
  }
  toJSON() {
    return { type: "node", anchor: this.anchor };
  }
  getBookmark() {
    return new Da(this.anchor);
  }
  /**
  @internal
  */
  static fromJSON(e, t) {
    if (typeof t.anchor != "number")
      throw new RangeError("Invalid input for NodeSelection.fromJSON");
    return new X(e.resolve(t.anchor));
  }
  /**
  Create a node selection from non-resolved positions.
  */
  static create(e, t) {
    return new X(e.resolve(t));
  }
  /**
  Determines whether the given node may be selected as a node
  selection.
  */
  static isSelectable(e) {
    return !e.isText && e.type.spec.selectable !== !1;
  }
}
X.prototype.visible = !1;
de.jsonID("node", X);
class Da {
  constructor(e) {
    this.anchor = e;
  }
  map(e) {
    let { deleted: t, pos: r } = e.mapResult(this.anchor);
    return t ? new Vi(r, r) : new Da(r);
  }
  resolve(e) {
    let t = e.resolve(this.anchor), r = t.nodeAfter;
    return r && X.isSelectable(r) ? new X(t) : de.near(t);
  }
}
class Rt extends de {
  /**
  Create an all-selection over the given document.
  */
  constructor(e) {
    super(e.resolve(0), e.resolve(e.content.size));
  }
  replace(e, t = F.empty) {
    if (t == F.empty) {
      e.delete(0, e.doc.content.size);
      let r = de.atStart(e.doc);
      r.eq(e.selection) || e.setSelection(r);
    } else
      super.replace(e, t);
  }
  toJSON() {
    return { type: "all" };
  }
  /**
  @internal
  */
  static fromJSON(e) {
    return new Rt(e);
  }
  map(e) {
    return new Rt(e);
  }
  eq(e) {
    return e instanceof Rt;
  }
  getBookmark() {
    return d6;
  }
}
de.jsonID("all", Rt);
const d6 = {
  map() {
    return this;
  },
  resolve(n) {
    return new Rt(n);
  }
};
function ur(n, e, t, r, s, i = !1) {
  if (e.inlineContent)
    return oe.create(n, t);
  for (let o = r - (s > 0 ? 0 : 1); s > 0 ? o < e.childCount : o >= 0; o += s) {
    let a = e.child(o);
    if (a.isAtom) {
      if (!i && X.isSelectable(a))
        return X.create(n, t - (s < 0 ? a.nodeSize : 0));
    } else {
      let l = ur(n, a, t + s, s < 0 ? a.childCount : 0, s, i);
      if (l)
        return l;
    }
    t += a.nodeSize * s;
  }
  return null;
}
function zc(n, e, t) {
  let r = n.steps.length - 1;
  if (r < e)
    return;
  let s = n.steps[r];
  if (!(s instanceof Be || s instanceof ze))
    return;
  let i = n.mapping.maps[r], o;
  i.forEach((a, l, c, d) => {
    o == null && (o = d);
  }), n.setSelection(de.near(n.doc.resolve(o), t));
}
const Fc = 1, Ls = 2, jc = 4;
class f6 extends Zf {
  /**
  @internal
  */
  constructor(e) {
    super(e.doc), this.curSelectionFor = 0, this.updated = 0, this.meta = /* @__PURE__ */ Object.create(null), this.time = Date.now(), this.curSelection = e.selection, this.storedMarks = e.storedMarks;
  }
  /**
  The transaction's current selection. This defaults to the editor
  selection [mapped](https://prosemirror.net/docs/ref/#state.Selection.map) through the steps in the
  transaction, but can be overwritten with
  [`setSelection`](https://prosemirror.net/docs/ref/#state.Transaction.setSelection).
  */
  get selection() {
    return this.curSelectionFor < this.steps.length && (this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor)), this.curSelectionFor = this.steps.length), this.curSelection;
  }
  /**
  Update the transaction's current selection. Will determine the
  selection that the editor gets when the transaction is applied.
  */
  setSelection(e) {
    if (e.$from.doc != this.doc)
      throw new RangeError("Selection passed to setSelection must point at the current document");
    return this.curSelection = e, this.curSelectionFor = this.steps.length, this.updated = (this.updated | Fc) & ~Ls, this.storedMarks = null, this;
  }
  /**
  Whether the selection was explicitly updated by this transaction.
  */
  get selectionSet() {
    return (this.updated & Fc) > 0;
  }
  /**
  Set the current stored marks.
  */
  setStoredMarks(e) {
    return this.storedMarks = e, this.updated |= Ls, this;
  }
  /**
  Make sure the current stored marks or, if that is null, the marks
  at the selection, match the given set of marks. Does nothing if
  this is already the case.
  */
  ensureMarks(e) {
    return ye.sameSet(this.storedMarks || this.selection.$from.marks(), e) || this.setStoredMarks(e), this;
  }
  /**
  Add a mark to the set of stored marks.
  */
  addStoredMark(e) {
    return this.ensureMarks(e.addToSet(this.storedMarks || this.selection.$head.marks()));
  }
  /**
  Remove a mark or mark type from the set of stored marks.
  */
  removeStoredMark(e) {
    return this.ensureMarks(e.removeFromSet(this.storedMarks || this.selection.$head.marks()));
  }
  /**
  Whether the stored marks were explicitly set for this transaction.
  */
  get storedMarksSet() {
    return (this.updated & Ls) > 0;
  }
  /**
  @internal
  */
  addStep(e, t) {
    super.addStep(e, t), this.updated = this.updated & ~Ls, this.storedMarks = null;
  }
  /**
  Update the timestamp for the transaction.
  */
  setTime(e) {
    return this.time = e, this;
  }
  /**
  Replace the current selection with the given slice.
  */
  replaceSelection(e) {
    return this.selection.replace(this, e), this;
  }
  /**
  Replace the selection with the given node. When `inheritMarks` is
  true and the content is inline, it inherits the marks from the
  place where it is inserted.
  */
  replaceSelectionWith(e, t = !0) {
    let r = this.selection;
    return t && (e = e.mark(this.storedMarks || (r.empty ? r.$from.marks() : r.$from.marksAcross(r.$to) || ye.none))), r.replaceWith(this, e), this;
  }
  /**
  Delete the selection.
  */
  deleteSelection() {
    return this.selection.replace(this), this;
  }
  /**
  Replace the given range, or the selection if no range is given,
  with a text node containing the given string.
  */
  insertText(e, t, r) {
    let s = this.doc.type.schema;
    if (t == null)
      return e ? this.replaceSelectionWith(s.text(e), !0) : this.deleteSelection();
    {
      if (r == null && (r = t), r = r ?? t, !e)
        return this.deleteRange(t, r);
      let i = this.storedMarks;
      if (!i) {
        let o = this.doc.resolve(t);
        i = r == t ? o.marks() : o.marksAcross(this.doc.resolve(r));
      }
      return this.replaceRangeWith(t, r, s.text(e, i)), this.selection.empty || this.setSelection(de.near(this.selection.$to)), this;
    }
  }
  /**
  Store a metadata property in this transaction, keyed either by
  name or by plugin.
  */
  setMeta(e, t) {
    return this.meta[typeof e == "string" ? e : e.key] = t, this;
  }
  /**
  Retrieve a metadata property for a given name or plugin.
  */
  getMeta(e) {
    return this.meta[typeof e == "string" ? e : e.key];
  }
  /**
  Returns true if this transaction doesn't contain any metadata,
  and can thus safely be extended.
  */
  get isGeneric() {
    for (let e in this.meta)
      return !1;
    return !0;
  }
  /**
  Indicate that the editor should scroll the selection into view
  when updated to the state produced by this transaction.
  */
  scrollIntoView() {
    return this.updated |= jc, this;
  }
  /**
  True when this transaction has had `scrollIntoView` called on it.
  */
  get scrolledIntoView() {
    return (this.updated & jc) > 0;
  }
}
function Uc(n, e) {
  return !e || !n ? n : n.bind(e);
}
class Wr {
  constructor(e, t, r) {
    this.name = e, this.init = Uc(t.init, r), this.apply = Uc(t.apply, r);
  }
}
const m6 = [
  new Wr("doc", {
    init(n) {
      return n.doc || n.schema.topNodeType.createAndFill();
    },
    apply(n) {
      return n.doc;
    }
  }),
  new Wr("selection", {
    init(n, e) {
      return n.selection || de.atStart(e.doc);
    },
    apply(n) {
      return n.selection;
    }
  }),
  new Wr("storedMarks", {
    init(n) {
      return n.storedMarks || null;
    },
    apply(n, e, t, r) {
      return r.selection.$cursor ? n.storedMarks : null;
    }
  }),
  new Wr("scrollToSelection", {
    init() {
      return 0;
    },
    apply(n, e) {
      return n.scrolledIntoView ? e + 1 : e;
    }
  })
];
class mo {
  constructor(e, t) {
    this.schema = e, this.plugins = [], this.pluginsByKey = /* @__PURE__ */ Object.create(null), this.fields = m6.slice(), t && t.forEach((r) => {
      if (this.pluginsByKey[r.key])
        throw new RangeError("Adding different instances of a keyed plugin (" + r.key + ")");
      this.plugins.push(r), this.pluginsByKey[r.key] = r, r.spec.state && this.fields.push(new Wr(r.key, r.spec.state, r));
    });
  }
}
class hr {
  /**
  @internal
  */
  constructor(e) {
    this.config = e;
  }
  /**
  The schema of the state's document.
  */
  get schema() {
    return this.config.schema;
  }
  /**
  The plugins that are active in this state.
  */
  get plugins() {
    return this.config.plugins;
  }
  /**
  Apply the given transaction to produce a new state.
  */
  apply(e) {
    return this.applyTransaction(e).state;
  }
  /**
  @internal
  */
  filterTransaction(e, t = -1) {
    for (let r = 0; r < this.config.plugins.length; r++)
      if (r != t) {
        let s = this.config.plugins[r];
        if (s.spec.filterTransaction && !s.spec.filterTransaction.call(s, e, this))
          return !1;
      }
    return !0;
  }
  /**
  Verbose variant of [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) that
  returns the precise transactions that were applied (which might
  be influenced by the [transaction
  hooks](https://prosemirror.net/docs/ref/#state.PluginSpec.filterTransaction) of
  plugins) along with the new state.
  */
  applyTransaction(e) {
    if (!this.filterTransaction(e))
      return { state: this, transactions: [] };
    let t = [e], r = this.applyInner(e), s = null;
    for (; ; ) {
      let i = !1;
      for (let o = 0; o < this.config.plugins.length; o++) {
        let a = this.config.plugins[o];
        if (a.spec.appendTransaction) {
          let l = s ? s[o].n : 0, c = s ? s[o].state : this, d = l < t.length && a.spec.appendTransaction.call(a, l ? t.slice(l) : t, c, r);
          if (d && r.filterTransaction(d, o)) {
            if (d.setMeta("appendedTransaction", e), !s) {
              s = [];
              for (let f = 0; f < this.config.plugins.length; f++)
                s.push(f < o ? { state: r, n: t.length } : { state: this, n: 0 });
            }
            t.push(d), r = r.applyInner(d), i = !0;
          }
          s && (s[o] = { state: r, n: t.length });
        }
      }
      if (!i)
        return { state: r, transactions: t };
    }
  }
  /**
  @internal
  */
  applyInner(e) {
    if (!e.before.eq(this.doc))
      throw new RangeError("Applying a mismatched transaction");
    let t = new hr(this.config), r = this.config.fields;
    for (let s = 0; s < r.length; s++) {
      let i = r[s];
      t[i.name] = i.apply(e, this[i.name], this, t);
    }
    return t;
  }
  /**
  Start a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) from this state.
  */
  get tr() {
    return new f6(this);
  }
  /**
  Create a new state.
  */
  static create(e) {
    let t = new mo(e.doc ? e.doc.type.schema : e.schema, e.plugins), r = new hr(t);
    for (let s = 0; s < t.fields.length; s++)
      r[t.fields[s].name] = t.fields[s].init(e, r);
    return r;
  }
  /**
  Create a new state based on this one, but with an adjusted set
  of active plugins. State fields that exist in both sets of
  plugins are kept unchanged. Those that no longer exist are
  dropped, and those that are new are initialized using their
  [`init`](https://prosemirror.net/docs/ref/#state.StateField.init) method, passing in the new
  configuration object..
  */
  reconfigure(e) {
    let t = new mo(this.schema, e.plugins), r = t.fields, s = new hr(t);
    for (let i = 0; i < r.length; i++) {
      let o = r[i].name;
      s[o] = this.hasOwnProperty(o) ? this[o] : r[i].init(e, s);
    }
    return s;
  }
  /**
  Serialize this state to JSON. If you want to serialize the state
  of plugins, pass an object mapping property names to use in the
  resulting JSON object to plugin objects. The argument may also be
  a string or number, in which case it is ignored, to support the
  way `JSON.stringify` calls `toString` methods.
  */
  toJSON(e) {
    let t = { doc: this.doc.toJSON(), selection: this.selection.toJSON() };
    if (this.storedMarks && (t.storedMarks = this.storedMarks.map((r) => r.toJSON())), e && typeof e == "object")
      for (let r in e) {
        if (r == "doc" || r == "selection")
          throw new RangeError("The JSON fields `doc` and `selection` are reserved");
        let s = e[r], i = s.spec.state;
        i && i.toJSON && (t[r] = i.toJSON.call(s, this[s.key]));
      }
    return t;
  }
  /**
  Deserialize a JSON representation of a state. `config` should
  have at least a `schema` field, and should contain array of
  plugins to initialize the state with. `pluginFields` can be used
  to deserialize the state of plugins, by associating plugin
  instances with the property names they use in the JSON object.
  */
  static fromJSON(e, t, r) {
    if (!t)
      throw new RangeError("Invalid input for EditorState.fromJSON");
    if (!e.schema)
      throw new RangeError("Required config field 'schema' missing");
    let s = new mo(e.schema, e.plugins), i = new hr(s);
    return s.fields.forEach((o) => {
      if (o.name == "doc")
        i.doc = Un.fromJSON(e.schema, t.doc);
      else if (o.name == "selection")
        i.selection = de.fromJSON(i.doc, t.selection);
      else if (o.name == "storedMarks")
        t.storedMarks && (i.storedMarks = t.storedMarks.map(e.schema.markFromJSON));
      else {
        if (r)
          for (let a in r) {
            let l = r[a], c = l.spec.state;
            if (l.key == o.name && c && c.fromJSON && Object.prototype.hasOwnProperty.call(t, a)) {
              i[o.name] = c.fromJSON.call(l, e, t[a], i);
              return;
            }
          }
        i[o.name] = o.init(e, i);
      }
    }), i;
  }
}
function $f(n, e, t) {
  for (let r in n) {
    let s = n[r];
    s instanceof Function ? s = s.bind(e) : r == "handleDOMEvents" && (s = $f(s, e, {})), t[r] = s;
  }
  return t;
}
class it {
  /**
  Create a plugin.
  */
  constructor(e) {
    this.spec = e, this.props = {}, e.props && $f(e.props, this, this.props), this.key = e.key ? e.key.key : Vf("plugin");
  }
  /**
  Extract the plugin's state field from an editor state.
  */
  getState(e) {
    return e[this.key];
  }
}
const ho = /* @__PURE__ */ Object.create(null);
function Vf(n) {
  return n in ho ? n + "$" + ++ho[n] : (ho[n] = 0, n + "$");
}
class Tt {
  /**
  Create a plugin key.
  */
  constructor(e = "key") {
    this.key = Vf(e);
  }
  /**
  Get the active plugin with this key, if any, from an editor
  state.
  */
  get(e) {
    return e.config.pluginsByKey[this.key];
  }
  /**
  Get the plugin's state from an editor state.
  */
  getState(e) {
    return e[this.key];
  }
}
const et = function(n) {
  for (var e = 0; ; e++)
    if (n = n.previousSibling, !n)
      return e;
}, is = function(n) {
  let e = n.assignedSlot || n.parentNode;
  return e && e.nodeType == 11 ? e.host : e;
};
let Bc = null;
const Jt = function(n, e, t) {
  let r = Bc || (Bc = document.createRange());
  return r.setEnd(n, t ?? n.nodeValue.length), r.setStart(n, e || 0), r;
}, Gn = function(n, e, t, r) {
  return t && (Wc(n, e, t, r, -1) || Wc(n, e, t, r, 1));
}, h6 = /^(img|br|input|textarea|hr)$/i;
function Wc(n, e, t, r, s) {
  for (; ; ) {
    if (n == t && e == r)
      return !0;
    if (e == (s < 0 ? 0 : Lt(n))) {
      let i = n.parentNode;
      if (!i || i.nodeType != 1 || Ha(n) || h6.test(n.nodeName) || n.contentEditable == "false")
        return !1;
      e = et(n) + (s < 0 ? 0 : 1), n = i;
    } else if (n.nodeType == 1) {
      if (n = n.childNodes[e + (s < 0 ? -1 : 0)], n.contentEditable == "false")
        return !1;
      e = s < 0 ? Lt(n) : 0;
    } else
      return !1;
  }
}
function Lt(n) {
  return n.nodeType == 3 ? n.nodeValue.length : n.childNodes.length;
}
function p6(n, e, t) {
  for (let r = e == 0, s = e == Lt(n); r || s; ) {
    if (n == t)
      return !0;
    let i = et(n);
    if (n = n.parentNode, !n)
      return !1;
    r = r && i == 0, s = s && i == Lt(n);
  }
}
function Ha(n) {
  let e;
  for (let t = n; t && !(e = t.pmViewDesc); t = t.parentNode)
    ;
  return e && e.node && e.node.isBlock && (e.dom == n || e.contentDOM == n);
}
const zi = function(n) {
  return n.focusNode && Gn(n.focusNode, n.focusOffset, n.anchorNode, n.anchorOffset);
};
function Dn(n, e) {
  let t = document.createEvent("Event");
  return t.initEvent("keydown", !0, !0), t.keyCode = n, t.key = t.code = e, t;
}
function g6(n) {
  let e = n.activeElement;
  for (; e && e.shadowRoot; )
    e = e.shadowRoot.activeElement;
  return e;
}
function b6(n, e, t) {
  if (n.caretPositionFromPoint)
    try {
      let r = n.caretPositionFromPoint(e, t);
      if (r)
        return { node: r.offsetNode, offset: r.offset };
    } catch {
    }
  if (n.caretRangeFromPoint) {
    let r = n.caretRangeFromPoint(e, t);
    if (r)
      return { node: r.startContainer, offset: r.startOffset };
  }
}
const Vt = typeof navigator < "u" ? navigator : null, qc = typeof document < "u" ? document : null, Sn = Vt && Vt.userAgent || "", Jo = /Edge\/(\d+)/.exec(Sn), zf = /MSIE \d/.exec(Sn), Go = /Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(Sn), at = !!(zf || Go || Jo), yn = zf ? document.documentMode : Go ? +Go[1] : Jo ? +Jo[1] : 0, At = !at && /gecko\/(\d+)/i.test(Sn);
At && +(/Firefox\/(\d+)/.exec(Sn) || [0, 0])[1];
const Yo = !at && /Chrome\/(\d+)/.exec(Sn), Ge = !!Yo, y6 = Yo ? +Yo[1] : 0, tt = !at && !!Vt && /Apple Computer/.test(Vt.vendor), Or = tt && (/Mobile\/\w+/.test(Sn) || !!Vt && Vt.maxTouchPoints > 2), yt = Or || (Vt ? /Mac/.test(Vt.platform) : !1), v6 = Vt ? /Win/.test(Vt.platform) : !1, kt = /Android \d/.test(Sn), Os = !!qc && "webkitFontSmoothing" in qc.documentElement.style, x6 = Os ? +(/\bAppleWebKit\/(\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;
function w6(n) {
  return {
    left: 0,
    right: n.documentElement.clientWidth,
    top: 0,
    bottom: n.documentElement.clientHeight
  };
}
function qt(n, e) {
  return typeof n == "number" ? n : n[e];
}
function N6(n) {
  let e = n.getBoundingClientRect(), t = e.width / n.offsetWidth || 1, r = e.height / n.offsetHeight || 1;
  return {
    left: e.left,
    right: e.left + n.clientWidth * t,
    top: e.top,
    bottom: e.top + n.clientHeight * r
  };
}
function Kc(n, e, t) {
  let r = n.someProp("scrollThreshold") || 0, s = n.someProp("scrollMargin") || 5, i = n.dom.ownerDocument;
  for (let o = t || n.dom; o; o = is(o)) {
    if (o.nodeType != 1)
      continue;
    let a = o, l = a == i.body, c = l ? w6(i) : N6(a), d = 0, f = 0;
    if (e.top < c.top + qt(r, "top") ? f = -(c.top - e.top + qt(s, "top")) : e.bottom > c.bottom - qt(r, "bottom") && (f = e.bottom - e.top > c.bottom - c.top ? e.top + qt(s, "top") - c.top : e.bottom - c.bottom + qt(s, "bottom")), e.left < c.left + qt(r, "left") ? d = -(c.left - e.left + qt(s, "left")) : e.right > c.right - qt(r, "right") && (d = e.right - c.right + qt(s, "right")), d || f)
      if (l)
        i.defaultView.scrollBy(d, f);
      else {
        let m = a.scrollLeft, h = a.scrollTop;
        f && (a.scrollTop += f), d && (a.scrollLeft += d);
        let p = a.scrollLeft - m, y = a.scrollTop - h;
        e = { left: e.left - p, top: e.top - y, right: e.right - p, bottom: e.bottom - y };
      }
    if (l || /^(fixed|sticky)$/.test(getComputedStyle(o).position))
      break;
  }
}
function k6(n) {
  let e = n.dom.getBoundingClientRect(), t = Math.max(0, e.top), r, s;
  for (let i = (e.left + e.right) / 2, o = t + 1; o < Math.min(innerHeight, e.bottom); o += 5) {
    let a = n.root.elementFromPoint(i, o);
    if (!a || a == n.dom || !n.dom.contains(a))
      continue;
    let l = a.getBoundingClientRect();
    if (l.top >= t - 20) {
      r = a, s = l.top;
      break;
    }
  }
  return { refDOM: r, refTop: s, stack: Ff(n.dom) };
}
function Ff(n) {
  let e = [], t = n.ownerDocument;
  for (let r = n; r && (e.push({ dom: r, top: r.scrollTop, left: r.scrollLeft }), n != t); r = is(r))
    ;
  return e;
}
function M6({ refDOM: n, refTop: e, stack: t }) {
  let r = n ? n.getBoundingClientRect().top : 0;
  jf(t, r == 0 ? 0 : r - e);
}
function jf(n, e) {
  for (let t = 0; t < n.length; t++) {
    let { dom: r, top: s, left: i } = n[t];
    r.scrollTop != s + e && (r.scrollTop = s + e), r.scrollLeft != i && (r.scrollLeft = i);
  }
}
let or = null;
function C6(n) {
  if (n.setActive)
    return n.setActive();
  if (or)
    return n.focus(or);
  let e = Ff(n);
  n.focus(or == null ? {
    get preventScroll() {
      return or = { preventScroll: !0 }, !0;
    }
  } : void 0), or || (or = !1, jf(e, 0));
}
function Uf(n, e) {
  let t, r = 2e8, s, i = 0, o = e.top, a = e.top, l, c;
  for (let d = n.firstChild, f = 0; d; d = d.nextSibling, f++) {
    let m;
    if (d.nodeType == 1)
      m = d.getClientRects();
    else if (d.nodeType == 3)
      m = Jt(d).getClientRects();
    else
      continue;
    for (let h = 0; h < m.length; h++) {
      let p = m[h];
      if (p.top <= o && p.bottom >= a) {
        o = Math.max(p.bottom, o), a = Math.min(p.top, a);
        let y = p.left > e.left ? p.left - e.left : p.right < e.left ? e.left - p.right : 0;
        if (y < r) {
          t = d, r = y, s = y && t.nodeType == 3 ? {
            left: p.right < e.left ? p.right : p.left,
            top: e.top
          } : e, d.nodeType == 1 && y && (i = f + (e.left >= (p.left + p.right) / 2 ? 1 : 0));
          continue;
        }
      } else
        p.top > e.top && !l && p.left <= e.left && p.right >= e.left && (l = d, c = { left: Math.max(p.left, Math.min(p.right, e.left)), top: p.top });
      !t && (e.left >= p.right && e.top >= p.top || e.left >= p.left && e.top >= p.bottom) && (i = f + 1);
    }
  }
  return !t && l && (t = l, s = c, r = 0), t && t.nodeType == 3 ? R6(t, s) : !t || r && t.nodeType == 1 ? { node: n, offset: i } : Uf(t, s);
}
function R6(n, e) {
  let t = n.nodeValue.length, r = document.createRange();
  for (let s = 0; s < t; s++) {
    r.setEnd(n, s + 1), r.setStart(n, s);
    let i = ln(r, 1);
    if (i.top != i.bottom && Ia(e, i))
      return { node: n, offset: s + (e.left >= (i.left + i.right) / 2 ? 1 : 0) };
  }
  return { node: n, offset: 0 };
}
function Ia(n, e) {
  return n.left >= e.left - 1 && n.left <= e.right + 1 && n.top >= e.top - 1 && n.top <= e.bottom + 1;
}
function E6(n, e) {
  let t = n.parentNode;
  return t && /^li$/i.test(t.nodeName) && e.left < n.getBoundingClientRect().left ? t : n;
}
function S6(n, e, t) {
  let { node: r, offset: s } = Uf(e, t), i = -1;
  if (r.nodeType == 1 && !r.firstChild) {
    let o = r.getBoundingClientRect();
    i = o.left != o.right && t.left > (o.left + o.right) / 2 ? 1 : -1;
  }
  return n.docView.posFromDOM(r, s, i);
}
function A6(n, e, t, r) {
  let s = -1;
  for (let i = e, o = !1; i != n.dom; ) {
    let a = n.docView.nearestDesc(i, !0);
    if (!a)
      return null;
    if (a.dom.nodeType == 1 && (a.node.isBlock && a.parent && !o || !a.contentDOM)) {
      let l = a.dom.getBoundingClientRect();
      if (a.node.isBlock && a.parent && !o && (o = !0, l.left > r.left || l.top > r.top ? s = a.posBefore : (l.right < r.left || l.bottom < r.top) && (s = a.posAfter)), !a.contentDOM && s < 0 && !a.node.isText)
        return (a.node.isBlock ? r.top < (l.top + l.bottom) / 2 : r.left < (l.left + l.right) / 2) ? a.posBefore : a.posAfter;
    }
    i = a.dom.parentNode;
  }
  return s > -1 ? s : n.docView.posFromDOM(e, t, -1);
}
function Bf(n, e, t) {
  let r = n.childNodes.length;
  if (r && t.top < t.bottom)
    for (let s = Math.max(0, Math.min(r - 1, Math.floor(r * (e.top - t.top) / (t.bottom - t.top)) - 2)), i = s; ; ) {
      let o = n.childNodes[i];
      if (o.nodeType == 1) {
        let a = o.getClientRects();
        for (let l = 0; l < a.length; l++) {
          let c = a[l];
          if (Ia(e, c))
            return Bf(o, e, c);
        }
      }
      if ((i = (i + 1) % r) == s)
        break;
    }
  return n;
}
function O6(n, e) {
  let t = n.dom.ownerDocument, r, s = 0, i = b6(t, e.left, e.top);
  i && ({ node: r, offset: s } = i);
  let o = (n.root.elementFromPoint ? n.root : t).elementFromPoint(e.left, e.top), a;
  if (!o || !n.dom.contains(o.nodeType != 1 ? o.parentNode : o)) {
    let c = n.dom.getBoundingClientRect();
    if (!Ia(e, c) || (o = Bf(n.dom, e, c), !o))
      return null;
  }
  if (tt)
    for (let c = o; r && c; c = is(c))
      c.draggable && (r = void 0);
  if (o = E6(o, e), r) {
    if (At && r.nodeType == 1 && (s = Math.min(s, r.childNodes.length), s < r.childNodes.length)) {
      let d = r.childNodes[s], f;
      d.nodeName == "IMG" && (f = d.getBoundingClientRect()).right <= e.left && f.bottom > e.top && s++;
    }
    let c;
    Os && s && r.nodeType == 1 && (c = r.childNodes[s - 1]).nodeType == 1 && c.contentEditable == "false" && c.getBoundingClientRect().top >= e.top && s--, r == n.dom && s == r.childNodes.length - 1 && r.lastChild.nodeType == 1 && e.top > r.lastChild.getBoundingClientRect().bottom ? a = n.state.doc.content.size : (s == 0 || r.nodeType != 1 || r.childNodes[s - 1].nodeName != "BR") && (a = A6(n, r, s, e));
  }
  a == null && (a = S6(n, o, e));
  let l = n.docView.nearestDesc(o, !0);
  return { pos: a, inside: l ? l.posAtStart - l.border : -1 };
}
function Jc(n) {
  return n.top < n.bottom || n.left < n.right;
}
function ln(n, e) {
  let t = n.getClientRects();
  if (t.length) {
    let r = t[e < 0 ? 0 : t.length - 1];
    if (Jc(r))
      return r;
  }
  return Array.prototype.find.call(t, Jc) || n.getBoundingClientRect();
}
const T6 = /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac]/;
function Wf(n, e, t) {
  let { node: r, offset: s, atom: i } = n.docView.domFromPos(e, t < 0 ? -1 : 1), o = Os || At;
  if (r.nodeType == 3)
    if (o && (T6.test(r.nodeValue) || (t < 0 ? !s : s == r.nodeValue.length))) {
      let l = ln(Jt(r, s, s), t);
      if (At && s && /\s/.test(r.nodeValue[s - 1]) && s < r.nodeValue.length) {
        let c = ln(Jt(r, s - 1, s - 1), -1);
        if (c.top == l.top) {
          let d = ln(Jt(r, s, s + 1), -1);
          if (d.top != l.top)
            return Fr(d, d.left < c.left);
        }
      }
      return l;
    } else {
      let l = s, c = s, d = t < 0 ? 1 : -1;
      return t < 0 && !s ? (c++, d = -1) : t >= 0 && s == r.nodeValue.length ? (l--, d = 1) : t < 0 ? l-- : c++, Fr(ln(Jt(r, l, c), d), d < 0);
    }
  if (!n.state.doc.resolve(e - (i || 0)).parent.inlineContent) {
    if (i == null && s && (t < 0 || s == Lt(r))) {
      let l = r.childNodes[s - 1];
      if (l.nodeType == 1)
        return po(l.getBoundingClientRect(), !1);
    }
    if (i == null && s < Lt(r)) {
      let l = r.childNodes[s];
      if (l.nodeType == 1)
        return po(l.getBoundingClientRect(), !0);
    }
    return po(r.getBoundingClientRect(), t >= 0);
  }
  if (i == null && s && (t < 0 || s == Lt(r))) {
    let l = r.childNodes[s - 1], c = l.nodeType == 3 ? Jt(l, Lt(l) - (o ? 0 : 1)) : l.nodeType == 1 && (l.nodeName != "BR" || !l.nextSibling) ? l : null;
    if (c)
      return Fr(ln(c, 1), !1);
  }
  if (i == null && s < Lt(r)) {
    let l = r.childNodes[s];
    for (; l.pmViewDesc && l.pmViewDesc.ignoreForCoords; )
      l = l.nextSibling;
    let c = l ? l.nodeType == 3 ? Jt(l, 0, o ? 0 : 1) : l.nodeType == 1 ? l : null : null;
    if (c)
      return Fr(ln(c, -1), !0);
  }
  return Fr(ln(r.nodeType == 3 ? Jt(r) : r, -t), t >= 0);
}
function Fr(n, e) {
  if (n.width == 0)
    return n;
  let t = e ? n.left : n.right;
  return { top: n.top, bottom: n.bottom, left: t, right: t };
}
function po(n, e) {
  if (n.height == 0)
    return n;
  let t = e ? n.top : n.bottom;
  return { top: t, bottom: t, left: n.left, right: n.right };
}
function qf(n, e, t) {
  let r = n.state, s = n.root.activeElement;
  r != e && n.updateState(e), s != n.dom && n.focus();
  try {
    return t();
  } finally {
    r != e && n.updateState(r), s != n.dom && s && s.focus();
  }
}
function _6(n, e, t) {
  let r = e.selection, s = t == "up" ? r.$from : r.$to;
  return qf(n, e, () => {
    let { node: i } = n.docView.domFromPos(s.pos, t == "up" ? -1 : 1);
    for (; ; ) {
      let a = n.docView.nearestDesc(i, !0);
      if (!a)
        break;
      if (a.node.isBlock) {
        i = a.contentDOM || a.dom;
        break;
      }
      i = a.dom.parentNode;
    }
    let o = Wf(n, s.pos, 1);
    for (let a = i.firstChild; a; a = a.nextSibling) {
      let l;
      if (a.nodeType == 1)
        l = a.getClientRects();
      else if (a.nodeType == 3)
        l = Jt(a, 0, a.nodeValue.length).getClientRects();
      else
        continue;
      for (let c = 0; c < l.length; c++) {
        let d = l[c];
        if (d.bottom > d.top + 1 && (t == "up" ? o.top - d.top > (d.bottom - o.top) * 2 : d.bottom - o.bottom > (o.bottom - d.top) * 2))
          return !1;
      }
    }
    return !0;
  });
}
const D6 = /[\u0590-\u08ac]/;
function H6(n, e, t) {
  let { $head: r } = e.selection;
  if (!r.parent.isTextblock)
    return !1;
  let s = r.parentOffset, i = !s, o = s == r.parent.content.size, a = n.domSelection();
  return !D6.test(r.parent.textContent) || !a.modify ? t == "left" || t == "backward" ? i : o : qf(n, e, () => {
    let { focusNode: l, focusOffset: c, anchorNode: d, anchorOffset: f } = n.domSelectionRange(), m = a.caretBidiLevel;
    a.modify("move", t, "character");
    let h = r.depth ? n.docView.domAfterPos(r.before()) : n.dom, { focusNode: p, focusOffset: y } = n.domSelectionRange(), v = p && !h.contains(p.nodeType == 1 ? p : p.parentNode) || l == p && c == y;
    try {
      a.collapse(d, f), l && (l != d || c != f) && a.extend && a.extend(l, c);
    } catch {
    }
    return m != null && (a.caretBidiLevel = m), v;
  });
}
let Gc = null, Yc = null, Qc = !1;
function I6(n, e, t) {
  return Gc == e && Yc == t ? Qc : (Gc = e, Yc = t, Qc = t == "up" || t == "down" ? _6(n, e, t) : H6(n, e, t));
}
const xt = 0, Xc = 1, Ln = 2, zt = 3;
class Ts {
  constructor(e, t, r, s) {
    this.parent = e, this.children = t, this.dom = r, this.contentDOM = s, this.dirty = xt, r.pmViewDesc = this;
  }
  // Used to check whether a given description corresponds to a
  // widget/mark/node.
  matchesWidget(e) {
    return !1;
  }
  matchesMark(e) {
    return !1;
  }
  matchesNode(e, t, r) {
    return !1;
  }
  matchesHack(e) {
    return !1;
  }
  // When parsing in-editor content (in domchange.js), we allow
  // descriptions to determine the parse rules that should be used to
  // parse them.
  parseRule() {
    return null;
  }
  // Used by the editor's event handler to ignore events that come
  // from certain descs.
  stopEvent(e) {
    return !1;
  }
  // The size of the content represented by this desc.
  get size() {
    let e = 0;
    for (let t = 0; t < this.children.length; t++)
      e += this.children[t].size;
    return e;
  }
  // For block nodes, this represents the space taken up by their
  // start/end tokens.
  get border() {
    return 0;
  }
  destroy() {
    this.parent = void 0, this.dom.pmViewDesc == this && (this.dom.pmViewDesc = void 0);
    for (let e = 0; e < this.children.length; e++)
      this.children[e].destroy();
  }
  posBeforeChild(e) {
    for (let t = 0, r = this.posAtStart; ; t++) {
      let s = this.children[t];
      if (s == e)
        return r;
      r += s.size;
    }
  }
  get posBefore() {
    return this.parent.posBeforeChild(this);
  }
  get posAtStart() {
    return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;
  }
  get posAfter() {
    return this.posBefore + this.size;
  }
  get posAtEnd() {
    return this.posAtStart + this.size - 2 * this.border;
  }
  localPosFromDOM(e, t, r) {
    if (this.contentDOM && this.contentDOM.contains(e.nodeType == 1 ? e : e.parentNode))
      if (r < 0) {
        let i, o;
        if (e == this.contentDOM)
          i = e.childNodes[t - 1];
        else {
          for (; e.parentNode != this.contentDOM; )
            e = e.parentNode;
          i = e.previousSibling;
        }
        for (; i && !((o = i.pmViewDesc) && o.parent == this); )
          i = i.previousSibling;
        return i ? this.posBeforeChild(o) + o.size : this.posAtStart;
      } else {
        let i, o;
        if (e == this.contentDOM)
          i = e.childNodes[t];
        else {
          for (; e.parentNode != this.contentDOM; )
            e = e.parentNode;
          i = e.nextSibling;
        }
        for (; i && !((o = i.pmViewDesc) && o.parent == this); )
          i = i.nextSibling;
        return i ? this.posBeforeChild(o) : this.posAtEnd;
      }
    let s;
    if (e == this.dom && this.contentDOM)
      s = t > et(this.contentDOM);
    else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM))
      s = e.compareDocumentPosition(this.contentDOM) & 2;
    else if (this.dom.firstChild) {
      if (t == 0)
        for (let i = e; ; i = i.parentNode) {
          if (i == this.dom) {
            s = !1;
            break;
          }
          if (i.previousSibling)
            break;
        }
      if (s == null && t == e.childNodes.length)
        for (let i = e; ; i = i.parentNode) {
          if (i == this.dom) {
            s = !0;
            break;
          }
          if (i.nextSibling)
            break;
        }
    }
    return s ?? r > 0 ? this.posAtEnd : this.posAtStart;
  }
  nearestDesc(e, t = !1) {
    for (let r = !0, s = e; s; s = s.parentNode) {
      let i = this.getDesc(s), o;
      if (i && (!t || i.node))
        if (r && (o = i.nodeDOM) && !(o.nodeType == 1 ? o.contains(e.nodeType == 1 ? e : e.parentNode) : o == e))
          r = !1;
        else
          return i;
    }
  }
  getDesc(e) {
    let t = e.pmViewDesc;
    for (let r = t; r; r = r.parent)
      if (r == this)
        return t;
  }
  posFromDOM(e, t, r) {
    for (let s = e; s; s = s.parentNode) {
      let i = this.getDesc(s);
      if (i)
        return i.localPosFromDOM(e, t, r);
    }
    return -1;
  }
  // Find the desc for the node after the given pos, if any. (When a
  // parent node overrode rendering, there might not be one.)
  descAt(e) {
    for (let t = 0, r = 0; t < this.children.length; t++) {
      let s = this.children[t], i = r + s.size;
      if (r == e && i != r) {
        for (; !s.border && s.children.length; )
          s = s.children[0];
        return s;
      }
      if (e < i)
        return s.descAt(e - r - s.border);
      r = i;
    }
  }
  domFromPos(e, t) {
    if (!this.contentDOM)
      return { node: this.dom, offset: 0, atom: e + 1 };
    let r = 0, s = 0;
    for (let i = 0; r < this.children.length; r++) {
      let o = this.children[r], a = i + o.size;
      if (a > e || o instanceof Jf) {
        s = e - i;
        break;
      }
      i = a;
    }
    if (s)
      return this.children[r].domFromPos(s - this.children[r].border, t);
    for (let i; r && !(i = this.children[r - 1]).size && i instanceof Kf && i.side >= 0; r--)
      ;
    if (t <= 0) {
      let i, o = !0;
      for (; i = r ? this.children[r - 1] : null, !(!i || i.dom.parentNode == this.contentDOM); r--, o = !1)
        ;
      return i && t && o && !i.border && !i.domAtom ? i.domFromPos(i.size, t) : { node: this.contentDOM, offset: i ? et(i.dom) + 1 : 0 };
    } else {
      let i, o = !0;
      for (; i = r < this.children.length ? this.children[r] : null, !(!i || i.dom.parentNode == this.contentDOM); r++, o = !1)
        ;
      return i && o && !i.border && !i.domAtom ? i.domFromPos(0, t) : { node: this.contentDOM, offset: i ? et(i.dom) : this.contentDOM.childNodes.length };
    }
  }
  // Used to find a DOM range in a single parent for a given changed
  // range.
  parseRange(e, t, r = 0) {
    if (this.children.length == 0)
      return { node: this.contentDOM, from: e, to: t, fromOffset: 0, toOffset: this.contentDOM.childNodes.length };
    let s = -1, i = -1;
    for (let o = r, a = 0; ; a++) {
      let l = this.children[a], c = o + l.size;
      if (s == -1 && e <= c) {
        let d = o + l.border;
        if (e >= d && t <= c - l.border && l.node && l.contentDOM && this.contentDOM.contains(l.contentDOM))
          return l.parseRange(e, t, d);
        e = o;
        for (let f = a; f > 0; f--) {
          let m = this.children[f - 1];
          if (m.size && m.dom.parentNode == this.contentDOM && !m.emptyChildAt(1)) {
            s = et(m.dom) + 1;
            break;
          }
          e -= m.size;
        }
        s == -1 && (s = 0);
      }
      if (s > -1 && (c > t || a == this.children.length - 1)) {
        t = c;
        for (let d = a + 1; d < this.children.length; d++) {
          let f = this.children[d];
          if (f.size && f.dom.parentNode == this.contentDOM && !f.emptyChildAt(-1)) {
            i = et(f.dom);
            break;
          }
          t += f.size;
        }
        i == -1 && (i = this.contentDOM.childNodes.length);
        break;
      }
      o = c;
    }
    return { node: this.contentDOM, from: e, to: t, fromOffset: s, toOffset: i };
  }
  emptyChildAt(e) {
    if (this.border || !this.contentDOM || !this.children.length)
      return !1;
    let t = this.children[e < 0 ? 0 : this.children.length - 1];
    return t.size == 0 || t.emptyChildAt(e);
  }
  domAfterPos(e) {
    let { node: t, offset: r } = this.domFromPos(e, 0);
    if (t.nodeType != 1 || r == t.childNodes.length)
      throw new RangeError("No node after pos " + e);
    return t.childNodes[r];
  }
  // View descs are responsible for setting any selection that falls
  // entirely inside of them, so that custom implementations can do
  // custom things with the selection. Note that this falls apart when
  // a selection starts in such a node and ends in another, in which
  // case we just use whatever domFromPos produces as a best effort.
  setSelection(e, t, r, s = !1) {
    let i = Math.min(e, t), o = Math.max(e, t);
    for (let m = 0, h = 0; m < this.children.length; m++) {
      let p = this.children[m], y = h + p.size;
      if (i > h && o < y)
        return p.setSelection(e - h - p.border, t - h - p.border, r, s);
      h = y;
    }
    let a = this.domFromPos(e, e ? -1 : 1), l = t == e ? a : this.domFromPos(t, t ? -1 : 1), c = r.getSelection(), d = !1;
    if ((At || tt) && e == t) {
      let { node: m, offset: h } = a;
      if (m.nodeType == 3) {
        if (d = !!(h && m.nodeValue[h - 1] == `
`), d && h == m.nodeValue.length)
          for (let p = m, y; p; p = p.parentNode) {
            if (y = p.nextSibling) {
              y.nodeName == "BR" && (a = l = { node: y.parentNode, offset: et(y) + 1 });
              break;
            }
            let v = p.pmViewDesc;
            if (v && v.node && v.node.isBlock)
              break;
          }
      } else {
        let p = m.childNodes[h - 1];
        d = p && (p.nodeName == "BR" || p.contentEditable == "false");
      }
    }
    if (At && c.focusNode && c.focusNode != l.node && c.focusNode.nodeType == 1) {
      let m = c.focusNode.childNodes[c.focusOffset];
      m && m.contentEditable == "false" && (s = !0);
    }
    if (!(s || d && tt) && Gn(a.node, a.offset, c.anchorNode, c.anchorOffset) && Gn(l.node, l.offset, c.focusNode, c.focusOffset))
      return;
    let f = !1;
    if ((c.extend || e == t) && !d) {
      c.collapse(a.node, a.offset);
      try {
        e != t && c.extend(l.node, l.offset), f = !0;
      } catch {
      }
    }
    if (!f) {
      if (e > t) {
        let h = a;
        a = l, l = h;
      }
      let m = document.createRange();
      m.setEnd(l.node, l.offset), m.setStart(a.node, a.offset), c.removeAllRanges(), c.addRange(m);
    }
  }
  ignoreMutation(e) {
    return !this.contentDOM && e.type != "selection";
  }
  get contentLost() {
    return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);
  }
  // Remove a subtree of the element tree that has been touched
  // by a DOM change, so that the next update will redraw it.
  markDirty(e, t) {
    for (let r = 0, s = 0; s < this.children.length; s++) {
      let i = this.children[s], o = r + i.size;
      if (r == o ? e <= o && t >= r : e < o && t > r) {
        let a = r + i.border, l = o - i.border;
        if (e >= a && t <= l) {
          this.dirty = e == r || t == o ? Ln : Xc, e == a && t == l && (i.contentLost || i.dom.parentNode != this.contentDOM) ? i.dirty = zt : i.markDirty(e - a, t - a);
          return;
        } else
          i.dirty = i.dom == i.contentDOM && i.dom.parentNode == this.contentDOM && !i.children.length ? Ln : zt;
      }
      r = o;
    }
    this.dirty = Ln;
  }
  markParentsDirty() {
    let e = 1;
    for (let t = this.parent; t; t = t.parent, e++) {
      let r = e == 1 ? Ln : Xc;
      t.dirty < r && (t.dirty = r);
    }
  }
  get domAtom() {
    return !1;
  }
  get ignoreForCoords() {
    return !1;
  }
}
class Kf extends Ts {
  constructor(e, t, r, s) {
    let i, o = t.type.toDOM;
    if (typeof o == "function" && (o = o(r, () => {
      if (!i)
        return s;
      if (i.parent)
        return i.parent.posBeforeChild(i);
    })), !t.type.spec.raw) {
      if (o.nodeType != 1) {
        let a = document.createElement("span");
        a.appendChild(o), o = a;
      }
      o.contentEditable = "false", o.classList.add("ProseMirror-widget");
    }
    super(e, [], o, null), this.widget = t, this.widget = t, i = this;
  }
  matchesWidget(e) {
    return this.dirty == xt && e.type.eq(this.widget.type);
  }
  parseRule() {
    return { ignore: !0 };
  }
  stopEvent(e) {
    let t = this.widget.spec.stopEvent;
    return t ? t(e) : !1;
  }
  ignoreMutation(e) {
    return e.type != "selection" || this.widget.spec.ignoreSelection;
  }
  destroy() {
    this.widget.type.destroy(this.dom), super.destroy();
  }
  get domAtom() {
    return !0;
  }
  get side() {
    return this.widget.type.side;
  }
}
class P6 extends Ts {
  constructor(e, t, r, s) {
    super(e, [], t, null), this.textDOM = r, this.text = s;
  }
  get size() {
    return this.text.length;
  }
  localPosFromDOM(e, t) {
    return e != this.textDOM ? this.posAtStart + (t ? this.size : 0) : this.posAtStart + t;
  }
  domFromPos(e) {
    return { node: this.textDOM, offset: e };
  }
  ignoreMutation(e) {
    return e.type === "characterData" && e.target.nodeValue == e.oldValue;
  }
}
class Yn extends Ts {
  constructor(e, t, r, s) {
    super(e, [], r, s), this.mark = t;
  }
  static create(e, t, r, s) {
    let i = s.nodeViews[t.type.name], o = i && i(t, s, r);
    return (!o || !o.dom) && (o = Zt.renderSpec(document, t.type.spec.toDOM(t, r))), new Yn(e, t, o.dom, o.contentDOM || o.dom);
  }
  parseRule() {
    return this.dirty & zt || this.mark.type.spec.reparseInView ? null : { mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM };
  }
  matchesMark(e) {
    return this.dirty != zt && this.mark.eq(e);
  }
  markDirty(e, t) {
    if (super.markDirty(e, t), this.dirty != xt) {
      let r = this.parent;
      for (; !r.node; )
        r = r.parent;
      r.dirty < this.dirty && (r.dirty = this.dirty), this.dirty = xt;
    }
  }
  slice(e, t, r) {
    let s = Yn.create(this.parent, this.mark, !0, r), i = this.children, o = this.size;
    t < o && (i = ea(i, t, o, r)), e > 0 && (i = ea(i, 0, e, r));
    for (let a = 0; a < i.length; a++)
      i[a].parent = s;
    return s.children = i, s;
  }
}
class vn extends Ts {
  constructor(e, t, r, s, i, o, a, l, c) {
    super(e, [], i, o), this.node = t, this.outerDeco = r, this.innerDeco = s, this.nodeDOM = a;
  }
  // By default, a node is rendered using the `toDOM` method from the
  // node type spec. But client code can use the `nodeViews` spec to
  // supply a custom node view, which can influence various aspects of
  // the way the node works.
  //
  // (Using subclassing for this was intentionally decided against,
  // since it'd require exposing a whole slew of finicky
  // implementation details to the user code that they probably will
  // never need.)
  static create(e, t, r, s, i, o) {
    let a = i.nodeViews[t.type.name], l, c = a && a(t, i, () => {
      if (!l)
        return o;
      if (l.parent)
        return l.parent.posBeforeChild(l);
    }, r, s), d = c && c.dom, f = c && c.contentDOM;
    if (t.isText) {
      if (!d)
        d = document.createTextNode(t.text);
      else if (d.nodeType != 3)
        throw new RangeError("Text must be rendered as a DOM text node");
    } else
      d || ({ dom: d, contentDOM: f } = Zt.renderSpec(document, t.type.spec.toDOM(t)));
    !f && !t.isText && d.nodeName != "BR" && (d.hasAttribute("contenteditable") || (d.contentEditable = "false"), t.type.spec.draggable && (d.draggable = !0));
    let m = d;
    return d = Qf(d, r, t), c ? l = new L6(e, t, r, s, d, f || null, m, c, i, o + 1) : t.isText ? new Fi(e, t, r, s, d, m, i) : new vn(e, t, r, s, d, f || null, m, i, o + 1);
  }
  parseRule() {
    if (this.node.type.spec.reparseInView)
      return null;
    let e = { node: this.node.type.name, attrs: this.node.attrs };
    if (this.node.type.whitespace == "pre" && (e.preserveWhitespace = "full"), !this.contentDOM)
      e.getContent = () => this.node.content;
    else if (!this.contentLost)
      e.contentElement = this.contentDOM;
    else {
      for (let t = this.children.length - 1; t >= 0; t--) {
        let r = this.children[t];
        if (this.dom.contains(r.dom.parentNode)) {
          e.contentElement = r.dom.parentNode;
          break;
        }
      }
      e.contentElement || (e.getContent = () => D.empty);
    }
    return e;
  }
  matchesNode(e, t, r) {
    return this.dirty == xt && e.eq(this.node) && Xo(t, this.outerDeco) && r.eq(this.innerDeco);
  }
  get size() {
    return this.node.nodeSize;
  }
  get border() {
    return this.node.isLeaf ? 0 : 1;
  }
  // Syncs `this.children` to match `this.node.content` and the local
  // decorations, possibly introducing nesting for marks. Then, in a
  // separate step, syncs the DOM inside `this.contentDOM` to
  // `this.children`.
  updateChildren(e, t) {
    let r = this.node.inlineContent, s = t, i = e.composing ? this.localCompositionInfo(e, t) : null, o = i && i.pos > -1 ? i : null, a = i && i.pos < 0, l = new $6(this, o && o.node, e);
    F6(this.node, this.innerDeco, (c, d, f) => {
      c.spec.marks ? l.syncToMarks(c.spec.marks, r, e) : c.type.side >= 0 && !f && l.syncToMarks(d == this.node.childCount ? ye.none : this.node.child(d).marks, r, e), l.placeWidget(c, e, s);
    }, (c, d, f, m) => {
      l.syncToMarks(c.marks, r, e);
      let h;
      l.findNodeMatch(c, d, f, m) || a && e.state.selection.from > s && e.state.selection.to < s + c.nodeSize && (h = l.findIndexWithChild(i.node)) > -1 && l.updateNodeAt(c, d, f, h, e) || l.updateNextNode(c, d, f, e, m, s) || l.addNode(c, d, f, e, s), s += c.nodeSize;
    }), l.syncToMarks([], r, e), this.node.isTextblock && l.addTextblockHacks(), l.destroyRest(), (l.changed || this.dirty == Ln) && (o && this.protectLocalComposition(e, o), Gf(this.contentDOM, this.children, e), Or && j6(this.dom));
  }
  localCompositionInfo(e, t) {
    let { from: r, to: s } = e.state.selection;
    if (!(e.state.selection instanceof oe) || r < t || s > t + this.node.content.size)
      return null;
    let i = e.domSelectionRange(), o = U6(i.focusNode, i.focusOffset);
    if (!o || !this.dom.contains(o.parentNode))
      return null;
    if (this.node.inlineContent) {
      let a = o.nodeValue, l = B6(this.node.content, a, r - t, s - t);
      return l < 0 ? null : { node: o, pos: l, text: a };
    } else
      return { node: o, pos: -1, text: "" };
  }
  protectLocalComposition(e, { node: t, pos: r, text: s }) {
    if (this.getDesc(t))
      return;
    let i = t;
    for (; i.parentNode != this.contentDOM; i = i.parentNode) {
      for (; i.previousSibling; )
        i.parentNode.removeChild(i.previousSibling);
      for (; i.nextSibling; )
        i.parentNode.removeChild(i.nextSibling);
      i.pmViewDesc && (i.pmViewDesc = void 0);
    }
    let o = new P6(this, i, t, s);
    e.input.compositionNodes.push(o), this.children = ea(this.children, r, r + s.length, e, o);
  }
  // If this desc must be updated to match the given node decoration,
  // do so and return true.
  update(e, t, r, s) {
    return this.dirty == zt || !e.sameMarkup(this.node) ? !1 : (this.updateInner(e, t, r, s), !0);
  }
  updateInner(e, t, r, s) {
    this.updateOuterDeco(t), this.node = e, this.innerDeco = r, this.contentDOM && this.updateChildren(s, this.posAtStart), this.dirty = xt;
  }
  updateOuterDeco(e) {
    if (Xo(e, this.outerDeco))
      return;
    let t = this.nodeDOM.nodeType != 1, r = this.dom;
    this.dom = Yf(this.dom, this.nodeDOM, Qo(this.outerDeco, this.node, t), Qo(e, this.node, t)), this.dom != r && (r.pmViewDesc = void 0, this.dom.pmViewDesc = this), this.outerDeco = e;
  }
  // Mark this node as being the selected node.
  selectNode() {
    this.nodeDOM.nodeType == 1 && this.nodeDOM.classList.add("ProseMirror-selectednode"), (this.contentDOM || !this.node.type.spec.draggable) && (this.dom.draggable = !0);
  }
  // Remove selected node marking from this node.
  deselectNode() {
    this.nodeDOM.nodeType == 1 && this.nodeDOM.classList.remove("ProseMirror-selectednode"), (this.contentDOM || !this.node.type.spec.draggable) && this.dom.removeAttribute("draggable");
  }
  get domAtom() {
    return this.node.isAtom;
  }
}
function eu(n, e, t, r, s) {
  Qf(r, e, n);
  let i = new vn(void 0, n, e, t, r, r, r, s, 0);
  return i.contentDOM && i.updateChildren(s, 0), i;
}
class Fi extends vn {
  constructor(e, t, r, s, i, o, a) {
    super(e, t, r, s, i, null, o, a, 0);
  }
  parseRule() {
    let e = this.nodeDOM.parentNode;
    for (; e && e != this.dom && !e.pmIsDeco; )
      e = e.parentNode;
    return { skip: e || !0 };
  }
  update(e, t, r, s) {
    return this.dirty == zt || this.dirty != xt && !this.inParent() || !e.sameMarkup(this.node) ? !1 : (this.updateOuterDeco(t), (this.dirty != xt || e.text != this.node.text) && e.text != this.nodeDOM.nodeValue && (this.nodeDOM.nodeValue = e.text, s.trackWrites == this.nodeDOM && (s.trackWrites = null)), this.node = e, this.dirty = xt, !0);
  }
  inParent() {
    let e = this.parent.contentDOM;
    for (let t = this.nodeDOM; t; t = t.parentNode)
      if (t == e)
        return !0;
    return !1;
  }
  domFromPos(e) {
    return { node: this.nodeDOM, offset: e };
  }
  localPosFromDOM(e, t, r) {
    return e == this.nodeDOM ? this.posAtStart + Math.min(t, this.node.text.length) : super.localPosFromDOM(e, t, r);
  }
  ignoreMutation(e) {
    return e.type != "characterData" && e.type != "selection";
  }
  slice(e, t, r) {
    let s = this.node.cut(e, t), i = document.createTextNode(s.text);
    return new Fi(this.parent, s, this.outerDeco, this.innerDeco, i, i, r);
  }
  markDirty(e, t) {
    super.markDirty(e, t), this.dom != this.nodeDOM && (e == 0 || t == this.nodeDOM.nodeValue.length) && (this.dirty = zt);
  }
  get domAtom() {
    return !1;
  }
}
class Jf extends Ts {
  parseRule() {
    return { ignore: !0 };
  }
  matchesHack(e) {
    return this.dirty == xt && this.dom.nodeName == e;
  }
  get domAtom() {
    return !0;
  }
  get ignoreForCoords() {
    return this.dom.nodeName == "IMG";
  }
}
class L6 extends vn {
  constructor(e, t, r, s, i, o, a, l, c, d) {
    super(e, t, r, s, i, o, a, c, d), this.spec = l;
  }
  // A custom `update` method gets to decide whether the update goes
  // through. If it does, and there's a `contentDOM` node, our logic
  // updates the children.
  update(e, t, r, s) {
    if (this.dirty == zt)
      return !1;
    if (this.spec.update) {
      let i = this.spec.update(e, t, r);
      return i && this.updateInner(e, t, r, s), i;
    } else
      return !this.contentDOM && !e.isLeaf ? !1 : super.update(e, t, r, s);
  }
  selectNode() {
    this.spec.selectNode ? this.spec.selectNode() : super.selectNode();
  }
  deselectNode() {
    this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode();
  }
  setSelection(e, t, r, s) {
    this.spec.setSelection ? this.spec.setSelection(e, t, r) : super.setSelection(e, t, r, s);
  }
  destroy() {
    this.spec.destroy && this.spec.destroy(), super.destroy();
  }
  stopEvent(e) {
    return this.spec.stopEvent ? this.spec.stopEvent(e) : !1;
  }
  ignoreMutation(e) {
    return this.spec.ignoreMutation ? this.spec.ignoreMutation(e) : super.ignoreMutation(e);
  }
}
function Gf(n, e, t) {
  let r = n.firstChild, s = !1;
  for (let i = 0; i < e.length; i++) {
    let o = e[i], a = o.dom;
    if (a.parentNode == n) {
      for (; a != r; )
        r = tu(r), s = !0;
      r = r.nextSibling;
    } else
      s = !0, n.insertBefore(a, r);
    if (o instanceof Yn) {
      let l = r ? r.previousSibling : n.lastChild;
      Gf(o.contentDOM, o.children, t), r = l ? l.nextSibling : n.firstChild;
    }
  }
  for (; r; )
    r = tu(r), s = !0;
  s && t.trackWrites == n && (t.trackWrites = null);
}
const Gr = function(n) {
  n && (this.nodeName = n);
};
Gr.prototype = /* @__PURE__ */ Object.create(null);
const Zn = [new Gr()];
function Qo(n, e, t) {
  if (n.length == 0)
    return Zn;
  let r = t ? Zn[0] : new Gr(), s = [r];
  for (let i = 0; i < n.length; i++) {
    let o = n[i].type.attrs;
    if (o) {
      o.nodeName && s.push(r = new Gr(o.nodeName));
      for (let a in o) {
        let l = o[a];
        l != null && (t && s.length == 1 && s.push(r = new Gr(e.isInline ? "span" : "div")), a == "class" ? r.class = (r.class ? r.class + " " : "") + l : a == "style" ? r.style = (r.style ? r.style + ";" : "") + l : a != "nodeName" && (r[a] = l));
      }
    }
  }
  return s;
}
function Yf(n, e, t, r) {
  if (t == Zn && r == Zn)
    return e;
  let s = e;
  for (let i = 0; i < r.length; i++) {
    let o = r[i], a = t[i];
    if (i) {
      let l;
      a && a.nodeName == o.nodeName && s != n && (l = s.parentNode) && l.nodeName.toLowerCase() == o.nodeName || (l = document.createElement(o.nodeName), l.pmIsDeco = !0, l.appendChild(s), a = Zn[0]), s = l;
    }
    Z6(s, a || Zn[0], o);
  }
  return s;
}
function Z6(n, e, t) {
  for (let r in e)
    r != "class" && r != "style" && r != "nodeName" && !(r in t) && n.removeAttribute(r);
  for (let r in t)
    r != "class" && r != "style" && r != "nodeName" && t[r] != e[r] && n.setAttribute(r, t[r]);
  if (e.class != t.class) {
    let r = e.class ? e.class.split(" ").filter(Boolean) : [], s = t.class ? t.class.split(" ").filter(Boolean) : [];
    for (let i = 0; i < r.length; i++)
      s.indexOf(r[i]) == -1 && n.classList.remove(r[i]);
    for (let i = 0; i < s.length; i++)
      r.indexOf(s[i]) == -1 && n.classList.add(s[i]);
    n.classList.length == 0 && n.removeAttribute("class");
  }
  if (e.style != t.style) {
    if (e.style) {
      let r = /\s*([\w\-\xa1-\uffff]+)\s*:(?:"(?:\\.|[^"])*"|'(?:\\.|[^'])*'|\(.*?\)|[^;])*/g, s;
      for (; s = r.exec(e.style); )
        n.style.removeProperty(s[1]);
    }
    t.style && (n.style.cssText += t.style);
  }
}
function Qf(n, e, t) {
  return Yf(n, n, Zn, Qo(e, t, n.nodeType != 1));
}
function Xo(n, e) {
  if (n.length != e.length)
    return !1;
  for (let t = 0; t < n.length; t++)
    if (!n[t].type.eq(e[t].type))
      return !1;
  return !0;
}
function tu(n) {
  let e = n.nextSibling;
  return n.parentNode.removeChild(n), e;
}
class $6 {
  constructor(e, t, r) {
    this.lock = t, this.view = r, this.index = 0, this.stack = [], this.changed = !1, this.top = e, this.preMatch = V6(e.node.content, e);
  }
  // Destroy and remove the children between the given indices in
  // `this.top`.
  destroyBetween(e, t) {
    if (e != t) {
      for (let r = e; r < t; r++)
        this.top.children[r].destroy();
      this.top.children.splice(e, t - e), this.changed = !0;
    }
  }
  // Destroy all remaining children in `this.top`.
  destroyRest() {
    this.destroyBetween(this.index, this.top.children.length);
  }
  // Sync the current stack of mark descs with the given array of
  // marks, reusing existing mark descs when possible.
  syncToMarks(e, t, r) {
    let s = 0, i = this.stack.length >> 1, o = Math.min(i, e.length);
    for (; s < o && (s == i - 1 ? this.top : this.stack[s + 1 << 1]).matchesMark(e[s]) && e[s].type.spec.spanning !== !1; )
      s++;
    for (; s < i; )
      this.destroyRest(), this.top.dirty = xt, this.index = this.stack.pop(), this.top = this.stack.pop(), i--;
    for (; i < e.length; ) {
      this.stack.push(this.top, this.index + 1);
      let a = -1;
      for (let l = this.index; l < Math.min(this.index + 3, this.top.children.length); l++) {
        let c = this.top.children[l];
        if (c.matchesMark(e[i]) && !this.isLocked(c.dom)) {
          a = l;
          break;
        }
      }
      if (a > -1)
        a > this.index && (this.changed = !0, this.destroyBetween(this.index, a)), this.top = this.top.children[this.index];
      else {
        let l = Yn.create(this.top, e[i], t, r);
        this.top.children.splice(this.index, 0, l), this.top = l, this.changed = !0;
      }
      this.index = 0, i++;
    }
  }
  // Try to find a node desc matching the given data. Skip over it and
  // return true when successful.
  findNodeMatch(e, t, r, s) {
    let i = -1, o;
    if (s >= this.preMatch.index && (o = this.preMatch.matches[s - this.preMatch.index]).parent == this.top && o.matchesNode(e, t, r))
      i = this.top.children.indexOf(o, this.index);
    else
      for (let a = this.index, l = Math.min(this.top.children.length, a + 5); a < l; a++) {
        let c = this.top.children[a];
        if (c.matchesNode(e, t, r) && !this.preMatch.matched.has(c)) {
          i = a;
          break;
        }
      }
    return i < 0 ? !1 : (this.destroyBetween(this.index, i), this.index++, !0);
  }
  updateNodeAt(e, t, r, s, i) {
    let o = this.top.children[s];
    return o.dirty == zt && o.dom == o.contentDOM && (o.dirty = Ln), o.update(e, t, r, i) ? (this.destroyBetween(this.index, s), this.index++, !0) : !1;
  }
  findIndexWithChild(e) {
    for (; ; ) {
      let t = e.parentNode;
      if (!t)
        return -1;
      if (t == this.top.contentDOM) {
        let r = e.pmViewDesc;
        if (r) {
          for (let s = this.index; s < this.top.children.length; s++)
            if (this.top.children[s] == r)
              return s;
        }
        return -1;
      }
      e = t;
    }
  }
  // Try to update the next node, if any, to the given data. Checks
  // pre-matches to avoid overwriting nodes that could still be used.
  updateNextNode(e, t, r, s, i, o) {
    for (let a = this.index; a < this.top.children.length; a++) {
      let l = this.top.children[a];
      if (l instanceof vn) {
        let c = this.preMatch.matched.get(l);
        if (c != null && c != i)
          return !1;
        let d = l.dom, f, m = this.isLocked(d) && !(e.isText && l.node && l.node.isText && l.nodeDOM.nodeValue == e.text && l.dirty != zt && Xo(t, l.outerDeco));
        if (!m && l.update(e, t, r, s))
          return this.destroyBetween(this.index, a), l.dom != d && (this.changed = !0), this.index++, !0;
        if (!m && (f = this.recreateWrapper(l, e, t, r, s, o)))
          return this.top.children[this.index] = f, f.contentDOM && (f.dirty = Ln, f.updateChildren(s, o + 1), f.dirty = xt), this.changed = !0, this.index++, !0;
        break;
      }
    }
    return !1;
  }
  // When a node with content is replaced by a different node with
  // identical content, move over its children.
  recreateWrapper(e, t, r, s, i, o) {
    if (e.dirty || t.isAtom || !e.children.length || !e.node.content.eq(t.content))
      return null;
    let a = vn.create(this.top, t, r, s, i, o);
    if (a.contentDOM) {
      a.children = e.children, e.children = [];
      for (let l of a.children)
        l.parent = a;
    }
    return e.destroy(), a;
  }
  // Insert the node as a newly created node desc.
  addNode(e, t, r, s, i) {
    let o = vn.create(this.top, e, t, r, s, i);
    o.contentDOM && o.updateChildren(s, i + 1), this.top.children.splice(this.index++, 0, o), this.changed = !0;
  }
  placeWidget(e, t, r) {
    let s = this.index < this.top.children.length ? this.top.children[this.index] : null;
    if (s && s.matchesWidget(e) && (e == s.widget || !s.widget.type.toDOM.parentNode))
      this.index++;
    else {
      let i = new Kf(this.top, e, t, r);
      this.top.children.splice(this.index++, 0, i), this.changed = !0;
    }
  }
  // Make sure a textblock looks and behaves correctly in
  // contentEditable.
  addTextblockHacks() {
    let e = this.top.children[this.index - 1], t = this.top;
    for (; e instanceof Yn; )
      t = e, e = t.children[t.children.length - 1];
    (!e || // Empty textblock
    !(e instanceof Fi) || /\n$/.test(e.node.text) || this.view.requiresGeckoHackNode && /\s$/.test(e.node.text)) && ((tt || Ge) && e && e.dom.contentEditable == "false" && this.addHackNode("IMG", t), this.addHackNode("BR", this.top));
  }
  addHackNode(e, t) {
    if (t == this.top && this.index < t.children.length && t.children[this.index].matchesHack(e))
      this.index++;
    else {
      let r = document.createElement(e);
      e == "IMG" && (r.className = "ProseMirror-separator", r.alt = ""), e == "BR" && (r.className = "ProseMirror-trailingBreak");
      let s = new Jf(this.top, [], r, null);
      t != this.top ? t.children.push(s) : t.children.splice(this.index++, 0, s), this.changed = !0;
    }
  }
  isLocked(e) {
    return this.lock && (e == this.lock || e.nodeType == 1 && e.contains(this.lock.parentNode));
  }
}
function V6(n, e) {
  let t = e, r = t.children.length, s = n.childCount, i = /* @__PURE__ */ new Map(), o = [];
  e:
    for (; s > 0; ) {
      let a;
      for (; ; )
        if (r) {
          let c = t.children[r - 1];
          if (c instanceof Yn)
            t = c, r = c.children.length;
          else {
            a = c, r--;
            break;
          }
        } else {
          if (t == e)
            break e;
          r = t.parent.children.indexOf(t), t = t.parent;
        }
      let l = a.node;
      if (l) {
        if (l != n.child(s - 1))
          break;
        --s, i.set(a, s), o.push(a);
      }
    }
  return { index: s, matched: i, matches: o.reverse() };
}
function z6(n, e) {
  return n.type.side - e.type.side;
}
function F6(n, e, t, r) {
  let s = e.locals(n), i = 0;
  if (s.length == 0) {
    for (let c = 0; c < n.childCount; c++) {
      let d = n.child(c);
      r(d, s, e.forChild(i, d), c), i += d.nodeSize;
    }
    return;
  }
  let o = 0, a = [], l = null;
  for (let c = 0; ; ) {
    let d, f;
    for (; o < s.length && s[o].to == i; ) {
      let v = s[o++];
      v.widget && (d ? (f || (f = [d])).push(v) : d = v);
    }
    if (d)
      if (f) {
        f.sort(z6);
        for (let v = 0; v < f.length; v++)
          t(f[v], c, !!l);
      } else
        t(d, c, !!l);
    let m, h;
    if (l)
      h = -1, m = l, l = null;
    else if (c < n.childCount)
      h = c, m = n.child(c++);
    else
      break;
    for (let v = 0; v < a.length; v++)
      a[v].to <= i && a.splice(v--, 1);
    for (; o < s.length && s[o].from <= i && s[o].to > i; )
      a.push(s[o++]);
    let p = i + m.nodeSize;
    if (m.isText) {
      let v = p;
      o < s.length && s[o].from < v && (v = s[o].from);
      for (let k = 0; k < a.length; k++)
        a[k].to < v && (v = a[k].to);
      v < p && (l = m.cut(v - i), m = m.cut(0, v - i), p = v, h = -1);
    }
    let y = m.isInline && !m.isLeaf ? a.filter((v) => !v.inline) : a.slice();
    r(m, y, e.forChild(i, m), h), i = p;
  }
}
function j6(n) {
  if (n.nodeName == "UL" || n.nodeName == "OL") {
    let e = n.style.cssText;
    n.style.cssText = e + "; list-style: square !important", window.getComputedStyle(n).listStyle, n.style.cssText = e;
  }
}
function U6(n, e) {
  for (; ; ) {
    if (n.nodeType == 3)
      return n;
    if (n.nodeType == 1 && e > 0) {
      if (n.childNodes.length > e && n.childNodes[e].nodeType == 3)
        return n.childNodes[e];
      n = n.childNodes[e - 1], e = Lt(n);
    } else if (n.nodeType == 1 && e < n.childNodes.length)
      n = n.childNodes[e], e = 0;
    else
      return null;
  }
}
function B6(n, e, t, r) {
  for (let s = 0, i = 0; s < n.childCount && i <= r; ) {
    let o = n.child(s++), a = i;
    if (i += o.nodeSize, !o.isText)
      continue;
    let l = o.text;
    for (; s < n.childCount; ) {
      let c = n.child(s++);
      if (i += c.nodeSize, !c.isText)
        break;
      l += c.text;
    }
    if (i >= t) {
      if (i >= r && l.slice(r - e.length - a, r - a) == e)
        return r - e.length;
      let c = a < r ? l.lastIndexOf(e, r - a - 1) : -1;
      if (c >= 0 && c + e.length + a >= t)
        return a + c;
      if (t == r && l.length >= r + e.length - a && l.slice(r - a, r - a + e.length) == e)
        return r;
    }
  }
  return -1;
}
function ea(n, e, t, r, s) {
  let i = [];
  for (let o = 0, a = 0; o < n.length; o++) {
    let l = n[o], c = a, d = a += l.size;
    c >= t || d <= e ? i.push(l) : (c < e && i.push(l.slice(0, e - c, r)), s && (i.push(s), s = void 0), d > t && i.push(l.slice(t - c, l.size, r)));
  }
  return i;
}
function Pa(n, e = null) {
  let t = n.domSelectionRange(), r = n.state.doc;
  if (!t.focusNode)
    return null;
  let s = n.docView.nearestDesc(t.focusNode), i = s && s.size == 0, o = n.docView.posFromDOM(t.focusNode, t.focusOffset, 1);
  if (o < 0)
    return null;
  let a = r.resolve(o), l, c;
  if (zi(t)) {
    for (l = a; s && !s.node; )
      s = s.parent;
    let d = s.node;
    if (s && d.isAtom && X.isSelectable(d) && s.parent && !(d.isInline && p6(t.focusNode, t.focusOffset, s.dom))) {
      let f = s.posBefore;
      c = new X(o == f ? a : r.resolve(f));
    }
  } else {
    let d = n.docView.posFromDOM(t.anchorNode, t.anchorOffset, 1);
    if (d < 0)
      return null;
    l = r.resolve(d);
  }
  if (!c) {
    let d = e == "pointer" || n.state.selection.head < a.pos && !i ? 1 : -1;
    c = La(n, l, a, d);
  }
  return c;
}
function Xf(n) {
  return n.editable ? n.hasFocus() : t0(n) && document.activeElement && document.activeElement.contains(n.dom);
}
function Gt(n, e = !1) {
  let t = n.state.selection;
  if (e0(n, t), !!Xf(n)) {
    if (!e && n.input.mouseDown && n.input.mouseDown.allowDefault && Ge) {
      let r = n.domSelectionRange(), s = n.domObserver.currentSelection;
      if (r.anchorNode && s.anchorNode && Gn(r.anchorNode, r.anchorOffset, s.anchorNode, s.anchorOffset)) {
        n.input.mouseDown.delayedSelectionSync = !0, n.domObserver.setCurSelection();
        return;
      }
    }
    if (n.domObserver.disconnectSelection(), n.cursorWrapper)
      q6(n);
    else {
      let { anchor: r, head: s } = t, i, o;
      nu && !(t instanceof oe) && (t.$from.parent.inlineContent || (i = ru(n, t.from)), !t.empty && !t.$from.parent.inlineContent && (o = ru(n, t.to))), n.docView.setSelection(r, s, n.root, e), nu && (i && su(i), o && su(o)), t.visible ? n.dom.classList.remove("ProseMirror-hideselection") : (n.dom.classList.add("ProseMirror-hideselection"), "onselectionchange" in document && W6(n));
    }
    n.domObserver.setCurSelection(), n.domObserver.connectSelection();
  }
}
const nu = tt || Ge && y6 < 63;
function ru(n, e) {
  let { node: t, offset: r } = n.docView.domFromPos(e, 0), s = r < t.childNodes.length ? t.childNodes[r] : null, i = r ? t.childNodes[r - 1] : null;
  if (tt && s && s.contentEditable == "false")
    return go(s);
  if ((!s || s.contentEditable == "false") && (!i || i.contentEditable == "false")) {
    if (s)
      return go(s);
    if (i)
      return go(i);
  }
}
function go(n) {
  return n.contentEditable = "true", tt && n.draggable && (n.draggable = !1, n.wasDraggable = !0), n;
}
function su(n) {
  n.contentEditable = "false", n.wasDraggable && (n.draggable = !0, n.wasDraggable = null);
}
function W6(n) {
  let e = n.dom.ownerDocument;
  e.removeEventListener("selectionchange", n.input.hideSelectionGuard);
  let t = n.domSelectionRange(), r = t.anchorNode, s = t.anchorOffset;
  e.addEventListener("selectionchange", n.input.hideSelectionGuard = () => {
    (t.anchorNode != r || t.anchorOffset != s) && (e.removeEventListener("selectionchange", n.input.hideSelectionGuard), setTimeout(() => {
      (!Xf(n) || n.state.selection.visible) && n.dom.classList.remove("ProseMirror-hideselection");
    }, 20));
  });
}
function q6(n) {
  let e = n.domSelection(), t = document.createRange(), r = n.cursorWrapper.dom, s = r.nodeName == "IMG";
  s ? t.setEnd(r.parentNode, et(r) + 1) : t.setEnd(r, 0), t.collapse(!1), e.removeAllRanges(), e.addRange(t), !s && !n.state.selection.visible && at && yn <= 11 && (r.disabled = !0, r.disabled = !1);
}
function e0(n, e) {
  if (e instanceof X) {
    let t = n.docView.descAt(e.from);
    t != n.lastSelectedViewDesc && (iu(n), t && t.selectNode(), n.lastSelectedViewDesc = t);
  } else
    iu(n);
}
function iu(n) {
  n.lastSelectedViewDesc && (n.lastSelectedViewDesc.parent && n.lastSelectedViewDesc.deselectNode(), n.lastSelectedViewDesc = void 0);
}
function La(n, e, t, r) {
  return n.someProp("createSelectionBetween", (s) => s(n, e, t)) || oe.between(e, t, r);
}
function ou(n) {
  return n.editable && !n.hasFocus() ? !1 : t0(n);
}
function t0(n) {
  let e = n.domSelectionRange();
  if (!e.anchorNode)
    return !1;
  try {
    return n.dom.contains(e.anchorNode.nodeType == 3 ? e.anchorNode.parentNode : e.anchorNode) && (n.editable || n.dom.contains(e.focusNode.nodeType == 3 ? e.focusNode.parentNode : e.focusNode));
  } catch {
    return !1;
  }
}
function K6(n) {
  let e = n.docView.domFromPos(n.state.selection.anchor, 0), t = n.domSelectionRange();
  return Gn(e.node, e.offset, t.anchorNode, t.anchorOffset);
}
function ta(n, e) {
  let { $anchor: t, $head: r } = n.selection, s = e > 0 ? t.max(r) : t.min(r), i = s.parent.inlineContent ? s.depth ? n.doc.resolve(e > 0 ? s.after() : s.before()) : null : s;
  return i && de.findFrom(i, e);
}
function cn(n, e) {
  return n.dispatch(n.state.tr.setSelection(e).scrollIntoView()), !0;
}
function au(n, e, t) {
  let r = n.state.selection;
  if (r instanceof oe)
    if (t.indexOf("s") > -1) {
      let { $head: s } = r, i = s.textOffset ? null : e < 0 ? s.nodeBefore : s.nodeAfter;
      if (!i || i.isText || !i.isLeaf)
        return !1;
      let o = n.state.doc.resolve(s.pos + i.nodeSize * (e < 0 ? -1 : 1));
      return cn(n, new oe(r.$anchor, o));
    } else if (r.empty) {
      if (n.endOfTextblock(e > 0 ? "forward" : "backward")) {
        let s = ta(n.state, e);
        return s && s instanceof X ? cn(n, s) : !1;
      } else if (!(yt && t.indexOf("m") > -1)) {
        let s = r.$head, i = s.textOffset ? null : e < 0 ? s.nodeBefore : s.nodeAfter, o;
        if (!i || i.isText)
          return !1;
        let a = e < 0 ? s.pos - i.nodeSize : s.pos;
        return i.isAtom || (o = n.docView.descAt(a)) && !o.contentDOM ? X.isSelectable(i) ? cn(n, new X(e < 0 ? n.state.doc.resolve(s.pos - i.nodeSize) : s)) : Os ? cn(n, new oe(n.state.doc.resolve(e < 0 ? a : a + i.nodeSize))) : !1 : !1;
      }
    } else
      return !1;
  else {
    if (r instanceof X && r.node.isInline)
      return cn(n, new oe(e > 0 ? r.$to : r.$from));
    {
      let s = ta(n.state, e);
      return s ? cn(n, s) : !1;
    }
  }
}
function si(n) {
  return n.nodeType == 3 ? n.nodeValue.length : n.childNodes.length;
}
function Yr(n, e) {
  let t = n.pmViewDesc;
  return t && t.size == 0 && (e < 0 || n.nextSibling || n.nodeName != "BR");
}
function ar(n, e) {
  return e < 0 ? J6(n) : G6(n);
}
function J6(n) {
  let e = n.domSelectionRange(), t = e.focusNode, r = e.focusOffset;
  if (!t)
    return;
  let s, i, o = !1;
  for (At && t.nodeType == 1 && r < si(t) && Yr(t.childNodes[r], -1) && (o = !0); ; )
    if (r > 0) {
      if (t.nodeType != 1)
        break;
      {
        let a = t.childNodes[r - 1];
        if (Yr(a, -1))
          s = t, i = --r;
        else if (a.nodeType == 3)
          t = a, r = t.nodeValue.length;
        else
          break;
      }
    } else {
      if (n0(t))
        break;
      {
        let a = t.previousSibling;
        for (; a && Yr(a, -1); )
          s = t.parentNode, i = et(a), a = a.previousSibling;
        if (a)
          t = a, r = si(t);
        else {
          if (t = t.parentNode, t == n.dom)
            break;
          r = 0;
        }
      }
    }
  o ? na(n, t, r) : s && na(n, s, i);
}
function G6(n) {
  let e = n.domSelectionRange(), t = e.focusNode, r = e.focusOffset;
  if (!t)
    return;
  let s = si(t), i, o;
  for (; ; )
    if (r < s) {
      if (t.nodeType != 1)
        break;
      let a = t.childNodes[r];
      if (Yr(a, 1))
        i = t, o = ++r;
      else
        break;
    } else {
      if (n0(t))
        break;
      {
        let a = t.nextSibling;
        for (; a && Yr(a, 1); )
          i = a.parentNode, o = et(a) + 1, a = a.nextSibling;
        if (a)
          t = a, r = 0, s = si(t);
        else {
          if (t = t.parentNode, t == n.dom)
            break;
          r = s = 0;
        }
      }
    }
  i && na(n, i, o);
}
function n0(n) {
  let e = n.pmViewDesc;
  return e && e.node && e.node.isBlock;
}
function Y6(n, e) {
  for (; n && e == n.childNodes.length && !Ha(n); )
    e = et(n) + 1, n = n.parentNode;
  for (; n && e < n.childNodes.length; ) {
    let t = n.childNodes[e];
    if (t.nodeType == 3)
      return t;
    if (t.nodeType == 1 && t.contentEditable == "false")
      break;
    n = t, e = 0;
  }
}
function Q6(n, e) {
  for (; n && !e && !Ha(n); )
    e = et(n), n = n.parentNode;
  for (; n && e; ) {
    let t = n.childNodes[e - 1];
    if (t.nodeType == 3)
      return t;
    if (t.nodeType == 1 && t.contentEditable == "false")
      break;
    n = t, e = n.childNodes.length;
  }
}
function na(n, e, t) {
  if (e.nodeType != 3) {
    let i, o;
    (o = Y6(e, t)) ? (e = o, t = 0) : (i = Q6(e, t)) && (e = i, t = i.nodeValue.length);
  }
  let r = n.domSelection();
  if (zi(r)) {
    let i = document.createRange();
    i.setEnd(e, t), i.setStart(e, t), r.removeAllRanges(), r.addRange(i);
  } else
    r.extend && r.extend(e, t);
  n.domObserver.setCurSelection();
  let { state: s } = n;
  setTimeout(() => {
    n.state == s && Gt(n);
  }, 50);
}
function lu(n, e) {
  let t = n.state.doc.resolve(e);
  if (!(Ge || v6) && t.parent.inlineContent) {
    let s = n.coordsAtPos(e);
    if (e > t.start()) {
      let i = n.coordsAtPos(e - 1), o = (i.top + i.bottom) / 2;
      if (o > s.top && o < s.bottom && Math.abs(i.left - s.left) > 1)
        return i.left < s.left ? "ltr" : "rtl";
    }
    if (e < t.end()) {
      let i = n.coordsAtPos(e + 1), o = (i.top + i.bottom) / 2;
      if (o > s.top && o < s.bottom && Math.abs(i.left - s.left) > 1)
        return i.left > s.left ? "ltr" : "rtl";
    }
  }
  return getComputedStyle(n.dom).direction == "rtl" ? "rtl" : "ltr";
}
function cu(n, e, t) {
  let r = n.state.selection;
  if (r instanceof oe && !r.empty || t.indexOf("s") > -1 || yt && t.indexOf("m") > -1)
    return !1;
  let { $from: s, $to: i } = r;
  if (!s.parent.inlineContent || n.endOfTextblock(e < 0 ? "up" : "down")) {
    let o = ta(n.state, e);
    if (o && o instanceof X)
      return cn(n, o);
  }
  if (!s.parent.inlineContent) {
    let o = e < 0 ? s : i, a = r instanceof Rt ? de.near(o, e) : de.findFrom(o, e);
    return a ? cn(n, a) : !1;
  }
  return !1;
}
function uu(n, e) {
  if (!(n.state.selection instanceof oe))
    return !0;
  let { $head: t, $anchor: r, empty: s } = n.state.selection;
  if (!t.sameParent(r))
    return !0;
  if (!s)
    return !1;
  if (n.endOfTextblock(e > 0 ? "forward" : "backward"))
    return !0;
  let i = !t.textOffset && (e < 0 ? t.nodeBefore : t.nodeAfter);
  if (i && !i.isText) {
    let o = n.state.tr;
    return e < 0 ? o.delete(t.pos - i.nodeSize, t.pos) : o.delete(t.pos, t.pos + i.nodeSize), n.dispatch(o), !0;
  }
  return !1;
}
function du(n, e, t) {
  n.domObserver.stop(), e.contentEditable = t, n.domObserver.start();
}
function X6(n) {
  if (!tt || n.state.selection.$head.parentOffset > 0)
    return !1;
  let { focusNode: e, focusOffset: t } = n.domSelectionRange();
  if (e && e.nodeType == 1 && t == 0 && e.firstChild && e.firstChild.contentEditable == "false") {
    let r = e.firstChild;
    du(n, r, "true"), setTimeout(() => du(n, r, "false"), 20);
  }
  return !1;
}
function ey(n) {
  let e = "";
  return n.ctrlKey && (e += "c"), n.metaKey && (e += "m"), n.altKey && (e += "a"), n.shiftKey && (e += "s"), e;
}
function ty(n, e) {
  let t = e.keyCode, r = ey(e);
  if (t == 8 || yt && t == 72 && r == "c")
    return uu(n, -1) || ar(n, -1);
  if (t == 46 && !e.shiftKey || yt && t == 68 && r == "c")
    return uu(n, 1) || ar(n, 1);
  if (t == 13 || t == 27)
    return !0;
  if (t == 37 || yt && t == 66 && r == "c") {
    let s = t == 37 ? lu(n, n.state.selection.from) == "ltr" ? -1 : 1 : -1;
    return au(n, s, r) || ar(n, s);
  } else if (t == 39 || yt && t == 70 && r == "c") {
    let s = t == 39 ? lu(n, n.state.selection.from) == "ltr" ? 1 : -1 : 1;
    return au(n, s, r) || ar(n, s);
  } else {
    if (t == 38 || yt && t == 80 && r == "c")
      return cu(n, -1, r) || ar(n, -1);
    if (t == 40 || yt && t == 78 && r == "c")
      return X6(n) || cu(n, 1, r) || ar(n, 1);
    if (r == (yt ? "m" : "c") && (t == 66 || t == 73 || t == 89 || t == 90))
      return !0;
  }
  return !1;
}
function r0(n, e) {
  n.someProp("transformCopied", (h) => {
    e = h(e, n);
  });
  let t = [], { content: r, openStart: s, openEnd: i } = e;
  for (; s > 1 && i > 1 && r.childCount == 1 && r.firstChild.childCount == 1; ) {
    s--, i--;
    let h = r.firstChild;
    t.push(h.type.name, h.attrs != h.type.defaultAttrs ? h.attrs : null), r = h.content;
  }
  let o = n.someProp("clipboardSerializer") || Zt.fromSchema(n.state.schema), a = c0(), l = a.createElement("div");
  l.appendChild(o.serializeFragment(r, { document: a }));
  let c = l.firstChild, d, f = 0;
  for (; c && c.nodeType == 1 && (d = l0[c.nodeName.toLowerCase()]); ) {
    for (let h = d.length - 1; h >= 0; h--) {
      let p = a.createElement(d[h]);
      for (; l.firstChild; )
        p.appendChild(l.firstChild);
      l.appendChild(p), f++;
    }
    c = l.firstChild;
  }
  c && c.nodeType == 1 && c.setAttribute("data-pm-slice", `${s} ${i}${f ? ` -${f}` : ""} ${JSON.stringify(t)}`);
  let m = n.someProp("clipboardTextSerializer", (h) => h(e, n)) || e.content.textBetween(0, e.content.size, `

`);
  return { dom: l, text: m };
}
function s0(n, e, t, r, s) {
  let i = s.parent.type.spec.code, o, a;
  if (!t && !e)
    return null;
  let l = e && (r || i || !t);
  if (l) {
    if (n.someProp("transformPastedText", (m) => {
      e = m(e, i || r, n);
    }), i)
      return e ? new F(D.from(n.state.schema.text(e.replace(/\r\n?/g, `
`))), 0, 0) : F.empty;
    let f = n.someProp("clipboardTextParser", (m) => m(e, s, r, n));
    if (f)
      a = f;
    else {
      let m = s.marks(), { schema: h } = n.state, p = Zt.fromSchema(h);
      o = document.createElement("div"), e.split(/(?:\r\n?|\n)+/).forEach((y) => {
        let v = o.appendChild(document.createElement("p"));
        y && v.appendChild(p.serializeNode(h.text(y, m)));
      });
    }
  } else
    n.someProp("transformPastedHTML", (f) => {
      t = f(t, n);
    }), o = sy(t), Os && iy(o);
  let c = o && o.querySelector("[data-pm-slice]"), d = c && /^(\d+) (\d+)(?: -(\d+))? (.*)/.exec(c.getAttribute("data-pm-slice") || "");
  if (d && d[3])
    for (let f = +d[3]; f > 0; f--) {
      let m = o.firstChild;
      for (; m && m.nodeType != 1; )
        m = m.nextSibling;
      if (!m)
        break;
      o = m;
    }
  if (a || (a = (n.someProp("clipboardParser") || n.someProp("domParser") || Aa.fromSchema(n.state.schema)).parseSlice(o, {
    preserveWhitespace: !!(l || d),
    context: s,
    ruleFromNode(m) {
      return m.nodeName == "BR" && !m.nextSibling && m.parentNode && !ny.test(m.parentNode.nodeName) ? { ignore: !0 } : null;
    }
  })), d)
    a = oy(fu(a, +d[1], +d[2]), d[4]);
  else if (a = F.maxOpen(ry(a.content, s), !0), a.openStart || a.openEnd) {
    let f = 0, m = 0;
    for (let h = a.content.firstChild; f < a.openStart && !h.type.spec.isolating; f++, h = h.firstChild)
      ;
    for (let h = a.content.lastChild; m < a.openEnd && !h.type.spec.isolating; m++, h = h.lastChild)
      ;
    a = fu(a, f, m);
  }
  return n.someProp("transformPasted", (f) => {
    a = f(a, n);
  }), a;
}
const ny = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;
function ry(n, e) {
  if (n.childCount < 2)
    return n;
  for (let t = e.depth; t >= 0; t--) {
    let s = e.node(t).contentMatchAt(e.index(t)), i, o = [];
    if (n.forEach((a) => {
      if (!o)
        return;
      let l = s.findWrapping(a.type), c;
      if (!l)
        return o = null;
      if (c = o.length && i.length && o0(l, i, a, o[o.length - 1], 0))
        o[o.length - 1] = c;
      else {
        o.length && (o[o.length - 1] = a0(o[o.length - 1], i.length));
        let d = i0(a, l);
        o.push(d), s = s.matchType(d.type), i = l;
      }
    }), o)
      return D.from(o);
  }
  return n;
}
function i0(n, e, t = 0) {
  for (let r = e.length - 1; r >= t; r--)
    n = e[r].create(null, D.from(n));
  return n;
}
function o0(n, e, t, r, s) {
  if (s < n.length && s < e.length && n[s] == e[s]) {
    let i = o0(n, e, t, r.lastChild, s + 1);
    if (i)
      return r.copy(r.content.replaceChild(r.childCount - 1, i));
    if (r.contentMatchAt(r.childCount).matchType(s == n.length - 1 ? t.type : n[s + 1]))
      return r.copy(r.content.append(D.from(i0(t, n, s + 1))));
  }
}
function a0(n, e) {
  if (e == 0)
    return n;
  let t = n.content.replaceChild(n.childCount - 1, a0(n.lastChild, e - 1)), r = n.contentMatchAt(n.childCount).fillBefore(D.empty, !0);
  return n.copy(t.append(r));
}
function ra(n, e, t, r, s, i) {
  let o = e < 0 ? n.firstChild : n.lastChild, a = o.content;
  return n.childCount > 1 && (i = 0), s < r - 1 && (a = ra(a, e, t, r, s + 1, i)), s >= t && (a = e < 0 ? o.contentMatchAt(0).fillBefore(a, i <= s).append(a) : a.append(o.contentMatchAt(o.childCount).fillBefore(D.empty, !0))), n.replaceChild(e < 0 ? 0 : n.childCount - 1, o.copy(a));
}
function fu(n, e, t) {
  return e < n.openStart && (n = new F(ra(n.content, -1, e, n.openStart, 0, n.openEnd), e, n.openEnd)), t < n.openEnd && (n = new F(ra(n.content, 1, t, n.openEnd, 0, 0), n.openStart, t)), n;
}
const l0 = {
  thead: ["table"],
  tbody: ["table"],
  tfoot: ["table"],
  caption: ["table"],
  colgroup: ["table"],
  col: ["table", "colgroup"],
  tr: ["table", "tbody"],
  td: ["table", "tbody", "tr"],
  th: ["table", "tbody", "tr"]
};
let mu = null;
function c0() {
  return mu || (mu = document.implementation.createHTMLDocument("title"));
}
function sy(n) {
  let e = /^(\s*<meta [^>]*>)*/.exec(n);
  e && (n = n.slice(e[0].length));
  let t = c0().createElement("div"), r = /<([a-z][^>\s]+)/i.exec(n), s;
  if ((s = r && l0[r[1].toLowerCase()]) && (n = s.map((i) => "<" + i + ">").join("") + n + s.map((i) => "</" + i + ">").reverse().join("")), t.innerHTML = n, s)
    for (let i = 0; i < s.length; i++)
      t = t.querySelector(s[i]) || t;
  return t;
}
function iy(n) {
  let e = n.querySelectorAll(Ge ? "span:not([class]):not([style])" : "span.Apple-converted-space");
  for (let t = 0; t < e.length; t++) {
    let r = e[t];
    r.childNodes.length == 1 && r.textContent == " " && r.parentNode && r.parentNode.replaceChild(n.ownerDocument.createTextNode(" "), r);
  }
}
function oy(n, e) {
  if (!n.size)
    return n;
  let t = n.content.firstChild.type.schema, r;
  try {
    r = JSON.parse(e);
  } catch {
    return n;
  }
  let { content: s, openStart: i, openEnd: o } = n;
  for (let a = r.length - 2; a >= 0; a -= 2) {
    let l = t.nodes[r[a]];
    if (!l || l.hasRequiredAttrs())
      break;
    s = D.from(l.create(r[a + 1], s)), i++, o++;
  }
  return new F(s, i, o);
}
const nt = {}, rt = {}, ay = { touchstart: !0, touchmove: !0 };
class ly {
  constructor() {
    this.shiftKey = !1, this.mouseDown = null, this.lastKeyCode = null, this.lastKeyCodeTime = 0, this.lastClick = { time: 0, x: 0, y: 0, type: "" }, this.lastSelectionOrigin = null, this.lastSelectionTime = 0, this.lastIOSEnter = 0, this.lastIOSEnterFallbackTimeout = -1, this.lastFocus = 0, this.lastTouch = 0, this.lastAndroidDelete = 0, this.composing = !1, this.composingTimeout = -1, this.compositionNodes = [], this.compositionEndedAt = -2e8, this.compositionID = 1, this.compositionPendingChanges = 0, this.domChangeCount = 0, this.eventHandlers = /* @__PURE__ */ Object.create(null), this.hideSelectionGuard = null;
  }
}
function cy(n) {
  for (let e in nt) {
    let t = nt[e];
    n.dom.addEventListener(e, n.input.eventHandlers[e] = (r) => {
      dy(n, r) && !Za(n, r) && (n.editable || !(r.type in rt)) && t(n, r);
    }, ay[e] ? { passive: !0 } : void 0);
  }
  tt && n.dom.addEventListener("input", () => null), sa(n);
}
function bn(n, e) {
  n.input.lastSelectionOrigin = e, n.input.lastSelectionTime = Date.now();
}
function uy(n) {
  n.domObserver.stop();
  for (let e in n.input.eventHandlers)
    n.dom.removeEventListener(e, n.input.eventHandlers[e]);
  clearTimeout(n.input.composingTimeout), clearTimeout(n.input.lastIOSEnterFallbackTimeout);
}
function sa(n) {
  n.someProp("handleDOMEvents", (e) => {
    for (let t in e)
      n.input.eventHandlers[t] || n.dom.addEventListener(t, n.input.eventHandlers[t] = (r) => Za(n, r));
  });
}
function Za(n, e) {
  return n.someProp("handleDOMEvents", (t) => {
    let r = t[e.type];
    return r ? r(n, e) || e.defaultPrevented : !1;
  });
}
function dy(n, e) {
  if (!e.bubbles)
    return !0;
  if (e.defaultPrevented)
    return !1;
  for (let t = e.target; t != n.dom; t = t.parentNode)
    if (!t || t.nodeType == 11 || t.pmViewDesc && t.pmViewDesc.stopEvent(e))
      return !1;
  return !0;
}
function fy(n, e) {
  !Za(n, e) && nt[e.type] && (n.editable || !(e.type in rt)) && nt[e.type](n, e);
}
rt.keydown = (n, e) => {
  let t = e;
  if (n.input.shiftKey = t.keyCode == 16 || t.shiftKey, !d0(n, t) && (n.input.lastKeyCode = t.keyCode, n.input.lastKeyCodeTime = Date.now(), !(kt && Ge && t.keyCode == 13)))
    if (t.keyCode != 229 && n.domObserver.forceFlush(), Or && t.keyCode == 13 && !t.ctrlKey && !t.altKey && !t.metaKey) {
      let r = Date.now();
      n.input.lastIOSEnter = r, n.input.lastIOSEnterFallbackTimeout = setTimeout(() => {
        n.input.lastIOSEnter == r && (n.someProp("handleKeyDown", (s) => s(n, Dn(13, "Enter"))), n.input.lastIOSEnter = 0);
      }, 200);
    } else
      n.someProp("handleKeyDown", (r) => r(n, t)) || ty(n, t) ? t.preventDefault() : bn(n, "key");
};
rt.keyup = (n, e) => {
  e.keyCode == 16 && (n.input.shiftKey = !1);
};
rt.keypress = (n, e) => {
  let t = e;
  if (d0(n, t) || !t.charCode || t.ctrlKey && !t.altKey || yt && t.metaKey)
    return;
  if (n.someProp("handleKeyPress", (s) => s(n, t))) {
    t.preventDefault();
    return;
  }
  let r = n.state.selection;
  if (!(r instanceof oe) || !r.$from.sameParent(r.$to)) {
    let s = String.fromCharCode(t.charCode);
    !/[\r\n]/.test(s) && !n.someProp("handleTextInput", (i) => i(n, r.$from.pos, r.$to.pos, s)) && n.dispatch(n.state.tr.insertText(s).scrollIntoView()), t.preventDefault();
  }
};
function ji(n) {
  return { left: n.clientX, top: n.clientY };
}
function my(n, e) {
  let t = e.x - n.clientX, r = e.y - n.clientY;
  return t * t + r * r < 100;
}
function $a(n, e, t, r, s) {
  if (r == -1)
    return !1;
  let i = n.state.doc.resolve(r);
  for (let o = i.depth + 1; o > 0; o--)
    if (n.someProp(e, (a) => o > i.depth ? a(n, t, i.nodeAfter, i.before(o), s, !0) : a(n, t, i.node(o), i.before(o), s, !1)))
      return !0;
  return !1;
}
function kr(n, e, t) {
  n.focused || n.focus();
  let r = n.state.tr.setSelection(e);
  t == "pointer" && r.setMeta("pointer", !0), n.dispatch(r);
}
function hy(n, e) {
  if (e == -1)
    return !1;
  let t = n.state.doc.resolve(e), r = t.nodeAfter;
  return r && r.isAtom && X.isSelectable(r) ? (kr(n, new X(t), "pointer"), !0) : !1;
}
function py(n, e) {
  if (e == -1)
    return !1;
  let t = n.state.selection, r, s;
  t instanceof X && (r = t.node);
  let i = n.state.doc.resolve(e);
  for (let o = i.depth + 1; o > 0; o--) {
    let a = o > i.depth ? i.nodeAfter : i.node(o);
    if (X.isSelectable(a)) {
      r && t.$from.depth > 0 && o >= t.$from.depth && i.before(t.$from.depth + 1) == t.$from.pos ? s = i.before(t.$from.depth) : s = i.before(o);
      break;
    }
  }
  return s != null ? (kr(n, X.create(n.state.doc, s), "pointer"), !0) : !1;
}
function gy(n, e, t, r, s) {
  return $a(n, "handleClickOn", e, t, r) || n.someProp("handleClick", (i) => i(n, e, r)) || (s ? py(n, t) : hy(n, t));
}
function by(n, e, t, r) {
  return $a(n, "handleDoubleClickOn", e, t, r) || n.someProp("handleDoubleClick", (s) => s(n, e, r));
}
function yy(n, e, t, r) {
  return $a(n, "handleTripleClickOn", e, t, r) || n.someProp("handleTripleClick", (s) => s(n, e, r)) || vy(n, t, r);
}
function vy(n, e, t) {
  if (t.button != 0)
    return !1;
  let r = n.state.doc;
  if (e == -1)
    return r.inlineContent ? (kr(n, oe.create(r, 0, r.content.size), "pointer"), !0) : !1;
  let s = r.resolve(e);
  for (let i = s.depth + 1; i > 0; i--) {
    let o = i > s.depth ? s.nodeAfter : s.node(i), a = s.before(i);
    if (o.inlineContent)
      kr(n, oe.create(r, a + 1, a + 1 + o.content.size), "pointer");
    else if (X.isSelectable(o))
      kr(n, X.create(r, a), "pointer");
    else
      continue;
    return !0;
  }
}
function Va(n) {
  return ii(n);
}
const u0 = yt ? "metaKey" : "ctrlKey";
nt.mousedown = (n, e) => {
  let t = e;
  n.input.shiftKey = t.shiftKey;
  let r = Va(n), s = Date.now(), i = "singleClick";
  s - n.input.lastClick.time < 500 && my(t, n.input.lastClick) && !t[u0] && (n.input.lastClick.type == "singleClick" ? i = "doubleClick" : n.input.lastClick.type == "doubleClick" && (i = "tripleClick")), n.input.lastClick = { time: s, x: t.clientX, y: t.clientY, type: i };
  let o = n.posAtCoords(ji(t));
  o && (i == "singleClick" ? (n.input.mouseDown && n.input.mouseDown.done(), n.input.mouseDown = new xy(n, o, t, !!r)) : (i == "doubleClick" ? by : yy)(n, o.pos, o.inside, t) ? t.preventDefault() : bn(n, "pointer"));
};
class xy {
  constructor(e, t, r, s) {
    this.view = e, this.pos = t, this.event = r, this.flushed = s, this.delayedSelectionSync = !1, this.mightDrag = null, this.startDoc = e.state.doc, this.selectNode = !!r[u0], this.allowDefault = r.shiftKey;
    let i, o;
    if (t.inside > -1)
      i = e.state.doc.nodeAt(t.inside), o = t.inside;
    else {
      let d = e.state.doc.resolve(t.pos);
      i = d.parent, o = d.depth ? d.before() : 0;
    }
    const a = s ? null : r.target, l = a ? e.docView.nearestDesc(a, !0) : null;
    this.target = l ? l.dom : null;
    let { selection: c } = e.state;
    (r.button == 0 && i.type.spec.draggable && i.type.spec.selectable !== !1 || c instanceof X && c.from <= o && c.to > o) && (this.mightDrag = {
      node: i,
      pos: o,
      addAttr: !!(this.target && !this.target.draggable),
      setUneditable: !!(this.target && At && !this.target.hasAttribute("contentEditable"))
    }), this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable) && (this.view.domObserver.stop(), this.mightDrag.addAttr && (this.target.draggable = !0), this.mightDrag.setUneditable && setTimeout(() => {
      this.view.input.mouseDown == this && this.target.setAttribute("contentEditable", "false");
    }, 20), this.view.domObserver.start()), e.root.addEventListener("mouseup", this.up = this.up.bind(this)), e.root.addEventListener("mousemove", this.move = this.move.bind(this)), bn(e, "pointer");
  }
  done() {
    this.view.root.removeEventListener("mouseup", this.up), this.view.root.removeEventListener("mousemove", this.move), this.mightDrag && this.target && (this.view.domObserver.stop(), this.mightDrag.addAttr && this.target.removeAttribute("draggable"), this.mightDrag.setUneditable && this.target.removeAttribute("contentEditable"), this.view.domObserver.start()), this.delayedSelectionSync && setTimeout(() => Gt(this.view)), this.view.input.mouseDown = null;
  }
  up(e) {
    if (this.done(), !this.view.dom.contains(e.target))
      return;
    let t = this.pos;
    this.view.state.doc != this.startDoc && (t = this.view.posAtCoords(ji(e))), this.updateAllowDefault(e), this.allowDefault || !t ? bn(this.view, "pointer") : gy(this.view, t.pos, t.inside, e, this.selectNode) ? e.preventDefault() : e.button == 0 && (this.flushed || // Safari ignores clicks on draggable elements
    tt && this.mightDrag && !this.mightDrag.node.isAtom || // Chrome will sometimes treat a node selection as a
    // cursor, but still report that the node is selected
    // when asked through getSelection. You'll then get a
    // situation where clicking at the point where that
    // (hidden) cursor is doesn't change the selection, and
    // thus doesn't get a reaction from ProseMirror. This
    // works around that.
    Ge && !this.view.state.selection.visible && Math.min(Math.abs(t.pos - this.view.state.selection.from), Math.abs(t.pos - this.view.state.selection.to)) <= 2) ? (kr(this.view, de.near(this.view.state.doc.resolve(t.pos)), "pointer"), e.preventDefault()) : bn(this.view, "pointer");
  }
  move(e) {
    this.updateAllowDefault(e), bn(this.view, "pointer"), e.buttons == 0 && this.done();
  }
  updateAllowDefault(e) {
    !this.allowDefault && (Math.abs(this.event.x - e.clientX) > 4 || Math.abs(this.event.y - e.clientY) > 4) && (this.allowDefault = !0);
  }
}
nt.touchstart = (n) => {
  n.input.lastTouch = Date.now(), Va(n), bn(n, "pointer");
};
nt.touchmove = (n) => {
  n.input.lastTouch = Date.now(), bn(n, "pointer");
};
nt.contextmenu = (n) => Va(n);
function d0(n, e) {
  return n.composing ? !0 : tt && Math.abs(e.timeStamp - n.input.compositionEndedAt) < 500 ? (n.input.compositionEndedAt = -2e8, !0) : !1;
}
const wy = kt ? 5e3 : -1;
rt.compositionstart = rt.compositionupdate = (n) => {
  if (!n.composing) {
    n.domObserver.flush();
    let { state: e } = n, t = e.selection.$from;
    if (e.selection.empty && (e.storedMarks || !t.textOffset && t.parentOffset && t.nodeBefore.marks.some((r) => r.type.spec.inclusive === !1)))
      n.markCursor = n.state.storedMarks || t.marks(), ii(n, !0), n.markCursor = null;
    else if (ii(n), At && e.selection.empty && t.parentOffset && !t.textOffset && t.nodeBefore.marks.length) {
      let r = n.domSelectionRange();
      for (let s = r.focusNode, i = r.focusOffset; s && s.nodeType == 1 && i != 0; ) {
        let o = i < 0 ? s.lastChild : s.childNodes[i - 1];
        if (!o)
          break;
        if (o.nodeType == 3) {
          n.domSelection().collapse(o, o.nodeValue.length);
          break;
        } else
          s = o, i = -1;
      }
    }
    n.input.composing = !0;
  }
  f0(n, wy);
};
rt.compositionend = (n, e) => {
  n.composing && (n.input.composing = !1, n.input.compositionEndedAt = e.timeStamp, n.input.compositionPendingChanges = n.domObserver.pendingRecords().length ? n.input.compositionID : 0, n.input.compositionPendingChanges && Promise.resolve().then(() => n.domObserver.flush()), n.input.compositionID++, f0(n, 20));
};
function f0(n, e) {
  clearTimeout(n.input.composingTimeout), e > -1 && (n.input.composingTimeout = setTimeout(() => ii(n), e));
}
function m0(n) {
  for (n.composing && (n.input.composing = !1, n.input.compositionEndedAt = Ny()); n.input.compositionNodes.length > 0; )
    n.input.compositionNodes.pop().markParentsDirty();
}
function Ny() {
  let n = document.createEvent("Event");
  return n.initEvent("event", !0, !0), n.timeStamp;
}
function ii(n, e = !1) {
  if (!(kt && n.domObserver.flushingSoon >= 0)) {
    if (n.domObserver.forceFlush(), m0(n), e || n.docView && n.docView.dirty) {
      let t = Pa(n);
      return t && !t.eq(n.state.selection) ? n.dispatch(n.state.tr.setSelection(t)) : n.updateState(n.state), !0;
    }
    return !1;
  }
}
function ky(n, e) {
  if (!n.dom.parentNode)
    return;
  let t = n.dom.parentNode.appendChild(document.createElement("div"));
  t.appendChild(e), t.style.cssText = "position: fixed; left: -10000px; top: 10px";
  let r = getSelection(), s = document.createRange();
  s.selectNodeContents(e), n.dom.blur(), r.removeAllRanges(), r.addRange(s), setTimeout(() => {
    t.parentNode && t.parentNode.removeChild(t), n.focus();
  }, 50);
}
const as = at && yn < 15 || Or && x6 < 604;
nt.copy = rt.cut = (n, e) => {
  let t = e, r = n.state.selection, s = t.type == "cut";
  if (r.empty)
    return;
  let i = as ? null : t.clipboardData, o = r.content(), { dom: a, text: l } = r0(n, o);
  i ? (t.preventDefault(), i.clearData(), i.setData("text/html", a.innerHTML), i.setData("text/plain", l)) : ky(n, a), s && n.dispatch(n.state.tr.deleteSelection().scrollIntoView().setMeta("uiEvent", "cut"));
};
function My(n) {
  return n.openStart == 0 && n.openEnd == 0 && n.content.childCount == 1 ? n.content.firstChild : null;
}
function Cy(n, e) {
  if (!n.dom.parentNode)
    return;
  let t = n.input.shiftKey || n.state.selection.$from.parent.type.spec.code, r = n.dom.parentNode.appendChild(document.createElement(t ? "textarea" : "div"));
  t || (r.contentEditable = "true"), r.style.cssText = "position: fixed; left: -10000px; top: 10px", r.focus();
  let s = n.input.shiftKey && n.input.lastKeyCode != 45;
  setTimeout(() => {
    n.focus(), r.parentNode && r.parentNode.removeChild(r), t ? ls(n, r.value, null, s, e) : ls(n, r.textContent, r.innerHTML, s, e);
  }, 50);
}
function ls(n, e, t, r, s) {
  let i = s0(n, e, t, r, n.state.selection.$from);
  if (n.someProp("handlePaste", (l) => l(n, s, i || F.empty)))
    return !0;
  if (!i)
    return !1;
  let o = My(i), a = o ? n.state.tr.replaceSelectionWith(o, r) : n.state.tr.replaceSelection(i);
  return n.dispatch(a.scrollIntoView().setMeta("paste", !0).setMeta("uiEvent", "paste")), !0;
}
function h0(n) {
  let e = n.getData("text/plain") || n.getData("Text");
  if (e)
    return e;
  let t = n.getData("text/uri-list");
  return t ? t.replace(/\r?\n/g, " ") : "";
}
rt.paste = (n, e) => {
  let t = e;
  if (n.composing && !kt)
    return;
  let r = as ? null : t.clipboardData, s = n.input.shiftKey && n.input.lastKeyCode != 45;
  r && ls(n, h0(r), r.getData("text/html"), s, t) ? t.preventDefault() : Cy(n, t);
};
class p0 {
  constructor(e, t, r) {
    this.slice = e, this.move = t, this.node = r;
  }
}
const g0 = yt ? "altKey" : "ctrlKey";
nt.dragstart = (n, e) => {
  let t = e, r = n.input.mouseDown;
  if (r && r.done(), !t.dataTransfer)
    return;
  let s = n.state.selection, i = s.empty ? null : n.posAtCoords(ji(t)), o;
  if (!(i && i.pos >= s.from && i.pos <= (s instanceof X ? s.to - 1 : s.to))) {
    if (r && r.mightDrag)
      o = X.create(n.state.doc, r.mightDrag.pos);
    else if (t.target && t.target.nodeType == 1) {
      let d = n.docView.nearestDesc(t.target, !0);
      d && d.node.type.spec.draggable && d != n.docView && (o = X.create(n.state.doc, d.posBefore));
    }
  }
  let a = (o || n.state.selection).content(), { dom: l, text: c } = r0(n, a);
  t.dataTransfer.clearData(), t.dataTransfer.setData(as ? "Text" : "text/html", l.innerHTML), t.dataTransfer.effectAllowed = "copyMove", as || t.dataTransfer.setData("text/plain", c), n.dragging = new p0(a, !t[g0], o);
};
nt.dragend = (n) => {
  let e = n.dragging;
  window.setTimeout(() => {
    n.dragging == e && (n.dragging = null);
  }, 50);
};
rt.dragover = rt.dragenter = (n, e) => e.preventDefault();
rt.drop = (n, e) => {
  let t = e, r = n.dragging;
  if (n.dragging = null, !t.dataTransfer)
    return;
  let s = n.posAtCoords(ji(t));
  if (!s)
    return;
  let i = n.state.doc.resolve(s.pos), o = r && r.slice;
  o ? n.someProp("transformPasted", (p) => {
    o = p(o, n);
  }) : o = s0(n, h0(t.dataTransfer), as ? null : t.dataTransfer.getData("text/html"), !1, i);
  let a = !!(r && !t[g0]);
  if (n.someProp("handleDrop", (p) => p(n, t, o || F.empty, a))) {
    t.preventDefault();
    return;
  }
  if (!o)
    return;
  t.preventDefault();
  let l = o ? Df(n.state.doc, i.pos, o) : i.pos;
  l == null && (l = i.pos);
  let c = n.state.tr;
  if (a) {
    let { node: p } = r;
    p ? p.replace(c) : c.deleteSelection();
  }
  let d = c.mapping.map(l), f = o.openStart == 0 && o.openEnd == 0 && o.content.childCount == 1, m = c.doc;
  if (f ? c.replaceRangeWith(d, d, o.content.firstChild) : c.replaceRange(d, d, o), c.doc.eq(m))
    return;
  let h = c.doc.resolve(d);
  if (f && X.isSelectable(o.content.firstChild) && h.nodeAfter && h.nodeAfter.sameMarkup(o.content.firstChild))
    c.setSelection(new X(h));
  else {
    let p = c.mapping.map(l);
    c.mapping.maps[c.mapping.maps.length - 1].forEach((y, v, k, P) => p = P), c.setSelection(La(n, h, c.doc.resolve(p)));
  }
  n.focus(), n.dispatch(c.setMeta("uiEvent", "drop"));
};
nt.focus = (n) => {
  n.input.lastFocus = Date.now(), n.focused || (n.domObserver.stop(), n.dom.classList.add("ProseMirror-focused"), n.domObserver.start(), n.focused = !0, setTimeout(() => {
    n.docView && n.hasFocus() && !n.domObserver.currentSelection.eq(n.domSelectionRange()) && Gt(n);
  }, 20));
};
nt.blur = (n, e) => {
  let t = e;
  n.focused && (n.domObserver.stop(), n.dom.classList.remove("ProseMirror-focused"), n.domObserver.start(), t.relatedTarget && n.dom.contains(t.relatedTarget) && n.domObserver.currentSelection.clear(), n.focused = !1);
};
nt.beforeinput = (n, e) => {
  if (Ge && kt && e.inputType == "deleteContentBackward") {
    n.domObserver.flushSoon();
    let { domChangeCount: r } = n.input;
    setTimeout(() => {
      if (n.input.domChangeCount != r || (n.dom.blur(), n.focus(), n.someProp("handleKeyDown", (i) => i(n, Dn(8, "Backspace")))))
        return;
      let { $cursor: s } = n.state.selection;
      s && s.pos > 0 && n.dispatch(n.state.tr.delete(s.pos - 1, s.pos).scrollIntoView());
    }, 50);
  }
};
for (let n in rt)
  nt[n] = rt[n];
function cs(n, e) {
  if (n == e)
    return !0;
  for (let t in n)
    if (n[t] !== e[t])
      return !1;
  for (let t in e)
    if (!(t in n))
      return !1;
  return !0;
}
class oi {
  constructor(e, t) {
    this.toDOM = e, this.spec = t || Bn, this.side = this.spec.side || 0;
  }
  map(e, t, r, s) {
    let { pos: i, deleted: o } = e.mapResult(t.from + s, this.side < 0 ? -1 : 1);
    return o ? null : new vt(i - r, i - r, this);
  }
  valid() {
    return !0;
  }
  eq(e) {
    return this == e || e instanceof oi && (this.spec.key && this.spec.key == e.spec.key || this.toDOM == e.toDOM && cs(this.spec, e.spec));
  }
  destroy(e) {
    this.spec.destroy && this.spec.destroy(e);
  }
}
class xn {
  constructor(e, t) {
    this.attrs = e, this.spec = t || Bn;
  }
  map(e, t, r, s) {
    let i = e.map(t.from + s, this.spec.inclusiveStart ? -1 : 1) - r, o = e.map(t.to + s, this.spec.inclusiveEnd ? 1 : -1) - r;
    return i >= o ? null : new vt(i, o, this);
  }
  valid(e, t) {
    return t.from < t.to;
  }
  eq(e) {
    return this == e || e instanceof xn && cs(this.attrs, e.attrs) && cs(this.spec, e.spec);
  }
  static is(e) {
    return e.type instanceof xn;
  }
  destroy() {
  }
}
class za {
  constructor(e, t) {
    this.attrs = e, this.spec = t || Bn;
  }
  map(e, t, r, s) {
    let i = e.mapResult(t.from + s, 1);
    if (i.deleted)
      return null;
    let o = e.mapResult(t.to + s, -1);
    return o.deleted || o.pos <= i.pos ? null : new vt(i.pos - r, o.pos - r, this);
  }
  valid(e, t) {
    let { index: r, offset: s } = e.content.findIndex(t.from), i;
    return s == t.from && !(i = e.child(r)).isText && s + i.nodeSize == t.to;
  }
  eq(e) {
    return this == e || e instanceof za && cs(this.attrs, e.attrs) && cs(this.spec, e.spec);
  }
  destroy() {
  }
}
class vt {
  /**
  @internal
  */
  constructor(e, t, r) {
    this.from = e, this.to = t, this.type = r;
  }
  /**
  @internal
  */
  copy(e, t) {
    return new vt(e, t, this.type);
  }
  /**
  @internal
  */
  eq(e, t = 0) {
    return this.type.eq(e.type) && this.from + t == e.from && this.to + t == e.to;
  }
  /**
  @internal
  */
  map(e, t, r) {
    return this.type.map(e, this, t, r);
  }
  /**
  Creates a widget decoration, which is a DOM node that's shown in
  the document at the given position. It is recommended that you
  delay rendering the widget by passing a function that will be
  called when the widget is actually drawn in a view, but you can
  also directly pass a DOM node. `getPos` can be used to find the
  widget's current document position.
  */
  static widget(e, t, r) {
    return new vt(e, e, new oi(t, r));
  }
  /**
  Creates an inline decoration, which adds the given attributes to
  each inline node between `from` and `to`.
  */
  static inline(e, t, r, s) {
    return new vt(e, t, new xn(r, s));
  }
  /**
  Creates a node decoration. `from` and `to` should point precisely
  before and after a node in the document. That node, and only that
  node, will receive the given attributes.
  */
  static node(e, t, r, s) {
    return new vt(e, t, new za(r, s));
  }
  /**
  The spec provided when creating this decoration. Can be useful
  if you've stored extra information in that object.
  */
  get spec() {
    return this.type.spec;
  }
  /**
  @internal
  */
  get inline() {
    return this.type instanceof xn;
  }
  /**
  @internal
  */
  get widget() {
    return this.type instanceof oi;
  }
}
const dr = [], Bn = {};
class Le {
  /**
  @internal
  */
  constructor(e, t) {
    this.local = e.length ? e : dr, this.children = t.length ? t : dr;
  }
  /**
  Create a set of decorations, using the structure of the given
  document. This will consume (modify) the `decorations` array, so
  you must make a copy if you want need to preserve that.
  */
  static create(e, t) {
    return t.length ? ai(t, e, 0, Bn) : Je;
  }
  /**
  Find all decorations in this set which touch the given range
  (including decorations that start or end directly at the
  boundaries) and match the given predicate on their spec. When
  `start` and `end` are omitted, all decorations in the set are
  considered. When `predicate` isn't given, all decorations are
  assumed to match.
  */
  find(e, t, r) {
    let s = [];
    return this.findInner(e ?? 0, t ?? 1e9, s, 0, r), s;
  }
  findInner(e, t, r, s, i) {
    for (let o = 0; o < this.local.length; o++) {
      let a = this.local[o];
      a.from <= t && a.to >= e && (!i || i(a.spec)) && r.push(a.copy(a.from + s, a.to + s));
    }
    for (let o = 0; o < this.children.length; o += 3)
      if (this.children[o] < t && this.children[o + 1] > e) {
        let a = this.children[o] + 1;
        this.children[o + 2].findInner(e - a, t - a, r, s + a, i);
      }
  }
  /**
  Map the set of decorations in response to a change in the
  document.
  */
  map(e, t, r) {
    return this == Je || e.maps.length == 0 ? this : this.mapInner(e, t, 0, 0, r || Bn);
  }
  /**
  @internal
  */
  mapInner(e, t, r, s, i) {
    let o;
    for (let a = 0; a < this.local.length; a++) {
      let l = this.local[a].map(e, r, s);
      l && l.type.valid(t, l) ? (o || (o = [])).push(l) : i.onRemove && i.onRemove(this.local[a].spec);
    }
    return this.children.length ? Ry(this.children, o || [], e, t, r, s, i) : o ? new Le(o.sort(Wn), dr) : Je;
  }
  /**
  Add the given array of decorations to the ones in the set,
  producing a new set. Consumes the `decorations` array. Needs
  access to the current document to create the appropriate tree
  structure.
  */
  add(e, t) {
    return t.length ? this == Je ? Le.create(e, t) : this.addInner(e, t, 0) : this;
  }
  addInner(e, t, r) {
    let s, i = 0;
    e.forEach((a, l) => {
      let c = l + r, d;
      if (d = y0(t, a, c)) {
        for (s || (s = this.children.slice()); i < s.length && s[i] < l; )
          i += 3;
        s[i] == l ? s[i + 2] = s[i + 2].addInner(a, d, c + 1) : s.splice(i, 0, l, l + a.nodeSize, ai(d, a, c + 1, Bn)), i += 3;
      }
    });
    let o = b0(i ? v0(t) : t, -r);
    for (let a = 0; a < o.length; a++)
      o[a].type.valid(e, o[a]) || o.splice(a--, 1);
    return new Le(o.length ? this.local.concat(o).sort(Wn) : this.local, s || this.children);
  }
  /**
  Create a new set that contains the decorations in this set, minus
  the ones in the given array.
  */
  remove(e) {
    return e.length == 0 || this == Je ? this : this.removeInner(e, 0);
  }
  removeInner(e, t) {
    let r = this.children, s = this.local;
    for (let i = 0; i < r.length; i += 3) {
      let o, a = r[i] + t, l = r[i + 1] + t;
      for (let d = 0, f; d < e.length; d++)
        (f = e[d]) && f.from > a && f.to < l && (e[d] = null, (o || (o = [])).push(f));
      if (!o)
        continue;
      r == this.children && (r = this.children.slice());
      let c = r[i + 2].removeInner(o, a + 1);
      c != Je ? r[i + 2] = c : (r.splice(i, 3), i -= 3);
    }
    if (s.length) {
      for (let i = 0, o; i < e.length; i++)
        if (o = e[i])
          for (let a = 0; a < s.length; a++)
            s[a].eq(o, t) && (s == this.local && (s = this.local.slice()), s.splice(a--, 1));
    }
    return r == this.children && s == this.local ? this : s.length || r.length ? new Le(s, r) : Je;
  }
  /**
  @internal
  */
  forChild(e, t) {
    if (this == Je)
      return this;
    if (t.isLeaf)
      return Le.empty;
    let r, s;
    for (let a = 0; a < this.children.length; a += 3)
      if (this.children[a] >= e) {
        this.children[a] == e && (r = this.children[a + 2]);
        break;
      }
    let i = e + 1, o = i + t.content.size;
    for (let a = 0; a < this.local.length; a++) {
      let l = this.local[a];
      if (l.from < o && l.to > i && l.type instanceof xn) {
        let c = Math.max(i, l.from) - i, d = Math.min(o, l.to) - i;
        c < d && (s || (s = [])).push(l.copy(c, d));
      }
    }
    if (s) {
      let a = new Le(s.sort(Wn), dr);
      return r ? new fn([a, r]) : a;
    }
    return r || Je;
  }
  /**
  @internal
  */
  eq(e) {
    if (this == e)
      return !0;
    if (!(e instanceof Le) || this.local.length != e.local.length || this.children.length != e.children.length)
      return !1;
    for (let t = 0; t < this.local.length; t++)
      if (!this.local[t].eq(e.local[t]))
        return !1;
    for (let t = 0; t < this.children.length; t += 3)
      if (this.children[t] != e.children[t] || this.children[t + 1] != e.children[t + 1] || !this.children[t + 2].eq(e.children[t + 2]))
        return !1;
    return !0;
  }
  /**
  @internal
  */
  locals(e) {
    return Fa(this.localsInner(e));
  }
  /**
  @internal
  */
  localsInner(e) {
    if (this == Je)
      return dr;
    if (e.inlineContent || !this.local.some(xn.is))
      return this.local;
    let t = [];
    for (let r = 0; r < this.local.length; r++)
      this.local[r].type instanceof xn || t.push(this.local[r]);
    return t;
  }
}
Le.empty = new Le([], []);
Le.removeOverlap = Fa;
const Je = Le.empty;
class fn {
  constructor(e) {
    this.members = e;
  }
  map(e, t) {
    const r = this.members.map((s) => s.map(e, t, Bn));
    return fn.from(r);
  }
  forChild(e, t) {
    if (t.isLeaf)
      return Le.empty;
    let r = [];
    for (let s = 0; s < this.members.length; s++) {
      let i = this.members[s].forChild(e, t);
      i != Je && (i instanceof fn ? r = r.concat(i.members) : r.push(i));
    }
    return fn.from(r);
  }
  eq(e) {
    if (!(e instanceof fn) || e.members.length != this.members.length)
      return !1;
    for (let t = 0; t < this.members.length; t++)
      if (!this.members[t].eq(e.members[t]))
        return !1;
    return !0;
  }
  locals(e) {
    let t, r = !0;
    for (let s = 0; s < this.members.length; s++) {
      let i = this.members[s].localsInner(e);
      if (i.length)
        if (!t)
          t = i;
        else {
          r && (t = t.slice(), r = !1);
          for (let o = 0; o < i.length; o++)
            t.push(i[o]);
        }
    }
    return t ? Fa(r ? t : t.sort(Wn)) : dr;
  }
  // Create a group for the given array of decoration sets, or return
  // a single set when possible.
  static from(e) {
    switch (e.length) {
      case 0:
        return Je;
      case 1:
        return e[0];
      default:
        return new fn(e.every((t) => t instanceof Le) ? e : e.reduce((t, r) => t.concat(r instanceof Le ? r : r.members), []));
    }
  }
}
function Ry(n, e, t, r, s, i, o) {
  let a = n.slice();
  for (let c = 0, d = i; c < t.maps.length; c++) {
    let f = 0;
    t.maps[c].forEach((m, h, p, y) => {
      let v = y - p - (h - m);
      for (let k = 0; k < a.length; k += 3) {
        let P = a[k + 1];
        if (P < 0 || m > P + d - f)
          continue;
        let q = a[k] + d - f;
        h >= q ? a[k + 1] = m <= q ? -2 : -1 : p >= s && v && (a[k] += v, a[k + 1] += v);
      }
      f += v;
    }), d = t.maps[c].map(d, -1);
  }
  let l = !1;
  for (let c = 0; c < a.length; c += 3)
    if (a[c + 1] < 0) {
      if (a[c + 1] == -2) {
        l = !0, a[c + 1] = -1;
        continue;
      }
      let d = t.map(n[c] + i), f = d - s;
      if (f < 0 || f >= r.content.size) {
        l = !0;
        continue;
      }
      let m = t.map(n[c + 1] + i, -1), h = m - s, { index: p, offset: y } = r.content.findIndex(f), v = r.maybeChild(p);
      if (v && y == f && y + v.nodeSize == h) {
        let k = a[c + 2].mapInner(t, v, d + 1, n[c] + i + 1, o);
        k != Je ? (a[c] = f, a[c + 1] = h, a[c + 2] = k) : (a[c + 1] = -2, l = !0);
      } else
        l = !0;
    }
  if (l) {
    let c = Ey(a, n, e, t, s, i, o), d = ai(c, r, 0, o);
    e = d.local;
    for (let f = 0; f < a.length; f += 3)
      a[f + 1] < 0 && (a.splice(f, 3), f -= 3);
    for (let f = 0, m = 0; f < d.children.length; f += 3) {
      let h = d.children[f];
      for (; m < a.length && a[m] < h; )
        m += 3;
      a.splice(m, 0, d.children[f], d.children[f + 1], d.children[f + 2]);
    }
  }
  return new Le(e.sort(Wn), a);
}
function b0(n, e) {
  if (!e || !n.length)
    return n;
  let t = [];
  for (let r = 0; r < n.length; r++) {
    let s = n[r];
    t.push(new vt(s.from + e, s.to + e, s.type));
  }
  return t;
}
function Ey(n, e, t, r, s, i, o) {
  function a(l, c) {
    for (let d = 0; d < l.local.length; d++) {
      let f = l.local[d].map(r, s, c);
      f ? t.push(f) : o.onRemove && o.onRemove(l.local[d].spec);
    }
    for (let d = 0; d < l.children.length; d += 3)
      a(l.children[d + 2], l.children[d] + c + 1);
  }
  for (let l = 0; l < n.length; l += 3)
    n[l + 1] == -1 && a(n[l + 2], e[l] + i + 1);
  return t;
}
function y0(n, e, t) {
  if (e.isLeaf)
    return null;
  let r = t + e.nodeSize, s = null;
  for (let i = 0, o; i < n.length; i++)
    (o = n[i]) && o.from > t && o.to < r && ((s || (s = [])).push(o), n[i] = null);
  return s;
}
function v0(n) {
  let e = [];
  for (let t = 0; t < n.length; t++)
    n[t] != null && e.push(n[t]);
  return e;
}
function ai(n, e, t, r) {
  let s = [], i = !1;
  e.forEach((a, l) => {
    let c = y0(n, a, l + t);
    if (c) {
      i = !0;
      let d = ai(c, a, t + l + 1, r);
      d != Je && s.push(l, l + a.nodeSize, d);
    }
  });
  let o = b0(i ? v0(n) : n, -t).sort(Wn);
  for (let a = 0; a < o.length; a++)
    o[a].type.valid(e, o[a]) || (r.onRemove && r.onRemove(o[a].spec), o.splice(a--, 1));
  return o.length || s.length ? new Le(o, s) : Je;
}
function Wn(n, e) {
  return n.from - e.from || n.to - e.to;
}
function Fa(n) {
  let e = n;
  for (let t = 0; t < e.length - 1; t++) {
    let r = e[t];
    if (r.from != r.to)
      for (let s = t + 1; s < e.length; s++) {
        let i = e[s];
        if (i.from == r.from) {
          i.to != r.to && (e == n && (e = n.slice()), e[s] = i.copy(i.from, r.to), hu(e, s + 1, i.copy(r.to, i.to)));
          continue;
        } else {
          i.from < r.to && (e == n && (e = n.slice()), e[t] = r.copy(r.from, i.from), hu(e, s, r.copy(i.from, r.to)));
          break;
        }
      }
  }
  return e;
}
function hu(n, e, t) {
  for (; e < n.length && Wn(t, n[e]) > 0; )
    e++;
  n.splice(e, 0, t);
}
function bo(n) {
  let e = [];
  return n.someProp("decorations", (t) => {
    let r = t(n.state);
    r && r != Je && e.push(r);
  }), n.cursorWrapper && e.push(Le.create(n.state.doc, [n.cursorWrapper.deco])), fn.from(e);
}
const Sy = {
  childList: !0,
  characterData: !0,
  characterDataOldValue: !0,
  attributes: !0,
  attributeOldValue: !0,
  subtree: !0
}, Ay = at && yn <= 11;
class Oy {
  constructor() {
    this.anchorNode = null, this.anchorOffset = 0, this.focusNode = null, this.focusOffset = 0;
  }
  set(e) {
    this.anchorNode = e.anchorNode, this.anchorOffset = e.anchorOffset, this.focusNode = e.focusNode, this.focusOffset = e.focusOffset;
  }
  clear() {
    this.anchorNode = this.focusNode = null;
  }
  eq(e) {
    return e.anchorNode == this.anchorNode && e.anchorOffset == this.anchorOffset && e.focusNode == this.focusNode && e.focusOffset == this.focusOffset;
  }
}
class Ty {
  constructor(e, t) {
    this.view = e, this.handleDOMChange = t, this.queue = [], this.flushingSoon = -1, this.observer = null, this.currentSelection = new Oy(), this.onCharData = null, this.suppressingSelectionUpdates = !1, this.observer = window.MutationObserver && new window.MutationObserver((r) => {
      for (let s = 0; s < r.length; s++)
        this.queue.push(r[s]);
      at && yn <= 11 && r.some((s) => s.type == "childList" && s.removedNodes.length || s.type == "characterData" && s.oldValue.length > s.target.nodeValue.length) ? this.flushSoon() : this.flush();
    }), Ay && (this.onCharData = (r) => {
      this.queue.push({ target: r.target, type: "characterData", oldValue: r.prevValue }), this.flushSoon();
    }), this.onSelectionChange = this.onSelectionChange.bind(this);
  }
  flushSoon() {
    this.flushingSoon < 0 && (this.flushingSoon = window.setTimeout(() => {
      this.flushingSoon = -1, this.flush();
    }, 20));
  }
  forceFlush() {
    this.flushingSoon > -1 && (window.clearTimeout(this.flushingSoon), this.flushingSoon = -1, this.flush());
  }
  start() {
    this.observer && (this.observer.takeRecords(), this.observer.observe(this.view.dom, Sy)), this.onCharData && this.view.dom.addEventListener("DOMCharacterDataModified", this.onCharData), this.connectSelection();
  }
  stop() {
    if (this.observer) {
      let e = this.observer.takeRecords();
      if (e.length) {
        for (let t = 0; t < e.length; t++)
          this.queue.push(e[t]);
        window.setTimeout(() => this.flush(), 20);
      }
      this.observer.disconnect();
    }
    this.onCharData && this.view.dom.removeEventListener("DOMCharacterDataModified", this.onCharData), this.disconnectSelection();
  }
  connectSelection() {
    this.view.dom.ownerDocument.addEventListener("selectionchange", this.onSelectionChange);
  }
  disconnectSelection() {
    this.view.dom.ownerDocument.removeEventListener("selectionchange", this.onSelectionChange);
  }
  suppressSelectionUpdates() {
    this.suppressingSelectionUpdates = !0, setTimeout(() => this.suppressingSelectionUpdates = !1, 50);
  }
  onSelectionChange() {
    if (ou(this.view)) {
      if (this.suppressingSelectionUpdates)
        return Gt(this.view);
      if (at && yn <= 11 && !this.view.state.selection.empty) {
        let e = this.view.domSelectionRange();
        if (e.focusNode && Gn(e.focusNode, e.focusOffset, e.anchorNode, e.anchorOffset))
          return this.flushSoon();
      }
      this.flush();
    }
  }
  setCurSelection() {
    this.currentSelection.set(this.view.domSelectionRange());
  }
  ignoreSelectionChange(e) {
    if (!e.focusNode)
      return !0;
    let t = /* @__PURE__ */ new Set(), r;
    for (let i = e.focusNode; i; i = is(i))
      t.add(i);
    for (let i = e.anchorNode; i; i = is(i))
      if (t.has(i)) {
        r = i;
        break;
      }
    let s = r && this.view.docView.nearestDesc(r);
    if (s && s.ignoreMutation({
      type: "selection",
      target: r.nodeType == 3 ? r.parentNode : r
    }))
      return this.setCurSelection(), !0;
  }
  pendingRecords() {
    if (this.observer)
      for (let e of this.observer.takeRecords())
        this.queue.push(e);
    return this.queue;
  }
  flush() {
    let { view: e } = this;
    if (!e.docView || this.flushingSoon > -1)
      return;
    let t = this.pendingRecords();
    t.length && (this.queue = []);
    let r = e.domSelectionRange(), s = !this.suppressingSelectionUpdates && !this.currentSelection.eq(r) && ou(e) && !this.ignoreSelectionChange(r), i = -1, o = -1, a = !1, l = [];
    if (e.editable)
      for (let d = 0; d < t.length; d++) {
        let f = this.registerMutation(t[d], l);
        f && (i = i < 0 ? f.from : Math.min(f.from, i), o = o < 0 ? f.to : Math.max(f.to, o), f.typeOver && (a = !0));
      }
    if (At && l.length > 1) {
      let d = l.filter((f) => f.nodeName == "BR");
      if (d.length == 2) {
        let f = d[0], m = d[1];
        f.parentNode && f.parentNode.parentNode == m.parentNode ? m.remove() : f.remove();
      }
    }
    let c = null;
    i < 0 && s && e.input.lastFocus > Date.now() - 200 && Math.max(e.input.lastTouch, e.input.lastClick.time) < Date.now() - 300 && zi(r) && (c = Pa(e)) && c.eq(de.near(e.state.doc.resolve(0), 1)) ? (e.input.lastFocus = 0, Gt(e), this.currentSelection.set(r), e.scrollToSelection()) : (i > -1 || s) && (i > -1 && (e.docView.markDirty(i, o), _y(e)), this.handleDOMChange(i, o, a, l), e.docView && e.docView.dirty ? e.updateState(e.state) : this.currentSelection.eq(r) || Gt(e), this.currentSelection.set(r));
  }
  registerMutation(e, t) {
    if (t.indexOf(e.target) > -1)
      return null;
    let r = this.view.docView.nearestDesc(e.target);
    if (e.type == "attributes" && (r == this.view.docView || e.attributeName == "contenteditable" || // Firefox sometimes fires spurious events for null/empty styles
    e.attributeName == "style" && !e.oldValue && !e.target.getAttribute("style")) || !r || r.ignoreMutation(e))
      return null;
    if (e.type == "childList") {
      for (let d = 0; d < e.addedNodes.length; d++)
        t.push(e.addedNodes[d]);
      if (r.contentDOM && r.contentDOM != r.dom && !r.contentDOM.contains(e.target))
        return { from: r.posBefore, to: r.posAfter };
      let s = e.previousSibling, i = e.nextSibling;
      if (at && yn <= 11 && e.addedNodes.length)
        for (let d = 0; d < e.addedNodes.length; d++) {
          let { previousSibling: f, nextSibling: m } = e.addedNodes[d];
          (!f || Array.prototype.indexOf.call(e.addedNodes, f) < 0) && (s = f), (!m || Array.prototype.indexOf.call(e.addedNodes, m) < 0) && (i = m);
        }
      let o = s && s.parentNode == e.target ? et(s) + 1 : 0, a = r.localPosFromDOM(e.target, o, -1), l = i && i.parentNode == e.target ? et(i) : e.target.childNodes.length, c = r.localPosFromDOM(e.target, l, 1);
      return { from: a, to: c };
    } else
      return e.type == "attributes" ? { from: r.posAtStart - r.border, to: r.posAtEnd + r.border } : {
        from: r.posAtStart,
        to: r.posAtEnd,
        // An event was generated for a text change that didn't change
        // any text. Mark the dom change to fall back to assuming the
        // selection was typed over with an identical value if it can't
        // find another change.
        typeOver: e.target.nodeValue == e.oldValue
      };
  }
}
let pu = /* @__PURE__ */ new WeakMap(), gu = !1;
function _y(n) {
  if (!pu.has(n) && (pu.set(n, null), ["normal", "nowrap", "pre-line"].indexOf(getComputedStyle(n.dom).whiteSpace) !== -1)) {
    if (n.requiresGeckoHackNode = At, gu)
      return;
    console.warn("ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package."), gu = !0;
  }
}
function Dy(n) {
  let e;
  function t(l) {
    l.preventDefault(), l.stopImmediatePropagation(), e = l.getTargetRanges()[0];
  }
  n.dom.addEventListener("beforeinput", t, !0), document.execCommand("indent"), n.dom.removeEventListener("beforeinput", t, !0);
  let r = e.startContainer, s = e.startOffset, i = e.endContainer, o = e.endOffset, a = n.domAtPos(n.state.selection.anchor);
  return Gn(a.node, a.offset, i, o) && ([r, s, i, o] = [i, o, r, s]), { anchorNode: r, anchorOffset: s, focusNode: i, focusOffset: o };
}
function Hy(n, e, t) {
  let { node: r, fromOffset: s, toOffset: i, from: o, to: a } = n.docView.parseRange(e, t), l = n.domSelectionRange(), c, d = l.anchorNode;
  if (d && n.dom.contains(d.nodeType == 1 ? d : d.parentNode) && (c = [{ node: d, offset: l.anchorOffset }], zi(l) || c.push({ node: l.focusNode, offset: l.focusOffset })), Ge && n.input.lastKeyCode === 8)
    for (let v = i; v > s; v--) {
      let k = r.childNodes[v - 1], P = k.pmViewDesc;
      if (k.nodeName == "BR" && !P) {
        i = v;
        break;
      }
      if (!P || P.size)
        break;
    }
  let f = n.state.doc, m = n.someProp("domParser") || Aa.fromSchema(n.state.schema), h = f.resolve(o), p = null, y = m.parse(r, {
    topNode: h.parent,
    topMatch: h.parent.contentMatchAt(h.index()),
    topOpen: !0,
    from: s,
    to: i,
    preserveWhitespace: h.parent.type.whitespace == "pre" ? "full" : !0,
    findPositions: c,
    ruleFromNode: Iy,
    context: h
  });
  if (c && c[0].pos != null) {
    let v = c[0].pos, k = c[1] && c[1].pos;
    k == null && (k = v), p = { anchor: v + o, head: k + o };
  }
  return { doc: y, sel: p, from: o, to: a };
}
function Iy(n) {
  let e = n.pmViewDesc;
  if (e)
    return e.parseRule();
  if (n.nodeName == "BR" && n.parentNode) {
    if (tt && /^(ul|ol)$/i.test(n.parentNode.nodeName)) {
      let t = document.createElement("div");
      return t.appendChild(document.createElement("li")), { skip: t };
    } else if (n.parentNode.lastChild == n || tt && /^(tr|table)$/i.test(n.parentNode.nodeName))
      return { ignore: !0 };
  } else if (n.nodeName == "IMG" && n.getAttribute("mark-placeholder"))
    return { ignore: !0 };
  return null;
}
const Py = /^(a|abbr|acronym|b|bd[io]|big|br|button|cite|code|data(list)?|del|dfn|em|i|ins|kbd|label|map|mark|meter|output|q|ruby|s|samp|small|span|strong|su[bp]|time|u|tt|var)$/i;
function Ly(n, e, t, r, s) {
  let i = n.input.compositionPendingChanges || (n.composing ? n.input.compositionID : 0);
  if (n.input.compositionPendingChanges = 0, e < 0) {
    let b = n.input.lastSelectionTime > Date.now() - 50 ? n.input.lastSelectionOrigin : null, M = Pa(n, b);
    if (M && !n.state.selection.eq(M)) {
      if (Ge && kt && n.input.lastKeyCode === 13 && Date.now() - 100 < n.input.lastKeyCodeTime && n.someProp("handleKeyDown", (_) => _(n, Dn(13, "Enter"))))
        return;
      let S = n.state.tr.setSelection(M);
      b == "pointer" ? S.setMeta("pointer", !0) : b == "key" && S.scrollIntoView(), i && S.setMeta("composition", i), n.dispatch(S);
    }
    return;
  }
  let o = n.state.doc.resolve(e), a = o.sharedDepth(t);
  e = o.before(a + 1), t = n.state.doc.resolve(t).after(a + 1);
  let l = n.state.selection, c = Hy(n, e, t), d = n.state.doc, f = d.slice(c.from, c.to), m, h;
  n.input.lastKeyCode === 8 && Date.now() - 100 < n.input.lastKeyCodeTime ? (m = n.state.selection.to, h = "end") : (m = n.state.selection.from, h = "start"), n.input.lastKeyCode = null;
  let p = Vy(f.content, c.doc.content, c.from, m, h);
  if ((Or && n.input.lastIOSEnter > Date.now() - 225 || kt) && s.some((b) => b.nodeType == 1 && !Py.test(b.nodeName)) && (!p || p.endA >= p.endB) && n.someProp("handleKeyDown", (b) => b(n, Dn(13, "Enter")))) {
    n.input.lastIOSEnter = 0;
    return;
  }
  if (!p)
    if (r && l instanceof oe && !l.empty && l.$head.sameParent(l.$anchor) && !n.composing && !(c.sel && c.sel.anchor != c.sel.head))
      p = { start: l.from, endA: l.to, endB: l.to };
    else {
      if (c.sel) {
        let b = bu(n, n.state.doc, c.sel);
        if (b && !b.eq(n.state.selection)) {
          let M = n.state.tr.setSelection(b);
          i && M.setMeta("composition", i), n.dispatch(M);
        }
      }
      return;
    }
  if (Ge && n.cursorWrapper && c.sel && c.sel.anchor == n.cursorWrapper.deco.from && c.sel.head == c.sel.anchor) {
    let b = p.endB - p.start;
    c.sel = { anchor: c.sel.anchor + b, head: c.sel.anchor + b };
  }
  n.input.domChangeCount++, n.state.selection.from < n.state.selection.to && p.start == p.endB && n.state.selection instanceof oe && (p.start > n.state.selection.from && p.start <= n.state.selection.from + 2 && n.state.selection.from >= c.from ? p.start = n.state.selection.from : p.endA < n.state.selection.to && p.endA >= n.state.selection.to - 2 && n.state.selection.to <= c.to && (p.endB += n.state.selection.to - p.endA, p.endA = n.state.selection.to)), at && yn <= 11 && p.endB == p.start + 1 && p.endA == p.start && p.start > c.from && c.doc.textBetween(p.start - c.from - 1, p.start - c.from + 1) == "  " && (p.start--, p.endA--, p.endB--);
  let y = c.doc.resolveNoCache(p.start - c.from), v = c.doc.resolveNoCache(p.endB - c.from), k = d.resolve(p.start), P = y.sameParent(v) && y.parent.inlineContent && k.end() >= p.endA, q;
  if ((Or && n.input.lastIOSEnter > Date.now() - 225 && (!P || s.some((b) => b.nodeName == "DIV" || b.nodeName == "P")) || !P && y.pos < c.doc.content.size && !y.sameParent(v) && (q = de.findFrom(c.doc.resolve(y.pos + 1), 1, !0)) && q.head == v.pos) && n.someProp("handleKeyDown", (b) => b(n, Dn(13, "Enter")))) {
    n.input.lastIOSEnter = 0;
    return;
  }
  if (n.state.selection.anchor > p.start && $y(d, p.start, p.endA, y, v) && n.someProp("handleKeyDown", (b) => b(n, Dn(8, "Backspace")))) {
    kt && Ge && n.domObserver.suppressSelectionUpdates();
    return;
  }
  Ge && kt && p.endB == p.start && (n.input.lastAndroidDelete = Date.now()), kt && !P && y.start() != v.start() && v.parentOffset == 0 && y.depth == v.depth && c.sel && c.sel.anchor == c.sel.head && c.sel.head == p.endA && (p.endB -= 2, v = c.doc.resolveNoCache(p.endB - c.from), setTimeout(() => {
    n.someProp("handleKeyDown", function(b) {
      return b(n, Dn(13, "Enter"));
    });
  }, 20));
  let te = p.start, re = p.endA, V, K, w;
  if (P) {
    if (y.pos == v.pos)
      at && yn <= 11 && y.parentOffset == 0 && (n.domObserver.suppressSelectionUpdates(), setTimeout(() => Gt(n), 20)), V = n.state.tr.delete(te, re), K = d.resolve(p.start).marksAcross(d.resolve(p.endA));
    else if (
      // Adding or removing a mark
      p.endA == p.endB && (w = Zy(y.parent.content.cut(y.parentOffset, v.parentOffset), k.parent.content.cut(k.parentOffset, p.endA - k.start())))
    )
      V = n.state.tr, w.type == "add" ? V.addMark(te, re, w.mark) : V.removeMark(te, re, w.mark);
    else if (y.parent.child(y.index()).isText && y.index() == v.index() - (v.textOffset ? 0 : 1)) {
      let b = y.parent.textBetween(y.parentOffset, v.parentOffset);
      if (n.someProp("handleTextInput", (M) => M(n, te, re, b)))
        return;
      V = n.state.tr.insertText(b, te, re);
    }
  }
  if (V || (V = n.state.tr.replace(te, re, c.doc.slice(p.start - c.from, p.endB - c.from))), c.sel) {
    let b = bu(n, V.doc, c.sel);
    b && !(Ge && kt && n.composing && b.empty && (p.start != p.endB || n.input.lastAndroidDelete < Date.now() - 100) && (b.head == te || b.head == V.mapping.map(re) - 1) || at && b.empty && b.head == te) && V.setSelection(b);
  }
  K && V.ensureMarks(K), i && V.setMeta("composition", i), n.dispatch(V.scrollIntoView());
}
function bu(n, e, t) {
  return Math.max(t.anchor, t.head) > e.content.size ? null : La(n, e.resolve(t.anchor), e.resolve(t.head));
}
function Zy(n, e) {
  let t = n.firstChild.marks, r = e.firstChild.marks, s = t, i = r, o, a, l;
  for (let d = 0; d < r.length; d++)
    s = r[d].removeFromSet(s);
  for (let d = 0; d < t.length; d++)
    i = t[d].removeFromSet(i);
  if (s.length == 1 && i.length == 0)
    a = s[0], o = "add", l = (d) => d.mark(a.addToSet(d.marks));
  else if (s.length == 0 && i.length == 1)
    a = i[0], o = "remove", l = (d) => d.mark(a.removeFromSet(d.marks));
  else
    return null;
  let c = [];
  for (let d = 0; d < e.childCount; d++)
    c.push(l(e.child(d)));
  if (D.from(c).eq(n))
    return { mark: a, type: o };
}
function $y(n, e, t, r, s) {
  if (!r.parent.isTextblock || // The content must have shrunk
  t - e <= s.pos - r.pos || // newEnd must point directly at or after the end of the block that newStart points into
  yo(r, !0, !1) < s.pos)
    return !1;
  let i = n.resolve(e);
  if (i.parentOffset < i.parent.content.size || !i.parent.isTextblock)
    return !1;
  let o = n.resolve(yo(i, !0, !0));
  return !o.parent.isTextblock || o.pos > t || yo(o, !0, !1) < t ? !1 : r.parent.content.cut(r.parentOffset).eq(o.parent.content);
}
function yo(n, e, t) {
  let r = n.depth, s = e ? n.end() : n.pos;
  for (; r > 0 && (e || n.indexAfter(r) == n.node(r).childCount); )
    r--, s++, e = !1;
  if (t) {
    let i = n.node(r).maybeChild(n.indexAfter(r));
    for (; i && !i.isLeaf; )
      i = i.firstChild, s++;
  }
  return s;
}
function Vy(n, e, t, r, s) {
  let i = n.findDiffStart(e, t);
  if (i == null)
    return null;
  let { a: o, b: a } = n.findDiffEnd(e, t + n.size, t + e.size);
  if (s == "end") {
    let l = Math.max(0, i - Math.min(o, a));
    r -= o + l - i;
  }
  if (o < i && n.size < e.size) {
    let l = r <= i && r >= o ? i - r : 0;
    i -= l, i && i < e.size && yu(e.textBetween(i - 1, i + 1)) && (i += l ? 1 : -1), a = i + (a - o), o = i;
  } else if (a < i) {
    let l = r <= i && r >= a ? i - r : 0;
    i -= l, i && i < n.size && yu(n.textBetween(i - 1, i + 1)) && (i += l ? 1 : -1), o = i + (o - a), a = i;
  }
  return { start: i, endA: o, endB: a };
}
function yu(n) {
  if (n.length != 2)
    return !1;
  let e = n.charCodeAt(0), t = n.charCodeAt(1);
  return e >= 56320 && e <= 57343 && t >= 55296 && t <= 56319;
}
class zy {
  /**
  Create a view. `place` may be a DOM node that the editor should
  be appended to, a function that will place it into the document,
  or an object whose `mount` property holds the node to use as the
  document container. If it is `null`, the editor will not be
  added to the document.
  */
  constructor(e, t) {
    this._root = null, this.focused = !1, this.trackWrites = null, this.mounted = !1, this.markCursor = null, this.cursorWrapper = null, this.lastSelectedViewDesc = void 0, this.input = new ly(), this.prevDirectPlugins = [], this.pluginViews = [], this.requiresGeckoHackNode = !1, this.dragging = null, this._props = t, this.state = t.state, this.directPlugins = t.plugins || [], this.directPlugins.forEach(ku), this.dispatch = this.dispatch.bind(this), this.dom = e && e.mount || document.createElement("div"), e && (e.appendChild ? e.appendChild(this.dom) : typeof e == "function" ? e(this.dom) : e.mount && (this.mounted = !0)), this.editable = wu(this), xu(this), this.nodeViews = Nu(this), this.docView = eu(this.state.doc, vu(this), bo(this), this.dom, this), this.domObserver = new Ty(this, (r, s, i, o) => Ly(this, r, s, i, o)), this.domObserver.start(), cy(this), this.updatePluginViews();
  }
  /**
  Holds `true` when a
  [composition](https://w3c.github.io/uievents/#events-compositionevents)
  is active.
  */
  get composing() {
    return this.input.composing;
  }
  /**
  The view's current [props](https://prosemirror.net/docs/ref/#view.EditorProps).
  */
  get props() {
    if (this._props.state != this.state) {
      let e = this._props;
      this._props = {};
      for (let t in e)
        this._props[t] = e[t];
      this._props.state = this.state;
    }
    return this._props;
  }
  /**
  Update the view's props. Will immediately cause an update to
  the DOM.
  */
  update(e) {
    e.handleDOMEvents != this._props.handleDOMEvents && sa(this);
    let t = this._props;
    this._props = e, e.plugins && (e.plugins.forEach(ku), this.directPlugins = e.plugins), this.updateStateInner(e.state, t);
  }
  /**
  Update the view by updating existing props object with the object
  given as argument. Equivalent to `view.update(Object.assign({},
  view.props, props))`.
  */
  setProps(e) {
    let t = {};
    for (let r in this._props)
      t[r] = this._props[r];
    t.state = this.state;
    for (let r in e)
      t[r] = e[r];
    this.update(t);
  }
  /**
  Update the editor's `state` prop, without touching any of the
  other props.
  */
  updateState(e) {
    this.updateStateInner(e, this._props);
  }
  updateStateInner(e, t) {
    var r;
    let s = this.state, i = !1, o = !1;
    e.storedMarks && this.composing && (m0(this), o = !0), this.state = e;
    let a = s.plugins != e.plugins || this._props.plugins != t.plugins;
    if (a || this._props.plugins != t.plugins || this._props.nodeViews != t.nodeViews) {
      let h = Nu(this);
      jy(h, this.nodeViews) && (this.nodeViews = h, i = !0);
    }
    (a || t.handleDOMEvents != this._props.handleDOMEvents) && sa(this), this.editable = wu(this), xu(this);
    let l = bo(this), c = vu(this), d = s.plugins != e.plugins && !s.doc.eq(e.doc) ? "reset" : e.scrollToSelection > s.scrollToSelection ? "to selection" : "preserve", f = i || !this.docView.matchesNode(e.doc, c, l);
    (f || !e.selection.eq(s.selection)) && (o = !0);
    let m = d == "preserve" && o && this.dom.style.overflowAnchor == null && k6(this);
    if (o) {
      this.domObserver.stop();
      let h = f && (at || Ge) && !this.composing && !s.selection.empty && !e.selection.empty && Fy(s.selection, e.selection);
      if (f) {
        let p = Ge ? this.trackWrites = this.domSelectionRange().focusNode : null;
        (i || !this.docView.update(e.doc, c, l, this)) && (this.docView.updateOuterDeco([]), this.docView.destroy(), this.docView = eu(e.doc, c, l, this.dom, this)), p && !this.trackWrites && (h = !0);
      }
      h || !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelectionRange()) && K6(this)) ? Gt(this, h) : (e0(this, e.selection), this.domObserver.setCurSelection()), this.domObserver.start();
    }
    this.updatePluginViews(s), !((r = this.dragging) === null || r === void 0) && r.node && !s.doc.eq(e.doc) && this.updateDraggedNode(this.dragging, s), d == "reset" ? this.dom.scrollTop = 0 : d == "to selection" ? this.scrollToSelection() : m && M6(m);
  }
  /**
  @internal
  */
  scrollToSelection() {
    let e = this.domSelectionRange().focusNode;
    if (!this.someProp("handleScrollToSelection", (t) => t(this)))
      if (this.state.selection instanceof X) {
        let t = this.docView.domAfterPos(this.state.selection.from);
        t.nodeType == 1 && Kc(this, t.getBoundingClientRect(), e);
      } else
        Kc(this, this.coordsAtPos(this.state.selection.head, 1), e);
  }
  destroyPluginViews() {
    let e;
    for (; e = this.pluginViews.pop(); )
      e.destroy && e.destroy();
  }
  updatePluginViews(e) {
    if (!e || e.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {
      this.prevDirectPlugins = this.directPlugins, this.destroyPluginViews();
      for (let t = 0; t < this.directPlugins.length; t++) {
        let r = this.directPlugins[t];
        r.spec.view && this.pluginViews.push(r.spec.view(this));
      }
      for (let t = 0; t < this.state.plugins.length; t++) {
        let r = this.state.plugins[t];
        r.spec.view && this.pluginViews.push(r.spec.view(this));
      }
    } else
      for (let t = 0; t < this.pluginViews.length; t++) {
        let r = this.pluginViews[t];
        r.update && r.update(this, e);
      }
  }
  updateDraggedNode(e, t) {
    let r = e.node, s = -1;
    if (this.state.doc.nodeAt(r.from) == r.node)
      s = r.from;
    else {
      let i = r.from + (this.state.doc.content.size - t.doc.content.size);
      (i > 0 && this.state.doc.nodeAt(i)) == r.node && (s = i);
    }
    this.dragging = new p0(e.slice, e.move, s < 0 ? void 0 : X.create(this.state.doc, s));
  }
  someProp(e, t) {
    let r = this._props && this._props[e], s;
    if (r != null && (s = t ? t(r) : r))
      return s;
    for (let o = 0; o < this.directPlugins.length; o++) {
      let a = this.directPlugins[o].props[e];
      if (a != null && (s = t ? t(a) : a))
        return s;
    }
    let i = this.state.plugins;
    if (i)
      for (let o = 0; o < i.length; o++) {
        let a = i[o].props[e];
        if (a != null && (s = t ? t(a) : a))
          return s;
      }
  }
  /**
  Query whether the view has focus.
  */
  hasFocus() {
    if (at) {
      let e = this.root.activeElement;
      if (e == this.dom)
        return !0;
      if (!e || !this.dom.contains(e))
        return !1;
      for (; e && this.dom != e && this.dom.contains(e); ) {
        if (e.contentEditable == "false")
          return !1;
        e = e.parentElement;
      }
      return !0;
    }
    return this.root.activeElement == this.dom;
  }
  /**
  Focus the editor.
  */
  focus() {
    this.domObserver.stop(), this.editable && C6(this.dom), Gt(this), this.domObserver.start();
  }
  /**
  Get the document root in which the editor exists. This will
  usually be the top-level `document`, but might be a [shadow
  DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)
  root if the editor is inside one.
  */
  get root() {
    let e = this._root;
    if (e == null) {
      for (let t = this.dom.parentNode; t; t = t.parentNode)
        if (t.nodeType == 9 || t.nodeType == 11 && t.host)
          return t.getSelection || (Object.getPrototypeOf(t).getSelection = () => t.ownerDocument.getSelection()), this._root = t;
    }
    return e || document;
  }
  /**
  When an existing editor view is moved to a new document or
  shadow tree, call this to make it recompute its root.
  */
  updateRoot() {
    this._root = null;
  }
  /**
  Given a pair of viewport coordinates, return the document
  position that corresponds to them. May return null if the given
  coordinates aren't inside of the editor. When an object is
  returned, its `pos` property is the position nearest to the
  coordinates, and its `inside` property holds the position of the
  inner node that the position falls inside of, or -1 if it is at
  the top level, not in any node.
  */
  posAtCoords(e) {
    return O6(this, e);
  }
  /**
  Returns the viewport rectangle at a given document position.
  `left` and `right` will be the same number, as this returns a
  flat cursor-ish rectangle. If the position is between two things
  that aren't directly adjacent, `side` determines which element
  is used. When < 0, the element before the position is used,
  otherwise the element after.
  */
  coordsAtPos(e, t = 1) {
    return Wf(this, e, t);
  }
  /**
  Find the DOM position that corresponds to the given document
  position. When `side` is negative, find the position as close as
  possible to the content before the position. When positive,
  prefer positions close to the content after the position. When
  zero, prefer as shallow a position as possible.
  
  Note that you should **not** mutate the editor's internal DOM,
  only inspect it (and even that is usually not necessary).
  */
  domAtPos(e, t = 0) {
    return this.docView.domFromPos(e, t);
  }
  /**
  Find the DOM node that represents the document node after the
  given position. May return `null` when the position doesn't point
  in front of a node or if the node is inside an opaque node view.
  
  This is intended to be able to call things like
  `getBoundingClientRect` on that DOM node. Do **not** mutate the
  editor DOM directly, or add styling this way, since that will be
  immediately overriden by the editor as it redraws the node.
  */
  nodeDOM(e) {
    let t = this.docView.descAt(e);
    return t ? t.nodeDOM : null;
  }
  /**
  Find the document position that corresponds to a given DOM
  position. (Whenever possible, it is preferable to inspect the
  document structure directly, rather than poking around in the
  DOM, but sometimes—for example when interpreting an event
  target—you don't have a choice.)
  
  The `bias` parameter can be used to influence which side of a DOM
  node to use when the position is inside a leaf node.
  */
  posAtDOM(e, t, r = -1) {
    let s = this.docView.posFromDOM(e, t, r);
    if (s == null)
      throw new RangeError("DOM position not inside the editor");
    return s;
  }
  /**
  Find out whether the selection is at the end of a textblock when
  moving in a given direction. When, for example, given `"left"`,
  it will return true if moving left from the current cursor
  position would leave that position's parent textblock. Will apply
  to the view's current state by default, but it is possible to
  pass a different state.
  */
  endOfTextblock(e, t) {
    return I6(this, t || this.state, e);
  }
  /**
  Run the editor's paste logic with the given HTML string. The
  `event`, if given, will be passed to the
  [`handlePaste`](https://prosemirror.net/docs/ref/#view.EditorProps.handlePaste) hook.
  */
  pasteHTML(e, t) {
    return ls(this, "", e, !1, t || new ClipboardEvent("paste"));
  }
  /**
  Run the editor's paste logic with the given plain-text input.
  */
  pasteText(e, t) {
    return ls(this, e, null, !0, t || new ClipboardEvent("paste"));
  }
  /**
  Removes the editor from the DOM and destroys all [node
  views](https://prosemirror.net/docs/ref/#view.NodeView).
  */
  destroy() {
    this.docView && (uy(this), this.destroyPluginViews(), this.mounted ? (this.docView.update(this.state.doc, [], bo(this), this), this.dom.textContent = "") : this.dom.parentNode && this.dom.parentNode.removeChild(this.dom), this.docView.destroy(), this.docView = null);
  }
  /**
  This is true when the view has been
  [destroyed](https://prosemirror.net/docs/ref/#view.EditorView.destroy) (and thus should not be
  used anymore).
  */
  get isDestroyed() {
    return this.docView == null;
  }
  /**
  Used for testing.
  */
  dispatchEvent(e) {
    return fy(this, e);
  }
  /**
  Dispatch a transaction. Will call
  [`dispatchTransaction`](https://prosemirror.net/docs/ref/#view.DirectEditorProps.dispatchTransaction)
  when given, and otherwise defaults to applying the transaction to
  the current state and calling
  [`updateState`](https://prosemirror.net/docs/ref/#view.EditorView.updateState) with the result.
  This method is bound to the view instance, so that it can be
  easily passed around.
  */
  dispatch(e) {
    let t = this._props.dispatchTransaction;
    t ? t.call(this, e) : this.updateState(this.state.apply(e));
  }
  /**
  @internal
  */
  domSelectionRange() {
    return tt && this.root.nodeType === 11 && g6(this.dom.ownerDocument) == this.dom ? Dy(this) : this.domSelection();
  }
  /**
  @internal
  */
  domSelection() {
    return this.root.getSelection();
  }
}
function vu(n) {
  let e = /* @__PURE__ */ Object.create(null);
  return e.class = "ProseMirror", e.contenteditable = String(n.editable), n.someProp("attributes", (t) => {
    if (typeof t == "function" && (t = t(n.state)), t)
      for (let r in t)
        r == "class" ? e.class += " " + t[r] : r == "style" ? e.style = (e.style ? e.style + ";" : "") + t[r] : !e[r] && r != "contenteditable" && r != "nodeName" && (e[r] = String(t[r]));
  }), e.translate || (e.translate = "no"), [vt.node(0, n.state.doc.content.size, e)];
}
function xu(n) {
  if (n.markCursor) {
    let e = document.createElement("img");
    e.className = "ProseMirror-separator", e.setAttribute("mark-placeholder", "true"), e.setAttribute("alt", ""), n.cursorWrapper = { dom: e, deco: vt.widget(n.state.selection.head, e, { raw: !0, marks: n.markCursor }) };
  } else
    n.cursorWrapper = null;
}
function wu(n) {
  return !n.someProp("editable", (e) => e(n.state) === !1);
}
function Fy(n, e) {
  let t = Math.min(n.$anchor.sharedDepth(n.head), e.$anchor.sharedDepth(e.head));
  return n.$anchor.start(t) != e.$anchor.start(t);
}
function Nu(n) {
  let e = /* @__PURE__ */ Object.create(null);
  function t(r) {
    for (let s in r)
      Object.prototype.hasOwnProperty.call(e, s) || (e[s] = r[s]);
  }
  return n.someProp("nodeViews", t), n.someProp("markViews", t), e;
}
function jy(n, e) {
  let t = 0, r = 0;
  for (let s in n) {
    if (n[s] != e[s])
      return !0;
    t++;
  }
  for (let s in e)
    r++;
  return t != r;
}
function ku(n) {
  if (n.spec.state || n.spec.filterTransaction || n.spec.appendTransaction)
    throw new RangeError("Plugins passed directly to the view must not have a state component");
}
var Nn = {
  8: "Backspace",
  9: "Tab",
  10: "Enter",
  12: "NumLock",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  44: "PrintScreen",
  45: "Insert",
  46: "Delete",
  59: ";",
  61: "=",
  91: "Meta",
  92: "Meta",
  106: "*",
  107: "+",
  108: ",",
  109: "-",
  110: ".",
  111: "/",
  144: "NumLock",
  145: "ScrollLock",
  160: "Shift",
  161: "Shift",
  162: "Control",
  163: "Control",
  164: "Alt",
  165: "Alt",
  173: "-",
  186: ";",
  187: "=",
  188: ",",
  189: "-",
  190: ".",
  191: "/",
  192: "`",
  219: "[",
  220: "\\",
  221: "]",
  222: "'"
}, li = {
  48: ")",
  49: "!",
  50: "@",
  51: "#",
  52: "$",
  53: "%",
  54: "^",
  55: "&",
  56: "*",
  57: "(",
  59: ":",
  61: "+",
  173: "_",
  186: ":",
  187: "+",
  188: "<",
  189: "_",
  190: ">",
  191: "?",
  192: "~",
  219: "{",
  220: "|",
  221: "}",
  222: '"'
}, Uy = typeof navigator < "u" && /Mac/.test(navigator.platform), By = typeof navigator < "u" && /MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent);
for (var We = 0; We < 10; We++)
  Nn[48 + We] = Nn[96 + We] = String(We);
for (var We = 1; We <= 24; We++)
  Nn[We + 111] = "F" + We;
for (var We = 65; We <= 90; We++)
  Nn[We] = String.fromCharCode(We + 32), li[We] = String.fromCharCode(We);
for (var vo in Nn)
  li.hasOwnProperty(vo) || (li[vo] = Nn[vo]);
function Wy(n) {
  var e = Uy && n.metaKey && n.shiftKey && !n.ctrlKey && !n.altKey || By && n.shiftKey && n.key && n.key.length == 1 || n.key == "Unidentified", t = !e && n.key || (n.shiftKey ? li : Nn)[n.keyCode] || n.key || "Unidentified";
  return t == "Esc" && (t = "Escape"), t == "Del" && (t = "Delete"), t == "Left" && (t = "ArrowLeft"), t == "Up" && (t = "ArrowUp"), t == "Right" && (t = "ArrowRight"), t == "Down" && (t = "ArrowDown"), t;
}
const qy = typeof navigator < "u" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : !1;
function Ky(n) {
  let e = n.split(/-(?!$)/), t = e[e.length - 1];
  t == "Space" && (t = " ");
  let r, s, i, o;
  for (let a = 0; a < e.length - 1; a++) {
    let l = e[a];
    if (/^(cmd|meta|m)$/i.test(l))
      o = !0;
    else if (/^a(lt)?$/i.test(l))
      r = !0;
    else if (/^(c|ctrl|control)$/i.test(l))
      s = !0;
    else if (/^s(hift)?$/i.test(l))
      i = !0;
    else if (/^mod$/i.test(l))
      qy ? o = !0 : s = !0;
    else
      throw new Error("Unrecognized modifier name: " + l);
  }
  return r && (t = "Alt-" + t), s && (t = "Ctrl-" + t), o && (t = "Meta-" + t), i && (t = "Shift-" + t), t;
}
function Jy(n) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let t in n)
    e[Ky(t)] = n[t];
  return e;
}
function xo(n, e, t = !0) {
  return e.altKey && (n = "Alt-" + n), e.ctrlKey && (n = "Ctrl-" + n), e.metaKey && (n = "Meta-" + n), t && e.shiftKey && (n = "Shift-" + n), n;
}
function Gy(n) {
  return new it({ props: { handleKeyDown: x0(n) } });
}
function x0(n) {
  let e = Jy(n);
  return function(t, r) {
    let s = Wy(r), i, o = e[xo(s, r)];
    if (o && o(t.state, t.dispatch, t))
      return !0;
    if (s.length == 1 && s != " ") {
      if (r.shiftKey) {
        let a = e[xo(s, r, !1)];
        if (a && a(t.state, t.dispatch, t))
          return !0;
      }
      if ((r.shiftKey || r.altKey || r.metaKey || s.charCodeAt(0) > 127) && (i = Nn[r.keyCode]) && i != s) {
        let a = e[xo(i, r)];
        if (a && a(t.state, t.dispatch, t))
          return !0;
      }
    }
    return !1;
  };
}
const Yy = (n, e) => n.selection.empty ? !1 : (e && e(n.tr.deleteSelection().scrollIntoView()), !0);
function Qy(n, e) {
  let { $cursor: t } = n.selection;
  return !t || (e ? !e.endOfTextblock("backward", n) : t.parentOffset > 0) ? null : t;
}
const Xy = (n, e, t) => {
  let r = Qy(n, t);
  if (!r)
    return !1;
  let s = w0(r);
  if (!s) {
    let o = r.blockRange(), a = o && Zr(o);
    return a == null ? !1 : (e && e(n.tr.lift(o, a).scrollIntoView()), !0);
  }
  let i = s.nodeBefore;
  if (!i.type.spec.isolating && M0(n, s, e))
    return !0;
  if (r.parent.content.size == 0 && (Tr(i, "end") || X.isSelectable(i))) {
    let o = _a(n.doc, r.before(), r.after(), F.empty);
    if (o && o.slice.size < o.to - o.from) {
      if (e) {
        let a = n.tr.step(o);
        a.setSelection(Tr(i, "end") ? de.findFrom(a.doc.resolve(a.mapping.map(s.pos, -1)), -1) : X.create(a.doc, s.pos - i.nodeSize)), e(a.scrollIntoView());
      }
      return !0;
    }
  }
  return i.isAtom && s.depth == r.depth - 1 ? (e && e(n.tr.delete(s.pos - i.nodeSize, s.pos).scrollIntoView()), !0) : !1;
};
function Tr(n, e, t = !1) {
  for (let r = n; r; r = e == "start" ? r.firstChild : r.lastChild) {
    if (r.isTextblock)
      return !0;
    if (t && r.childCount != 1)
      return !1;
  }
  return !1;
}
const e4 = (n, e, t) => {
  let { $head: r, empty: s } = n.selection, i = r;
  if (!s)
    return !1;
  if (r.parent.isTextblock) {
    if (t ? !t.endOfTextblock("backward", n) : r.parentOffset > 0)
      return !1;
    i = w0(r);
  }
  let o = i && i.nodeBefore;
  return !o || !X.isSelectable(o) ? !1 : (e && e(n.tr.setSelection(X.create(n.doc, i.pos - o.nodeSize)).scrollIntoView()), !0);
};
function w0(n) {
  if (!n.parent.type.spec.isolating)
    for (let e = n.depth - 1; e >= 0; e--) {
      if (n.index(e) > 0)
        return n.doc.resolve(n.before(e + 1));
      if (n.node(e).type.spec.isolating)
        break;
    }
  return null;
}
function t4(n, e) {
  let { $cursor: t } = n.selection;
  return !t || (e ? !e.endOfTextblock("forward", n) : t.parentOffset < t.parent.content.size) ? null : t;
}
const n4 = (n, e, t) => {
  let r = t4(n, t);
  if (!r)
    return !1;
  let s = N0(r);
  if (!s)
    return !1;
  let i = s.nodeAfter;
  if (M0(n, s, e))
    return !0;
  if (r.parent.content.size == 0 && (Tr(i, "start") || X.isSelectable(i))) {
    let o = _a(n.doc, r.before(), r.after(), F.empty);
    if (o && o.slice.size < o.to - o.from) {
      if (e) {
        let a = n.tr.step(o);
        a.setSelection(Tr(i, "start") ? de.findFrom(a.doc.resolve(a.mapping.map(s.pos)), 1) : X.create(a.doc, a.mapping.map(s.pos))), e(a.scrollIntoView());
      }
      return !0;
    }
  }
  return i.isAtom && s.depth == r.depth - 1 ? (e && e(n.tr.delete(s.pos, s.pos + i.nodeSize).scrollIntoView()), !0) : !1;
}, r4 = (n, e, t) => {
  let { $head: r, empty: s } = n.selection, i = r;
  if (!s)
    return !1;
  if (r.parent.isTextblock) {
    if (t ? !t.endOfTextblock("forward", n) : r.parentOffset < r.parent.content.size)
      return !1;
    i = N0(r);
  }
  let o = i && i.nodeAfter;
  return !o || !X.isSelectable(o) ? !1 : (e && e(n.tr.setSelection(X.create(n.doc, i.pos)).scrollIntoView()), !0);
};
function N0(n) {
  if (!n.parent.type.spec.isolating)
    for (let e = n.depth - 1; e >= 0; e--) {
      let t = n.node(e);
      if (n.index(e) + 1 < t.childCount)
        return n.doc.resolve(n.after(e + 1));
      if (t.type.spec.isolating)
        break;
    }
  return null;
}
const s4 = (n, e) => {
  let t = n.selection, r = t instanceof X, s;
  if (r) {
    if (t.node.isTextblock || !En(n.doc, t.from))
      return !1;
    s = t.from;
  } else if (s = $i(n.doc, t.from, -1), s == null)
    return !1;
  if (e) {
    let i = n.tr.join(s);
    r && i.setSelection(X.create(i.doc, s - n.doc.resolve(s).nodeBefore.nodeSize)), e(i.scrollIntoView());
  }
  return !0;
}, i4 = (n, e) => {
  let t = n.selection, r;
  if (t instanceof X) {
    if (t.node.isTextblock || !En(n.doc, t.to))
      return !1;
    r = t.to;
  } else if (r = $i(n.doc, t.to, 1), r == null)
    return !1;
  return e && e(n.tr.join(r).scrollIntoView()), !0;
}, o4 = (n, e) => {
  let { $from: t, $to: r } = n.selection, s = t.blockRange(r), i = s && Zr(s);
  return i == null ? !1 : (e && e(n.tr.lift(s, i).scrollIntoView()), !0);
}, a4 = (n, e) => {
  let { $head: t, $anchor: r } = n.selection;
  return !t.parent.type.spec.code || !t.sameParent(r) ? !1 : (e && e(n.tr.insertText(`
`).scrollIntoView()), !0);
};
function k0(n) {
  for (let e = 0; e < n.edgeCount; e++) {
    let { type: t } = n.edge(e);
    if (t.isTextblock && !t.hasRequiredAttrs())
      return t;
  }
  return null;
}
const l4 = (n, e) => {
  let { $head: t, $anchor: r } = n.selection;
  if (!t.parent.type.spec.code || !t.sameParent(r))
    return !1;
  let s = t.node(-1), i = t.indexAfter(-1), o = k0(s.contentMatchAt(i));
  if (!o || !s.canReplaceWith(i, i, o))
    return !1;
  if (e) {
    let a = t.after(), l = n.tr.replaceWith(a, a, o.createAndFill());
    l.setSelection(de.near(l.doc.resolve(a), 1)), e(l.scrollIntoView());
  }
  return !0;
}, c4 = (n, e) => {
  let t = n.selection, { $from: r, $to: s } = t;
  if (t instanceof Rt || r.parent.inlineContent || s.parent.inlineContent)
    return !1;
  let i = k0(s.parent.contentMatchAt(s.indexAfter()));
  if (!i || !i.isTextblock)
    return !1;
  if (e) {
    let o = (!r.parentOffset && s.index() < s.parent.childCount ? r : s).pos, a = n.tr.insert(o, i.createAndFill());
    a.setSelection(oe.create(a.doc, o + 1)), e(a.scrollIntoView());
  }
  return !0;
}, u4 = (n, e) => {
  let { $cursor: t } = n.selection;
  if (!t || t.parent.content.size)
    return !1;
  if (t.depth > 1 && t.after() != t.end(-1)) {
    let i = t.before();
    if (wr(n.doc, i))
      return e && e(n.tr.split(i).scrollIntoView()), !0;
  }
  let r = t.blockRange(), s = r && Zr(r);
  return s == null ? !1 : (e && e(n.tr.lift(r, s).scrollIntoView()), !0);
}, d4 = (n, e) => {
  let { $from: t, to: r } = n.selection, s, i = t.sharedDepth(r);
  return i == 0 ? !1 : (s = t.before(i), e && e(n.tr.setSelection(X.create(n.doc, s))), !0);
};
function f4(n, e, t) {
  let r = e.nodeBefore, s = e.nodeAfter, i = e.index();
  return !r || !s || !r.type.compatibleContent(s.type) ? !1 : !r.content.size && e.parent.canReplace(i - 1, i) ? (t && t(n.tr.delete(e.pos - r.nodeSize, e.pos).scrollIntoView()), !0) : !e.parent.canReplace(i, i + 1) || !(s.isTextblock || En(n.doc, e.pos)) ? !1 : (t && t(n.tr.clearIncompatible(e.pos, r.type, r.contentMatchAt(r.childCount)).join(e.pos).scrollIntoView()), !0);
}
function M0(n, e, t) {
  let r = e.nodeBefore, s = e.nodeAfter, i, o;
  if (r.type.spec.isolating || s.type.spec.isolating)
    return !1;
  if (f4(n, e, t))
    return !0;
  let a = e.parent.canReplace(e.index(), e.index() + 1);
  if (a && (i = (o = r.contentMatchAt(r.childCount)).findWrapping(s.type)) && o.matchType(i[0] || s.type).validEnd) {
    if (t) {
      let f = e.pos + s.nodeSize, m = D.empty;
      for (let y = i.length - 1; y >= 0; y--)
        m = D.from(i[y].create(null, m));
      m = D.from(r.copy(m));
      let h = n.tr.step(new ze(e.pos - 1, f, e.pos, f, new F(m, 1, 0), i.length, !0)), p = f + 2 * i.length;
      En(h.doc, p) && h.join(p), t(h.scrollIntoView());
    }
    return !0;
  }
  let l = de.findFrom(e, 1), c = l && l.$from.blockRange(l.$to), d = c && Zr(c);
  if (d != null && d >= e.depth)
    return t && t(n.tr.lift(c, d).scrollIntoView()), !0;
  if (a && Tr(s, "start", !0) && Tr(r, "end")) {
    let f = r, m = [];
    for (; m.push(f), !f.isTextblock; )
      f = f.lastChild;
    let h = s, p = 1;
    for (; !h.isTextblock; h = h.firstChild)
      p++;
    if (f.canReplace(f.childCount, f.childCount, h.content)) {
      if (t) {
        let y = D.empty;
        for (let k = m.length - 1; k >= 0; k--)
          y = D.from(m[k].copy(y));
        let v = n.tr.step(new ze(e.pos - m.length, e.pos + s.nodeSize, e.pos + p, e.pos + s.nodeSize - p, new F(y, m.length, 0), 0, !0));
        t(v.scrollIntoView());
      }
      return !0;
    }
  }
  return !1;
}
function C0(n) {
  return function(e, t) {
    let r = e.selection, s = n < 0 ? r.$from : r.$to, i = s.depth;
    for (; s.node(i).isInline; ) {
      if (!i)
        return !1;
      i--;
    }
    return s.node(i).isTextblock ? (t && t(e.tr.setSelection(oe.create(e.doc, n < 0 ? s.start(i) : s.end(i)))), !0) : !1;
  };
}
const m4 = C0(-1), h4 = C0(1);
function p4(n, e = null) {
  return function(t, r) {
    let { $from: s, $to: i } = t.selection, o = s.blockRange(i), a = o && Ta(o, n, e);
    return a ? (r && r(t.tr.wrap(o, a).scrollIntoView()), !0) : !1;
  };
}
function Mu(n, e = null) {
  return function(t, r) {
    let s = !1;
    for (let i = 0; i < t.selection.ranges.length && !s; i++) {
      let { $from: { pos: o }, $to: { pos: a } } = t.selection.ranges[i];
      t.doc.nodesBetween(o, a, (l, c) => {
        if (s)
          return !1;
        if (!(!l.isTextblock || l.hasMarkup(n, e)))
          if (l.type == n)
            s = !0;
          else {
            let d = t.doc.resolve(c), f = d.index();
            s = d.parent.canReplaceWith(f, f + 1, n);
          }
      });
    }
    if (!s)
      return !1;
    if (r) {
      let i = t.tr;
      for (let o = 0; o < t.selection.ranges.length; o++) {
        let { $from: { pos: a }, $to: { pos: l } } = t.selection.ranges[o];
        i.setBlockType(a, l, n, e);
      }
      r(i.scrollIntoView());
    }
    return !0;
  };
}
typeof navigator < "u" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : typeof os < "u" && os.platform && os.platform() == "darwin";
function g4(n, e = null) {
  return function(t, r) {
    let { $from: s, $to: i } = t.selection, o = s.blockRange(i), a = !1, l = o;
    if (!o)
      return !1;
    if (o.depth >= 2 && s.node(o.depth - 1).type.compatibleContent(n) && o.startIndex == 0) {
      if (s.index(o.depth - 1) == 0)
        return !1;
      let d = t.doc.resolve(o.start - 2);
      l = new ei(d, d, o.depth), o.endIndex < o.parent.childCount && (o = new ei(s, t.doc.resolve(i.end(o.depth)), o.depth)), a = !0;
    }
    let c = Ta(l, n, e, o);
    return c ? (r && r(b4(t.tr, o, c, a, n).scrollIntoView()), !0) : !1;
  };
}
function b4(n, e, t, r, s) {
  let i = D.empty;
  for (let d = t.length - 1; d >= 0; d--)
    i = D.from(t[d].type.create(t[d].attrs, i));
  n.step(new ze(e.start - (r ? 2 : 0), e.end, e.start, e.end, new F(i, 0, 0), t.length, !0));
  let o = 0;
  for (let d = 0; d < t.length; d++)
    t[d].type == s && (o = d + 1);
  let a = t.length - o, l = e.start + t.length - (r ? 2 : 0), c = e.parent;
  for (let d = e.startIndex, f = e.endIndex, m = !0; d < f; d++, m = !1)
    !m && wr(n.doc, l, a) && (n.split(l, a), l += 2 * a), l += c.child(d).nodeSize;
  return n;
}
function y4(n) {
  return function(e, t) {
    let { $from: r, $to: s } = e.selection, i = r.blockRange(s, (o) => o.childCount > 0 && o.firstChild.type == n);
    return i ? t ? r.node(i.depth - 1).type == n ? v4(e, t, n, i) : x4(e, t, i) : !0 : !1;
  };
}
function v4(n, e, t, r) {
  let s = n.tr, i = r.end, o = r.$to.end(r.depth);
  i < o && (s.step(new ze(i - 1, o, i, o, new F(D.from(t.create(null, r.parent.copy())), 1, 0), 1, !0)), r = new ei(s.doc.resolve(r.$from.pos), s.doc.resolve(o), r.depth));
  const a = Zr(r);
  if (a == null)
    return !1;
  s.lift(r, a);
  let l = s.mapping.map(i, -1) - 1;
  return En(s.doc, l) && s.join(l), e(s.scrollIntoView()), !0;
}
function x4(n, e, t) {
  let r = n.tr, s = t.parent;
  for (let h = t.end, p = t.endIndex - 1, y = t.startIndex; p > y; p--)
    h -= s.child(p).nodeSize, r.delete(h - 1, h + 1);
  let i = r.doc.resolve(t.start), o = i.nodeAfter;
  if (r.mapping.map(t.end) != t.start + i.nodeAfter.nodeSize)
    return !1;
  let a = t.startIndex == 0, l = t.endIndex == s.childCount, c = i.node(-1), d = i.index(-1);
  if (!c.canReplace(d + (a ? 0 : 1), d + 1, o.content.append(l ? D.empty : D.from(s))))
    return !1;
  let f = i.pos, m = f + o.nodeSize;
  return r.step(new ze(f - (a ? 1 : 0), m + (l ? 1 : 0), f + 1, m - 1, new F((a ? D.empty : D.from(s.copy(D.empty))).append(l ? D.empty : D.from(s.copy(D.empty))), a ? 0 : 1, l ? 0 : 1), a ? 0 : 1)), e(r.scrollIntoView()), !0;
}
function w4(n) {
  return function(e, t) {
    let { $from: r, $to: s } = e.selection, i = r.blockRange(s, (c) => c.childCount > 0 && c.firstChild.type == n);
    if (!i)
      return !1;
    let o = i.startIndex;
    if (o == 0)
      return !1;
    let a = i.parent, l = a.child(o - 1);
    if (l.type != n)
      return !1;
    if (t) {
      let c = l.lastChild && l.lastChild.type == a.type, d = D.from(c ? n.create() : null), f = new F(D.from(n.create(null, D.from(a.type.create(null, d)))), c ? 3 : 1, 0), m = i.start, h = i.end;
      t(e.tr.step(new ze(m - (c ? 3 : 1), h, m, h, f, 1, !0)).scrollIntoView());
    }
    return !0;
  };
}
function Ui(n) {
  const { state: e, transaction: t } = n;
  let { selection: r } = t, { doc: s } = t, { storedMarks: i } = t;
  return {
    ...e,
    apply: e.apply.bind(e),
    applyTransaction: e.applyTransaction.bind(e),
    filterTransaction: e.filterTransaction,
    plugins: e.plugins,
    schema: e.schema,
    reconfigure: e.reconfigure.bind(e),
    toJSON: e.toJSON.bind(e),
    get storedMarks() {
      return i;
    },
    get selection() {
      return r;
    },
    get doc() {
      return s;
    },
    get tr() {
      return r = t.selection, s = t.doc, i = t.storedMarks, t;
    }
  };
}
class Bi {
  constructor(e) {
    this.editor = e.editor, this.rawCommands = this.editor.extensionManager.commands, this.customState = e.state;
  }
  get hasCustomState() {
    return !!this.customState;
  }
  get state() {
    return this.customState || this.editor.state;
  }
  get commands() {
    const { rawCommands: e, editor: t, state: r } = this, { view: s } = t, { tr: i } = r, o = this.buildProps(i);
    return Object.fromEntries(Object.entries(e).map(([a, l]) => [a, (...d) => {
      const f = l(...d)(o);
      return !i.getMeta("preventDispatch") && !this.hasCustomState && s.dispatch(i), f;
    }]));
  }
  get chain() {
    return () => this.createChain();
  }
  get can() {
    return () => this.createCan();
  }
  createChain(e, t = !0) {
    const { rawCommands: r, editor: s, state: i } = this, { view: o } = s, a = [], l = !!e, c = e || i.tr, d = () => (!l && t && !c.getMeta("preventDispatch") && !this.hasCustomState && o.dispatch(c), a.every((m) => m === !0)), f = {
      ...Object.fromEntries(Object.entries(r).map(([m, h]) => [m, (...y) => {
        const v = this.buildProps(c, t), k = h(...y)(v);
        return a.push(k), f;
      }])),
      run: d
    };
    return f;
  }
  createCan(e) {
    const { rawCommands: t, state: r } = this, s = !1, i = e || r.tr, o = this.buildProps(i, s);
    return {
      ...Object.fromEntries(Object.entries(t).map(([l, c]) => [l, (...d) => c(...d)({ ...o, dispatch: void 0 })])),
      chain: () => this.createChain(i, s)
    };
  }
  buildProps(e, t = !0) {
    const { rawCommands: r, editor: s, state: i } = this, { view: o } = s, a = {
      tr: e,
      editor: s,
      view: o,
      state: Ui({
        state: i,
        transaction: e
      }),
      dispatch: t ? () => {
      } : void 0,
      chain: () => this.createChain(e, t),
      can: () => this.createCan(e),
      get commands() {
        return Object.fromEntries(Object.entries(r).map(([l, c]) => [l, (...d) => c(...d)(a)]));
      }
    };
    return a;
  }
}
class N4 {
  constructor() {
    this.callbacks = {};
  }
  on(e, t) {
    return this.callbacks[e] || (this.callbacks[e] = []), this.callbacks[e].push(t), this;
  }
  emit(e, ...t) {
    const r = this.callbacks[e];
    return r && r.forEach((s) => s.apply(this, t)), this;
  }
  off(e, t) {
    const r = this.callbacks[e];
    return r && (t ? this.callbacks[e] = r.filter((s) => s !== t) : delete this.callbacks[e]), this;
  }
  removeAllListeners() {
    this.callbacks = {};
  }
}
function B(n, e, t) {
  return n.config[e] === void 0 && n.parent ? B(n.parent, e, t) : typeof n.config[e] == "function" ? n.config[e].bind({
    ...t,
    parent: n.parent ? B(n.parent, e, t) : null
  }) : n.config[e];
}
function Wi(n) {
  const e = n.filter((s) => s.type === "extension"), t = n.filter((s) => s.type === "node"), r = n.filter((s) => s.type === "mark");
  return {
    baseExtensions: e,
    nodeExtensions: t,
    markExtensions: r
  };
}
function R0(n) {
  const e = [], { nodeExtensions: t, markExtensions: r } = Wi(n), s = [...t, ...r], i = {
    default: null,
    rendered: !0,
    renderHTML: null,
    parseHTML: null,
    keepOnSplit: !0,
    isRequired: !1
  };
  return n.forEach((o) => {
    const a = {
      name: o.name,
      options: o.options,
      storage: o.storage
    }, l = B(o, "addGlobalAttributes", a);
    if (!l)
      return;
    l().forEach((d) => {
      d.types.forEach((f) => {
        Object.entries(d.attributes).forEach(([m, h]) => {
          e.push({
            type: f,
            name: m,
            attribute: {
              ...i,
              ...h
            }
          });
        });
      });
    });
  }), s.forEach((o) => {
    const a = {
      name: o.name,
      options: o.options,
      storage: o.storage
    }, l = B(o, "addAttributes", a);
    if (!l)
      return;
    const c = l();
    Object.entries(c).forEach(([d, f]) => {
      const m = {
        ...i,
        ...f
      };
      typeof (m == null ? void 0 : m.default) == "function" && (m.default = m.default()), m != null && m.isRequired && (m == null ? void 0 : m.default) === void 0 && delete m.default, e.push({
        type: o.name,
        name: d,
        attribute: m
      });
    });
  }), e;
}
function je(n, e) {
  if (typeof n == "string") {
    if (!e.nodes[n])
      throw Error(`There is no node type named '${n}'. Maybe you forgot to add the extension?`);
    return e.nodes[n];
  }
  return n;
}
function Ae(...n) {
  return n.filter((e) => !!e).reduce((e, t) => {
    const r = { ...e };
    return Object.entries(t).forEach(([s, i]) => {
      if (!r[s]) {
        r[s] = i;
        return;
      }
      if (s === "class") {
        const a = i ? i.split(" ") : [], l = r[s] ? r[s].split(" ") : [], c = a.filter((d) => !l.includes(d));
        r[s] = [...l, ...c].join(" ");
      } else
        s === "style" ? r[s] = [r[s], i].join("; ") : r[s] = i;
    }), r;
  }, {});
}
function ia(n, e) {
  return e.filter((t) => t.attribute.rendered).map((t) => t.attribute.renderHTML ? t.attribute.renderHTML(n.attrs) || {} : {
    [t.name]: n.attrs[t.name]
  }).reduce((t, r) => Ae(t, r), {});
}
function E0(n) {
  return typeof n == "function";
}
function ue(n, e = void 0, ...t) {
  return E0(n) ? e ? n.bind(e)(...t) : n(...t) : n;
}
function k4(n = {}) {
  return Object.keys(n).length === 0 && n.constructor === Object;
}
function M4(n) {
  return typeof n != "string" ? n : n.match(/^[+-]?(?:\d*\.)?\d+$/) ? Number(n) : n === "true" ? !0 : n === "false" ? !1 : n;
}
function Cu(n, e) {
  return n.style ? n : {
    ...n,
    getAttrs: (t) => {
      const r = n.getAttrs ? n.getAttrs(t) : n.attrs;
      if (r === !1)
        return !1;
      const s = e.reduce((i, o) => {
        const a = o.attribute.parseHTML ? o.attribute.parseHTML(t) : M4(t.getAttribute(o.name));
        return a == null ? i : {
          ...i,
          [o.name]: a
        };
      }, {});
      return { ...r, ...s };
    }
  };
}
function Ru(n) {
  return Object.fromEntries(
    // @ts-ignore
    Object.entries(n).filter(([e, t]) => e === "attrs" && k4(t) ? !1 : t != null)
  );
}
function C4(n, e) {
  var t;
  const r = R0(n), { nodeExtensions: s, markExtensions: i } = Wi(n), o = (t = s.find((c) => B(c, "topNode"))) === null || t === void 0 ? void 0 : t.name, a = Object.fromEntries(s.map((c) => {
    const d = r.filter((k) => k.type === c.name), f = {
      name: c.name,
      options: c.options,
      storage: c.storage,
      editor: e
    }, m = n.reduce((k, P) => {
      const q = B(P, "extendNodeSchema", f);
      return {
        ...k,
        ...q ? q(c) : {}
      };
    }, {}), h = Ru({
      ...m,
      content: ue(B(c, "content", f)),
      marks: ue(B(c, "marks", f)),
      group: ue(B(c, "group", f)),
      inline: ue(B(c, "inline", f)),
      atom: ue(B(c, "atom", f)),
      selectable: ue(B(c, "selectable", f)),
      draggable: ue(B(c, "draggable", f)),
      code: ue(B(c, "code", f)),
      defining: ue(B(c, "defining", f)),
      isolating: ue(B(c, "isolating", f)),
      attrs: Object.fromEntries(d.map((k) => {
        var P;
        return [k.name, { default: (P = k == null ? void 0 : k.attribute) === null || P === void 0 ? void 0 : P.default }];
      }))
    }), p = ue(B(c, "parseHTML", f));
    p && (h.parseDOM = p.map((k) => Cu(k, d)));
    const y = B(c, "renderHTML", f);
    y && (h.toDOM = (k) => y({
      node: k,
      HTMLAttributes: ia(k, d)
    }));
    const v = B(c, "renderText", f);
    return v && (h.toText = v), [c.name, h];
  })), l = Object.fromEntries(i.map((c) => {
    const d = r.filter((v) => v.type === c.name), f = {
      name: c.name,
      options: c.options,
      storage: c.storage,
      editor: e
    }, m = n.reduce((v, k) => {
      const P = B(k, "extendMarkSchema", f);
      return {
        ...v,
        ...P ? P(c) : {}
      };
    }, {}), h = Ru({
      ...m,
      inclusive: ue(B(c, "inclusive", f)),
      excludes: ue(B(c, "excludes", f)),
      group: ue(B(c, "group", f)),
      spanning: ue(B(c, "spanning", f)),
      code: ue(B(c, "code", f)),
      attrs: Object.fromEntries(d.map((v) => {
        var k;
        return [v.name, { default: (k = v == null ? void 0 : v.attribute) === null || k === void 0 ? void 0 : k.default }];
      }))
    }), p = ue(B(c, "parseHTML", f));
    p && (h.parseDOM = p.map((v) => Cu(v, d)));
    const y = B(c, "renderHTML", f);
    return y && (h.toDOM = (v) => y({
      mark: v,
      HTMLAttributes: ia(v, d)
    })), [c.name, h];
  }));
  return new Ib({
    topNode: o,
    nodes: a,
    marks: l
  });
}
function wo(n, e) {
  return e.nodes[n] || e.marks[n] || null;
}
function Eu(n, e) {
  return Array.isArray(e) ? e.some((t) => (typeof t == "string" ? t : t.name) === n.name) : e;
}
const R4 = (n, e = 500) => {
  let t = "";
  const r = n.parentOffset;
  return n.parent.nodesBetween(Math.max(0, r - e), r, (s, i, o, a) => {
    var l, c;
    const d = ((c = (l = s.type.spec).toText) === null || c === void 0 ? void 0 : c.call(l, {
      node: s,
      pos: i,
      parent: o,
      index: a
    })) || s.textContent || "%leaf%";
    t += d.slice(0, Math.max(0, r - i));
  }), t;
};
function ja(n) {
  return Object.prototype.toString.call(n) === "[object RegExp]";
}
class qi {
  constructor(e) {
    this.find = e.find, this.handler = e.handler;
  }
}
const E4 = (n, e) => {
  if (ja(e))
    return e.exec(n);
  const t = e(n);
  if (!t)
    return null;
  const r = [t.text];
  return r.index = t.index, r.input = n, r.data = t.data, t.replaceWith && (t.text.includes(t.replaceWith) || console.warn('[tiptap warn]: "inputRuleMatch.replaceWith" must be part of "inputRuleMatch.text".'), r.push(t.replaceWith)), r;
};
function No(n) {
  var e;
  const { editor: t, from: r, to: s, text: i, rules: o, plugin: a } = n, { view: l } = t;
  if (l.composing)
    return !1;
  const c = l.state.doc.resolve(r);
  if (
    // check for code node
    c.parent.type.spec.code || !((e = c.nodeBefore || c.nodeAfter) === null || e === void 0) && e.marks.find((m) => m.type.spec.code)
  )
    return !1;
  let d = !1;
  const f = R4(c) + i;
  return o.forEach((m) => {
    if (d)
      return;
    const h = E4(f, m.find);
    if (!h)
      return;
    const p = l.state.tr, y = Ui({
      state: l.state,
      transaction: p
    }), v = {
      from: r - (h[0].length - i.length),
      to: s
    }, { commands: k, chain: P, can: q } = new Bi({
      editor: t,
      state: y
    });
    m.handler({
      state: y,
      range: v,
      match: h,
      commands: k,
      chain: P,
      can: q
    }) === null || !p.steps.length || (p.setMeta(a, {
      transform: p,
      from: r,
      to: s,
      text: i
    }), l.dispatch(p), d = !0);
  }), d;
}
function S4(n) {
  const { editor: e, rules: t } = n, r = new it({
    state: {
      init() {
        return null;
      },
      apply(s, i) {
        const o = s.getMeta(r);
        return o || (s.selectionSet || s.docChanged ? null : i);
      }
    },
    props: {
      handleTextInput(s, i, o, a) {
        return No({
          editor: e,
          from: i,
          to: o,
          text: a,
          rules: t,
          plugin: r
        });
      },
      handleDOMEvents: {
        compositionend: (s) => (setTimeout(() => {
          const { $cursor: i } = s.state.selection;
          i && No({
            editor: e,
            from: i.pos,
            to: i.pos,
            text: "",
            rules: t,
            plugin: r
          });
        }), !1)
      },
      // add support for input rules to trigger on enter
      // this is useful for example for code blocks
      handleKeyDown(s, i) {
        if (i.key !== "Enter")
          return !1;
        const { $cursor: o } = s.state.selection;
        return o ? No({
          editor: e,
          from: o.pos,
          to: o.pos,
          text: `
`,
          rules: t,
          plugin: r
        }) : !1;
      }
    },
    // @ts-ignore
    isInputRules: !0
  });
  return r;
}
function A4(n) {
  return typeof n == "number";
}
class O4 {
  constructor(e) {
    this.find = e.find, this.handler = e.handler;
  }
}
const T4 = (n, e, t) => {
  if (ja(e))
    return [...n.matchAll(e)];
  const r = e(n, t);
  return r ? r.map((s) => {
    const i = [s.text];
    return i.index = s.index, i.input = n, i.data = s.data, s.replaceWith && (s.text.includes(s.replaceWith) || console.warn('[tiptap warn]: "pasteRuleMatch.replaceWith" must be part of "pasteRuleMatch.text".'), i.push(s.replaceWith)), i;
  }) : [];
};
function _4(n) {
  const { editor: e, state: t, from: r, to: s, rule: i, pasteEvent: o, dropEvent: a } = n, { commands: l, chain: c, can: d } = new Bi({
    editor: e,
    state: t
  }), f = [];
  return t.doc.nodesBetween(r, s, (h, p) => {
    if (!h.isTextblock || h.type.spec.code)
      return;
    const y = Math.max(r, p), v = Math.min(s, p + h.content.size), k = h.textBetween(y - p, v - p, void 0, "￼");
    T4(k, i.find, o).forEach((q) => {
      if (q.index === void 0)
        return;
      const te = y + q.index + 1, re = te + q[0].length, V = {
        from: t.tr.mapping.map(te),
        to: t.tr.mapping.map(re)
      }, K = i.handler({
        state: t,
        range: V,
        match: q,
        commands: l,
        chain: c,
        can: d,
        pasteEvent: o,
        dropEvent: a
      });
      f.push(K);
    });
  }), f.every((h) => h !== null);
}
function D4(n) {
  const { editor: e, rules: t } = n;
  let r = null, s = !1, i = !1, o = new ClipboardEvent("paste"), a = new DragEvent("drop");
  return t.map((c) => new it({
    // we register a global drag handler to track the current drag source element
    view(d) {
      const f = (m) => {
        var h;
        r = !((h = d.dom.parentElement) === null || h === void 0) && h.contains(m.target) ? d.dom.parentElement : null;
      };
      return window.addEventListener("dragstart", f), {
        destroy() {
          window.removeEventListener("dragstart", f);
        }
      };
    },
    props: {
      handleDOMEvents: {
        drop: (d, f) => (i = r === d.dom.parentElement, a = f, !1),
        paste: (d, f) => {
          var m;
          const h = (m = f.clipboardData) === null || m === void 0 ? void 0 : m.getData("text/html");
          return o = f, s = !!(h != null && h.includes("data-pm-slice")), !1;
        }
      }
    },
    appendTransaction: (d, f, m) => {
      const h = d[0], p = h.getMeta("uiEvent") === "paste" && !s, y = h.getMeta("uiEvent") === "drop" && !i;
      if (!p && !y)
        return;
      const v = f.doc.content.findDiffStart(m.doc.content), k = f.doc.content.findDiffEnd(m.doc.content);
      if (!A4(v) || !k || v === k.b)
        return;
      const P = m.tr, q = Ui({
        state: m,
        transaction: P
      });
      if (!(!_4({
        editor: e,
        state: q,
        from: Math.max(v - 1, 0),
        to: k.b - 1,
        rule: c,
        pasteEvent: o,
        dropEvent: a
      }) || !P.steps.length))
        return a = new DragEvent("drop"), o = new ClipboardEvent("paste"), P;
    }
  }));
}
function H4(n) {
  const e = n.filter((t, r) => n.indexOf(t) !== r);
  return [...new Set(e)];
}
class pr {
  constructor(e, t) {
    this.splittableMarks = [], this.editor = t, this.extensions = pr.resolve(e), this.schema = C4(this.extensions, t), this.extensions.forEach((r) => {
      var s;
      this.editor.extensionStorage[r.name] = r.storage;
      const i = {
        name: r.name,
        options: r.options,
        storage: r.storage,
        editor: this.editor,
        type: wo(r.name, this.schema)
      };
      r.type === "mark" && (!((s = ue(B(r, "keepOnSplit", i))) !== null && s !== void 0) || s) && this.splittableMarks.push(r.name);
      const o = B(r, "onBeforeCreate", i);
      o && this.editor.on("beforeCreate", o);
      const a = B(r, "onCreate", i);
      a && this.editor.on("create", a);
      const l = B(r, "onUpdate", i);
      l && this.editor.on("update", l);
      const c = B(r, "onSelectionUpdate", i);
      c && this.editor.on("selectionUpdate", c);
      const d = B(r, "onTransaction", i);
      d && this.editor.on("transaction", d);
      const f = B(r, "onFocus", i);
      f && this.editor.on("focus", f);
      const m = B(r, "onBlur", i);
      m && this.editor.on("blur", m);
      const h = B(r, "onDestroy", i);
      h && this.editor.on("destroy", h);
    });
  }
  static resolve(e) {
    const t = pr.sort(pr.flatten(e)), r = H4(t.map((s) => s.name));
    return r.length && console.warn(`[tiptap warn]: Duplicate extension names found: [${r.map((s) => `'${s}'`).join(", ")}]. This can lead to issues.`), t;
  }
  static flatten(e) {
    return e.map((t) => {
      const r = {
        name: t.name,
        options: t.options,
        storage: t.storage
      }, s = B(t, "addExtensions", r);
      return s ? [t, ...this.flatten(s())] : t;
    }).flat(10);
  }
  static sort(e) {
    return e.sort((r, s) => {
      const i = B(r, "priority") || 100, o = B(s, "priority") || 100;
      return i > o ? -1 : i < o ? 1 : 0;
    });
  }
  get commands() {
    return this.extensions.reduce((e, t) => {
      const r = {
        name: t.name,
        options: t.options,
        storage: t.storage,
        editor: this.editor,
        type: wo(t.name, this.schema)
      }, s = B(t, "addCommands", r);
      return s ? {
        ...e,
        ...s()
      } : e;
    }, {});
  }
  get plugins() {
    const { editor: e } = this, t = pr.sort([...this.extensions].reverse()), r = [], s = [], i = t.map((o) => {
      const a = {
        name: o.name,
        options: o.options,
        storage: o.storage,
        editor: e,
        type: wo(o.name, this.schema)
      }, l = [], c = B(o, "addKeyboardShortcuts", a);
      let d = {};
      if (o.type === "mark" && o.config.exitable && (d.ArrowRight = () => dt.handleExit({ editor: e, mark: o })), c) {
        const y = Object.fromEntries(Object.entries(c()).map(([v, k]) => [v, () => k({ editor: e })]));
        d = { ...d, ...y };
      }
      const f = Gy(d);
      l.push(f);
      const m = B(o, "addInputRules", a);
      Eu(o, e.options.enableInputRules) && m && r.push(...m());
      const h = B(o, "addPasteRules", a);
      Eu(o, e.options.enablePasteRules) && h && s.push(...h());
      const p = B(o, "addProseMirrorPlugins", a);
      if (p) {
        const y = p();
        l.push(...y);
      }
      return l;
    }).flat();
    return [
      S4({
        editor: e,
        rules: r
      }),
      ...D4({
        editor: e,
        rules: s
      }),
      ...i
    ];
  }
  get attributes() {
    return R0(this.extensions);
  }
  get nodeViews() {
    const { editor: e } = this, { nodeExtensions: t } = Wi(this.extensions);
    return Object.fromEntries(t.filter((r) => !!B(r, "addNodeView")).map((r) => {
      const s = this.attributes.filter((l) => l.type === r.name), i = {
        name: r.name,
        options: r.options,
        storage: r.storage,
        editor: e,
        type: je(r.name, this.schema)
      }, o = B(r, "addNodeView", i);
      if (!o)
        return [];
      const a = (l, c, d, f) => {
        const m = ia(l, s);
        return o()({
          editor: e,
          node: l,
          getPos: d,
          decorations: f,
          HTMLAttributes: m,
          extension: r
        });
      };
      return [r.name, a];
    }));
  }
}
function I4(n) {
  return Object.prototype.toString.call(n).slice(8, -1);
}
function ko(n) {
  return I4(n) !== "Object" ? !1 : n.constructor === Object && Object.getPrototypeOf(n) === Object.prototype;
}
function Ki(n, e) {
  const t = { ...n };
  return ko(n) && ko(e) && Object.keys(e).forEach((r) => {
    ko(e[r]) ? r in n ? t[r] = Ki(n[r], e[r]) : Object.assign(t, { [r]: e[r] }) : Object.assign(t, { [r]: e[r] });
  }), t;
}
class lt {
  constructor(e = {}) {
    this.type = "extension", this.name = "extension", this.parent = null, this.child = null, this.config = {
      name: this.name,
      defaultOptions: {}
    }, this.config = {
      ...this.config,
      ...e
    }, this.name = this.config.name, e.defaultOptions && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${this.name}".`), this.options = this.config.defaultOptions, this.config.addOptions && (this.options = ue(B(this, "addOptions", {
      name: this.name
    }))), this.storage = ue(B(this, "addStorage", {
      name: this.name,
      options: this.options
    })) || {};
  }
  static create(e = {}) {
    return new lt(e);
  }
  configure(e = {}) {
    const t = this.extend();
    return t.options = Ki(this.options, e), t.storage = ue(B(t, "addStorage", {
      name: t.name,
      options: t.options
    })), t;
  }
  extend(e = {}) {
    const t = new lt(e);
    return t.parent = this, this.child = t, t.name = e.name ? e.name : t.parent.name, e.defaultOptions && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${t.name}".`), t.options = ue(B(t, "addOptions", {
      name: t.name
    })), t.storage = ue(B(t, "addStorage", {
      name: t.name,
      options: t.options
    })), t;
  }
}
function S0(n, e, t) {
  const { from: r, to: s } = e, { blockSeparator: i = `

`, textSerializers: o = {} } = t || {};
  let a = "", l = !0;
  return n.nodesBetween(r, s, (c, d, f, m) => {
    var h;
    const p = o == null ? void 0 : o[c.type.name];
    p ? (c.isBlock && !l && (a += i, l = !0), f && (a += p({
      node: c,
      pos: d,
      parent: f,
      index: m,
      range: e
    }))) : c.isText ? (a += (h = c == null ? void 0 : c.text) === null || h === void 0 ? void 0 : h.slice(Math.max(r, d) - d, s - d), l = !1) : c.isBlock && !l && (a += i, l = !0);
  }), a;
}
function A0(n) {
  return Object.fromEntries(Object.entries(n.nodes).filter(([, e]) => e.spec.toText).map(([e, t]) => [e, t.spec.toText]));
}
const P4 = lt.create({
  name: "clipboardTextSerializer",
  addProseMirrorPlugins() {
    return [
      new it({
        key: new Tt("clipboardTextSerializer"),
        props: {
          clipboardTextSerializer: () => {
            const { editor: n } = this, { state: e, schema: t } = n, { doc: r, selection: s } = e, { ranges: i } = s, o = Math.min(...i.map((d) => d.$from.pos)), a = Math.max(...i.map((d) => d.$to.pos)), l = A0(t);
            return S0(r, { from: o, to: a }, {
              textSerializers: l
            });
          }
        }
      })
    ];
  }
}), L4 = () => ({ editor: n, view: e }) => (requestAnimationFrame(() => {
  var t;
  n.isDestroyed || (e.dom.blur(), (t = window == null ? void 0 : window.getSelection()) === null || t === void 0 || t.removeAllRanges());
}), !0), Z4 = (n = !1) => ({ commands: e }) => e.setContent("", n), $4 = () => ({ state: n, tr: e, dispatch: t }) => {
  const { selection: r } = e, { ranges: s } = r;
  return t && s.forEach(({ $from: i, $to: o }) => {
    n.doc.nodesBetween(i.pos, o.pos, (a, l) => {
      if (a.type.isText)
        return;
      const { doc: c, mapping: d } = e, f = c.resolve(d.map(l)), m = c.resolve(d.map(l + a.nodeSize)), h = f.blockRange(m);
      if (!h)
        return;
      const p = Zr(h);
      if (a.type.isTextblock) {
        const { defaultType: y } = f.parent.contentMatchAt(f.index());
        e.setNodeMarkup(h.start, y);
      }
      (p || p === 0) && e.lift(h, p);
    });
  }), !0;
}, V4 = (n) => (e) => n(e), z4 = () => ({ state: n, dispatch: e }) => c4(n, e), F4 = (n, e) => ({ editor: t, tr: r }) => {
  const { state: s } = t, i = s.doc.slice(n.from, n.to);
  r.deleteRange(n.from, n.to);
  const o = r.mapping.map(e);
  return r.insert(o, i.content), r.setSelection(new oe(r.doc.resolve(o - 1))), !0;
}, j4 = () => ({ tr: n, dispatch: e }) => {
  const { selection: t } = n, r = t.$anchor.node();
  if (r.content.size > 0)
    return !1;
  const s = n.selection.$anchor;
  for (let i = s.depth; i > 0; i -= 1)
    if (s.node(i).type === r.type) {
      if (e) {
        const a = s.before(i), l = s.after(i);
        n.delete(a, l).scrollIntoView();
      }
      return !0;
    }
  return !1;
}, U4 = (n) => ({ tr: e, state: t, dispatch: r }) => {
  const s = je(n, t.schema), i = e.selection.$anchor;
  for (let o = i.depth; o > 0; o -= 1)
    if (i.node(o).type === s) {
      if (r) {
        const l = i.before(o), c = i.after(o);
        e.delete(l, c).scrollIntoView();
      }
      return !0;
    }
  return !1;
}, B4 = (n) => ({ tr: e, dispatch: t }) => {
  const { from: r, to: s } = n;
  return t && e.delete(r, s), !0;
}, W4 = () => ({ state: n, dispatch: e }) => Yy(n, e), q4 = () => ({ commands: n }) => n.keyboardShortcut("Enter"), K4 = () => ({ state: n, dispatch: e }) => l4(n, e);
function ci(n, e, t = { strict: !0 }) {
  const r = Object.keys(e);
  return r.length ? r.every((s) => t.strict ? e[s] === n[s] : ja(e[s]) ? e[s].test(n[s]) : e[s] === n[s]) : !0;
}
function oa(n, e, t = {}) {
  return n.find((r) => r.type === e && ci(r.attrs, t));
}
function J4(n, e, t = {}) {
  return !!oa(n, e, t);
}
function Ua(n, e, t = {}) {
  if (!n || !e)
    return;
  let r = n.parent.childAfter(n.parentOffset);
  if (n.parentOffset === r.offset && r.offset !== 0 && (r = n.parent.childBefore(n.parentOffset)), !r.node)
    return;
  const s = oa([...r.node.marks], e, t);
  if (!s)
    return;
  let i = r.index, o = n.start() + r.offset, a = i + 1, l = o + r.node.nodeSize;
  for (oa([...r.node.marks], e, t); i > 0 && s.isInSet(n.parent.child(i - 1).marks); )
    i -= 1, o -= n.parent.child(i).nodeSize;
  for (; a < n.parent.childCount && J4([...n.parent.child(a).marks], e, t); )
    l += n.parent.child(a).nodeSize, a += 1;
  return {
    from: o,
    to: l
  };
}
function An(n, e) {
  if (typeof n == "string") {
    if (!e.marks[n])
      throw Error(`There is no mark type named '${n}'. Maybe you forgot to add the extension?`);
    return e.marks[n];
  }
  return n;
}
const G4 = (n, e = {}) => ({ tr: t, state: r, dispatch: s }) => {
  const i = An(n, r.schema), { doc: o, selection: a } = t, { $from: l, from: c, to: d } = a;
  if (s) {
    const f = Ua(l, i, e);
    if (f && f.from <= c && f.to >= d) {
      const m = oe.create(o, f.from, f.to);
      t.setSelection(m);
    }
  }
  return !0;
}, Y4 = (n) => (e) => {
  const t = typeof n == "function" ? n(e) : n;
  for (let r = 0; r < t.length; r += 1)
    if (t[r](e))
      return !0;
  return !1;
};
function O0(n) {
  return n instanceof oe;
}
function $n(n = 0, e = 0, t = 0) {
  return Math.min(Math.max(n, e), t);
}
function T0(n, e = null) {
  if (!e)
    return null;
  const t = de.atStart(n), r = de.atEnd(n);
  if (e === "start" || e === !0)
    return t;
  if (e === "end")
    return r;
  const s = t.from, i = r.to;
  return e === "all" ? oe.create(n, $n(0, s, i), $n(n.content.size, s, i)) : oe.create(n, $n(e, s, i), $n(e, s, i));
}
function Ba() {
  return [
    "iPad Simulator",
    "iPhone Simulator",
    "iPod Simulator",
    "iPad",
    "iPhone",
    "iPod"
  ].includes(navigator.platform) || navigator.userAgent.includes("Mac") && "ontouchend" in document;
}
const Q4 = (n = null, e = {}) => ({ editor: t, view: r, tr: s, dispatch: i }) => {
  e = {
    scrollIntoView: !0,
    ...e
  };
  const o = () => {
    Ba() && r.dom.focus(), requestAnimationFrame(() => {
      t.isDestroyed || (r.focus(), e != null && e.scrollIntoView && t.commands.scrollIntoView());
    });
  };
  if (r.hasFocus() && n === null || n === !1)
    return !0;
  if (i && n === null && !O0(t.state.selection))
    return o(), !0;
  const a = T0(s.doc, n) || t.state.selection, l = t.state.selection.eq(a);
  return i && (l || s.setSelection(a), l && s.storedMarks && s.setStoredMarks(s.storedMarks), o()), !0;
}, X4 = (n, e) => (t) => n.every((r, s) => e(r, { ...t, index: s })), ev = (n, e) => ({ tr: t, commands: r }) => r.insertContentAt({ from: t.selection.from, to: t.selection.to }, n, e), aa = (n) => {
  const e = n.childNodes;
  for (let t = e.length - 1; t >= 0; t -= 1) {
    const r = e[t];
    r.nodeType === 3 && r.nodeValue && !/\S/.test(r.nodeValue) ? n.removeChild(r) : r.nodeType === 1 && aa(r);
  }
  return n;
};
function Su(n) {
  const e = `<body>${n}</body>`, t = new window.DOMParser().parseFromString(e, "text/html").body;
  return aa(t), aa(t);
}
function ui(n, e, t) {
  if (t = {
    slice: !0,
    parseOptions: {},
    ...t
  }, typeof n == "object" && n !== null)
    try {
      return Array.isArray(n) && n.length > 0 ? D.fromArray(n.map((r) => e.nodeFromJSON(r))) : e.nodeFromJSON(n);
    } catch (r) {
      return console.warn("[tiptap warn]: Invalid content.", "Passed value:", n, "Error:", r), ui("", e, t);
    }
  if (typeof n == "string") {
    const r = Aa.fromSchema(e);
    return t.slice ? r.parseSlice(Su(n), t.parseOptions).content : r.parse(Su(n), t.parseOptions);
  }
  return ui("", e, t);
}
function tv(n, e, t) {
  const r = n.steps.length - 1;
  if (r < e)
    return;
  const s = n.steps[r];
  if (!(s instanceof Be || s instanceof ze))
    return;
  const i = n.mapping.maps[r];
  let o = 0;
  i.forEach((a, l, c, d) => {
    o === 0 && (o = d);
  }), n.setSelection(de.near(n.doc.resolve(o), t));
}
const nv = (n) => n.toString().startsWith("<"), rv = (n, e, t) => ({ tr: r, dispatch: s, editor: i }) => {
  if (s) {
    t = {
      parseOptions: {},
      updateSelection: !0,
      ...t
    };
    const o = ui(e, i.schema, {
      parseOptions: {
        preserveWhitespace: "full",
        ...t.parseOptions
      }
    });
    if (o.toString() === "<>")
      return !0;
    let { from: a, to: l } = typeof n == "number" ? { from: n, to: n } : { from: n.from, to: n.to }, c = !0, d = !0;
    if ((nv(o) ? o : [o]).forEach((m) => {
      m.check(), c = c ? m.isText && m.marks.length === 0 : !1, d = d ? m.isBlock : !1;
    }), a === l && d) {
      const { parent: m } = r.doc.resolve(a);
      m.isTextblock && !m.type.spec.code && !m.childCount && (a -= 1, l += 1);
    }
    c ? Array.isArray(e) ? r.insertText(e.map((m) => m.text || "").join(""), a, l) : typeof e == "object" && e && e.text ? r.insertText(e.text, a, l) : r.insertText(e, a, l) : r.replaceWith(a, l, o), t.updateSelection && tv(r, r.steps.length - 1, -1);
  }
  return !0;
}, sv = () => ({ state: n, dispatch: e }) => s4(n, e), iv = () => ({ state: n, dispatch: e }) => i4(n, e), ov = () => ({ state: n, dispatch: e }) => Xy(n, e), av = () => ({ state: n, dispatch: e }) => n4(n, e), lv = () => ({ tr: n, state: e, dispatch: t }) => {
  try {
    const r = $i(e.doc, e.selection.$from.pos, -1);
    return r == null ? !1 : (n.join(r, 2), t && t(n), !0);
  } catch {
    return !1;
  }
}, cv = () => ({ state: n, dispatch: e, tr: t }) => {
  try {
    const r = $i(n.doc, n.selection.$from.pos, 1);
    return r == null ? !1 : (t.join(r, 2), e && e(t), !0);
  } catch {
    return !1;
  }
};
function Wa() {
  return typeof navigator < "u" ? /Mac/.test(navigator.platform) : !1;
}
function uv(n) {
  const e = n.split(/-(?!$)/);
  let t = e[e.length - 1];
  t === "Space" && (t = " ");
  let r, s, i, o;
  for (let a = 0; a < e.length - 1; a += 1) {
    const l = e[a];
    if (/^(cmd|meta|m)$/i.test(l))
      o = !0;
    else if (/^a(lt)?$/i.test(l))
      r = !0;
    else if (/^(c|ctrl|control)$/i.test(l))
      s = !0;
    else if (/^s(hift)?$/i.test(l))
      i = !0;
    else if (/^mod$/i.test(l))
      Ba() || Wa() ? o = !0 : s = !0;
    else
      throw new Error(`Unrecognized modifier name: ${l}`);
  }
  return r && (t = `Alt-${t}`), s && (t = `Ctrl-${t}`), o && (t = `Meta-${t}`), i && (t = `Shift-${t}`), t;
}
const dv = (n) => ({ editor: e, view: t, tr: r, dispatch: s }) => {
  const i = uv(n).split(/-(?!$)/), o = i.find((c) => !["Alt", "Ctrl", "Meta", "Shift"].includes(c)), a = new KeyboardEvent("keydown", {
    key: o === "Space" ? " " : o,
    altKey: i.includes("Alt"),
    ctrlKey: i.includes("Ctrl"),
    metaKey: i.includes("Meta"),
    shiftKey: i.includes("Shift"),
    bubbles: !0,
    cancelable: !0
  }), l = e.captureTransaction(() => {
    t.someProp("handleKeyDown", (c) => c(t, a));
  });
  return l == null || l.steps.forEach((c) => {
    const d = c.map(r.mapping);
    d && s && r.maybeStep(d);
  }), !0;
};
function us(n, e, t = {}) {
  const { from: r, to: s, empty: i } = n.selection, o = e ? je(e, n.schema) : null, a = [];
  n.doc.nodesBetween(r, s, (f, m) => {
    if (f.isText)
      return;
    const h = Math.max(r, m), p = Math.min(s, m + f.nodeSize);
    a.push({
      node: f,
      from: h,
      to: p
    });
  });
  const l = s - r, c = a.filter((f) => o ? o.name === f.node.type.name : !0).filter((f) => ci(f.node.attrs, t, { strict: !1 }));
  return i ? !!c.length : c.reduce((f, m) => f + m.to - m.from, 0) >= l;
}
const fv = (n, e = {}) => ({ state: t, dispatch: r }) => {
  const s = je(n, t.schema);
  return us(t, s, e) ? o4(t, r) : !1;
}, mv = () => ({ state: n, dispatch: e }) => u4(n, e), hv = (n) => ({ state: e, dispatch: t }) => {
  const r = je(n, e.schema);
  return y4(r)(e, t);
}, pv = () => ({ state: n, dispatch: e }) => a4(n, e);
function Ji(n, e) {
  return e.nodes[n] ? "node" : e.marks[n] ? "mark" : null;
}
function Au(n, e) {
  const t = typeof e == "string" ? [e] : e;
  return Object.keys(n).reduce((r, s) => (t.includes(s) || (r[s] = n[s]), r), {});
}
const gv = (n, e) => ({ tr: t, state: r, dispatch: s }) => {
  let i = null, o = null;
  const a = Ji(typeof n == "string" ? n : n.name, r.schema);
  return a ? (a === "node" && (i = je(n, r.schema)), a === "mark" && (o = An(n, r.schema)), s && t.selection.ranges.forEach((l) => {
    r.doc.nodesBetween(l.$from.pos, l.$to.pos, (c, d) => {
      i && i === c.type && t.setNodeMarkup(d, void 0, Au(c.attrs, e)), o && c.marks.length && c.marks.forEach((f) => {
        o === f.type && t.addMark(d, d + c.nodeSize, o.create(Au(f.attrs, e)));
      });
    });
  }), !0) : !1;
}, bv = () => ({ tr: n, dispatch: e }) => (e && n.scrollIntoView(), !0), yv = () => ({ tr: n, commands: e }) => e.setTextSelection({
  from: 0,
  to: n.doc.content.size
}), vv = () => ({ state: n, dispatch: e }) => e4(n, e), xv = () => ({ state: n, dispatch: e }) => r4(n, e), wv = () => ({ state: n, dispatch: e }) => d4(n, e), Nv = () => ({ state: n, dispatch: e }) => h4(n, e), kv = () => ({ state: n, dispatch: e }) => m4(n, e);
function _0(n, e, t = {}) {
  return ui(n, e, { slice: !1, parseOptions: t });
}
const Mv = (n, e = !1, t = {}) => ({ tr: r, editor: s, dispatch: i }) => {
  const { doc: o } = r, a = _0(n, s.schema, t);
  return i && r.replaceWith(0, o.content.size, a).setMeta("preventUpdate", !e), !0;
};
function Gi(n, e) {
  const t = An(e, n.schema), { from: r, to: s, empty: i } = n.selection, o = [];
  i ? (n.storedMarks && o.push(...n.storedMarks), o.push(...n.selection.$head.marks())) : n.doc.nodesBetween(r, s, (l) => {
    o.push(...l.marks);
  });
  const a = o.find((l) => l.type.name === t.name);
  return a ? { ...a.attrs } : {};
}
function Cv(n, e) {
  const t = new Zf(n);
  return e.forEach((r) => {
    r.steps.forEach((s) => {
      t.step(s);
    });
  }), t;
}
function Rv(n) {
  for (let e = 0; e < n.edgeCount; e += 1) {
    const { type: t } = n.edge(e);
    if (t.isTextblock && !t.hasRequiredAttrs())
      return t;
  }
  return null;
}
function Ev(n, e, t) {
  const r = [];
  return n.nodesBetween(e.from, e.to, (s, i) => {
    t(s) && r.push({
      node: s,
      pos: i
    });
  }), r;
}
function Sv(n, e) {
  for (let t = n.depth; t > 0; t -= 1) {
    const r = n.node(t);
    if (e(r))
      return {
        pos: t > 0 ? n.before(t) : 0,
        start: n.start(t),
        depth: t,
        node: r
      };
  }
}
function qa(n) {
  return (e) => Sv(e.$from, n);
}
function Av(n, e) {
  const t = Zt.fromSchema(e).serializeFragment(n), s = document.implementation.createHTMLDocument().createElement("div");
  return s.appendChild(t), s.innerHTML;
}
function Ov(n, e) {
  const t = {
    from: 0,
    to: n.content.size
  };
  return S0(n, t, e);
}
function Tv(n, e) {
  const t = je(e, n.schema), { from: r, to: s } = n.selection, i = [];
  n.doc.nodesBetween(r, s, (a) => {
    i.push(a);
  });
  const o = i.reverse().find((a) => a.type.name === t.name);
  return o ? { ...o.attrs } : {};
}
function D0(n, e) {
  const t = Ji(typeof e == "string" ? e : e.name, n.schema);
  return t === "node" ? Tv(n, e) : t === "mark" ? Gi(n, e) : {};
}
function _v(n, e = JSON.stringify) {
  const t = {};
  return n.filter((r) => {
    const s = e(r);
    return Object.prototype.hasOwnProperty.call(t, s) ? !1 : t[s] = !0;
  });
}
function Dv(n) {
  const e = _v(n);
  return e.length === 1 ? e : e.filter((t, r) => !e.filter((i, o) => o !== r).some((i) => t.oldRange.from >= i.oldRange.from && t.oldRange.to <= i.oldRange.to && t.newRange.from >= i.newRange.from && t.newRange.to <= i.newRange.to));
}
function Hv(n) {
  const { mapping: e, steps: t } = n, r = [];
  return e.maps.forEach((s, i) => {
    const o = [];
    if (s.ranges.length)
      s.forEach((a, l) => {
        o.push({ from: a, to: l });
      });
    else {
      const { from: a, to: l } = t[i];
      if (a === void 0 || l === void 0)
        return;
      o.push({ from: a, to: l });
    }
    o.forEach(({ from: a, to: l }) => {
      const c = e.slice(i).map(a, -1), d = e.slice(i).map(l), f = e.invert().map(c, -1), m = e.invert().map(d);
      r.push({
        oldRange: {
          from: f,
          to: m
        },
        newRange: {
          from: c,
          to: d
        }
      });
    });
  }), Dv(r);
}
function Ka(n, e, t) {
  const r = [];
  return n === e ? t.resolve(n).marks().forEach((s) => {
    const i = t.resolve(n - 1), o = Ua(i, s.type);
    o && r.push({
      mark: s,
      ...o
    });
  }) : t.nodesBetween(n, e, (s, i) => {
    !s || s.nodeSize === void 0 || r.push(...s.marks.map((o) => ({
      from: i,
      to: i + s.nodeSize,
      mark: o
    })));
  }), r;
}
function js(n, e, t) {
  return Object.fromEntries(Object.entries(t).filter(([r]) => {
    const s = n.find((i) => i.type === e && i.name === r);
    return s ? s.attribute.keepOnSplit : !1;
  }));
}
function la(n, e, t = {}) {
  const { empty: r, ranges: s } = n.selection, i = e ? An(e, n.schema) : null;
  if (r)
    return !!(n.storedMarks || n.selection.$from.marks()).filter((f) => i ? i.name === f.type.name : !0).find((f) => ci(f.attrs, t, { strict: !1 }));
  let o = 0;
  const a = [];
  if (s.forEach(({ $from: f, $to: m }) => {
    const h = f.pos, p = m.pos;
    n.doc.nodesBetween(h, p, (y, v) => {
      if (!y.isText && !y.marks.length)
        return;
      const k = Math.max(h, v), P = Math.min(p, v + y.nodeSize), q = P - k;
      o += q, a.push(...y.marks.map((te) => ({
        mark: te,
        from: k,
        to: P
      })));
    });
  }), o === 0)
    return !1;
  const l = a.filter((f) => i ? i.name === f.mark.type.name : !0).filter((f) => ci(f.mark.attrs, t, { strict: !1 })).reduce((f, m) => f + m.to - m.from, 0), c = a.filter((f) => i ? f.mark.type !== i && f.mark.type.excludes(i) : !0).reduce((f, m) => f + m.to - m.from, 0);
  return (l > 0 ? l + c : l) >= o;
}
function Iv(n, e, t = {}) {
  if (!e)
    return us(n, null, t) || la(n, null, t);
  const r = Ji(e, n.schema);
  return r === "node" ? us(n, e, t) : r === "mark" ? la(n, e, t) : !1;
}
function Ou(n, e) {
  const { nodeExtensions: t } = Wi(e), r = t.find((o) => o.name === n);
  if (!r)
    return !1;
  const s = {
    name: r.name,
    options: r.options,
    storage: r.storage
  }, i = ue(B(r, "group", s));
  return typeof i != "string" ? !1 : i.split(" ").includes("list");
}
function Pv(n) {
  var e;
  const t = (e = n.type.createAndFill()) === null || e === void 0 ? void 0 : e.toJSON(), r = n.toJSON();
  return JSON.stringify(t) === JSON.stringify(r);
}
function Lv(n, e, t) {
  var r;
  const { selection: s } = e;
  let i = null;
  if (O0(s) && (i = s.$cursor), i) {
    const a = (r = n.storedMarks) !== null && r !== void 0 ? r : i.marks();
    return !!t.isInSet(a) || !a.some((l) => l.type.excludes(t));
  }
  const { ranges: o } = s;
  return o.some(({ $from: a, $to: l }) => {
    let c = a.depth === 0 ? n.doc.inlineContent && n.doc.type.allowsMarkType(t) : !1;
    return n.doc.nodesBetween(a.pos, l.pos, (d, f, m) => {
      if (c)
        return !1;
      if (d.isInline) {
        const h = !m || m.type.allowsMarkType(t), p = !!t.isInSet(d.marks) || !d.marks.some((y) => y.type.excludes(t));
        c = h && p;
      }
      return !c;
    }), c;
  });
}
const Zv = (n, e = {}) => ({ tr: t, state: r, dispatch: s }) => {
  const { selection: i } = t, { empty: o, ranges: a } = i, l = An(n, r.schema);
  if (s)
    if (o) {
      const c = Gi(r, l);
      t.addStoredMark(l.create({
        ...c,
        ...e
      }));
    } else
      a.forEach((c) => {
        const d = c.$from.pos, f = c.$to.pos;
        r.doc.nodesBetween(d, f, (m, h) => {
          const p = Math.max(h, d), y = Math.min(h + m.nodeSize, f);
          m.marks.find((k) => k.type === l) ? m.marks.forEach((k) => {
            l === k.type && t.addMark(p, y, l.create({
              ...k.attrs,
              ...e
            }));
          }) : t.addMark(p, y, l.create(e));
        });
      });
  return Lv(r, t, l);
}, $v = (n, e) => ({ tr: t }) => (t.setMeta(n, e), !0), Vv = (n, e = {}) => ({ state: t, dispatch: r, chain: s }) => {
  const i = je(n, t.schema);
  return i.isTextblock ? s().command(({ commands: o }) => Mu(i, e)(t) ? !0 : o.clearNodes()).command(({ state: o }) => Mu(i, e)(o, r)).run() : (console.warn('[tiptap warn]: Currently "setNode()" only supports text block nodes.'), !1);
}, zv = (n) => ({ tr: e, dispatch: t }) => {
  if (t) {
    const { doc: r } = e, s = $n(n, 0, r.content.size), i = X.create(r, s);
    e.setSelection(i);
  }
  return !0;
}, Fv = (n) => ({ tr: e, dispatch: t }) => {
  if (t) {
    const { doc: r } = e, { from: s, to: i } = typeof n == "number" ? { from: n, to: n } : n, o = oe.atStart(r).from, a = oe.atEnd(r).to, l = $n(s, o, a), c = $n(i, o, a), d = oe.create(r, l, c);
    e.setSelection(d);
  }
  return !0;
}, jv = (n) => ({ state: e, dispatch: t }) => {
  const r = je(n, e.schema);
  return w4(r)(e, t);
};
function Tu(n, e) {
  const t = n.storedMarks || n.selection.$to.parentOffset && n.selection.$from.marks();
  if (t) {
    const r = t.filter((s) => e == null ? void 0 : e.includes(s.type.name));
    n.tr.ensureMarks(r);
  }
}
const Uv = ({ keepMarks: n = !0 } = {}) => ({ tr: e, state: t, dispatch: r, editor: s }) => {
  const { selection: i, doc: o } = e, { $from: a, $to: l } = i, c = s.extensionManager.attributes, d = js(c, a.node().type.name, a.node().attrs);
  if (i instanceof X && i.node.isBlock)
    return !a.parentOffset || !wr(o, a.pos) ? !1 : (r && (n && Tu(t, s.extensionManager.splittableMarks), e.split(a.pos).scrollIntoView()), !0);
  if (!a.parent.isBlock)
    return !1;
  if (r) {
    const f = l.parentOffset === l.parent.content.size;
    i instanceof oe && e.deleteSelection();
    const m = a.depth === 0 ? void 0 : Rv(a.node(-1).contentMatchAt(a.indexAfter(-1)));
    let h = f && m ? [
      {
        type: m,
        attrs: d
      }
    ] : void 0, p = wr(e.doc, e.mapping.map(a.pos), 1, h);
    if (!h && !p && wr(e.doc, e.mapping.map(a.pos), 1, m ? [{ type: m }] : void 0) && (p = !0, h = m ? [
      {
        type: m,
        attrs: d
      }
    ] : void 0), p && (e.split(e.mapping.map(a.pos), 1, h), m && !f && !a.parentOffset && a.parent.type !== m)) {
      const y = e.mapping.map(a.before()), v = e.doc.resolve(y);
      a.node(-1).canReplaceWith(v.index(), v.index() + 1, m) && e.setNodeMarkup(e.mapping.map(a.before()), m);
    }
    n && Tu(t, s.extensionManager.splittableMarks), e.scrollIntoView();
  }
  return !0;
}, Bv = (n) => ({ tr: e, state: t, dispatch: r, editor: s }) => {
  var i;
  const o = je(n, t.schema), { $from: a, $to: l } = t.selection, c = t.selection.node;
  if (c && c.isBlock || a.depth < 2 || !a.sameParent(l))
    return !1;
  const d = a.node(-1);
  if (d.type !== o)
    return !1;
  const f = s.extensionManager.attributes;
  if (a.parent.content.size === 0 && a.node(-1).childCount === a.indexAfter(-1)) {
    if (a.depth === 2 || a.node(-3).type !== o || a.index(-2) !== a.node(-2).childCount - 1)
      return !1;
    if (r) {
      let v = D.empty;
      const k = a.index(-1) ? 1 : a.index(-2) ? 2 : 3;
      for (let K = a.depth - k; K >= a.depth - 3; K -= 1)
        v = D.from(a.node(K).copy(v));
      const P = a.indexAfter(-1) < a.node(-2).childCount ? 1 : a.indexAfter(-2) < a.node(-3).childCount ? 2 : 3, q = js(f, a.node().type.name, a.node().attrs), te = ((i = o.contentMatch.defaultType) === null || i === void 0 ? void 0 : i.createAndFill(q)) || void 0;
      v = v.append(D.from(o.createAndFill(null, te) || void 0));
      const re = a.before(a.depth - (k - 1));
      e.replace(re, a.after(-P), new F(v, 4 - k, 0));
      let V = -1;
      e.doc.nodesBetween(re, e.doc.content.size, (K, w) => {
        if (V > -1)
          return !1;
        K.isTextblock && K.content.size === 0 && (V = w + 1);
      }), V > -1 && e.setSelection(oe.near(e.doc.resolve(V))), e.scrollIntoView();
    }
    return !0;
  }
  const m = l.pos === a.end() ? d.contentMatchAt(0).defaultType : null, h = js(f, d.type.name, d.attrs), p = js(f, a.node().type.name, a.node().attrs);
  e.delete(a.pos, l.pos);
  const y = m ? [
    { type: o, attrs: h },
    { type: m, attrs: p }
  ] : [{ type: o, attrs: h }];
  if (!wr(e.doc, a.pos, 2))
    return !1;
  if (r) {
    const { selection: v, storedMarks: k } = t, { splittableMarks: P } = s.extensionManager, q = k || v.$to.parentOffset && v.$from.marks();
    if (e.split(a.pos, 2, y).scrollIntoView(), !q || !r)
      return !0;
    const te = q.filter((re) => P.includes(re.type.name));
    e.ensureMarks(te);
  }
  return !0;
}, Mo = (n, e) => {
  const t = qa((o) => o.type === e)(n.selection);
  if (!t)
    return !0;
  const r = n.doc.resolve(Math.max(0, t.pos - 1)).before(t.depth);
  if (r === void 0)
    return !0;
  const s = n.doc.nodeAt(r);
  return t.node.type === (s == null ? void 0 : s.type) && En(n.doc, t.pos) && n.join(t.pos), !0;
}, Co = (n, e) => {
  const t = qa((o) => o.type === e)(n.selection);
  if (!t)
    return !0;
  const r = n.doc.resolve(t.start).after(t.depth);
  if (r === void 0)
    return !0;
  const s = n.doc.nodeAt(r);
  return t.node.type === (s == null ? void 0 : s.type) && En(n.doc, r) && n.join(r), !0;
}, Wv = (n, e, t, r = {}) => ({ editor: s, tr: i, state: o, dispatch: a, chain: l, commands: c, can: d }) => {
  const { extensions: f, splittableMarks: m } = s.extensionManager, h = je(n, o.schema), p = je(e, o.schema), { selection: y, storedMarks: v } = o, { $from: k, $to: P } = y, q = k.blockRange(P), te = v || y.$to.parentOffset && y.$from.marks();
  if (!q)
    return !1;
  const re = qa((V) => Ou(V.type.name, f))(y);
  if (q.depth >= 1 && re && q.depth - re.depth <= 1) {
    if (re.node.type === h)
      return c.liftListItem(p);
    if (Ou(re.node.type.name, f) && h.validContent(re.node.content) && a)
      return l().command(() => (i.setNodeMarkup(re.pos, h), !0)).command(() => Mo(i, h)).command(() => Co(i, h)).run();
  }
  return !t || !te || !a ? l().command(() => d().wrapInList(h, r) ? !0 : c.clearNodes()).wrapInList(h, r).command(() => Mo(i, h)).command(() => Co(i, h)).run() : l().command(() => {
    const V = d().wrapInList(h, r), K = te.filter((w) => m.includes(w.type.name));
    return i.ensureMarks(K), V ? !0 : c.clearNodes();
  }).wrapInList(h, r).command(() => Mo(i, h)).command(() => Co(i, h)).run();
}, qv = (n, e = {}, t = {}) => ({ state: r, commands: s }) => {
  const { extendEmptyMarkRange: i = !1 } = t, o = An(n, r.schema);
  return la(r, o, e) ? s.unsetMark(o, { extendEmptyMarkRange: i }) : s.setMark(o, e);
}, Kv = (n, e, t = {}) => ({ state: r, commands: s }) => {
  const i = je(n, r.schema), o = je(e, r.schema);
  return us(r, i, t) ? s.setNode(o) : s.setNode(i, t);
}, Jv = (n, e = {}) => ({ state: t, commands: r }) => {
  const s = je(n, t.schema);
  return us(t, s, e) ? r.lift(s) : r.wrapIn(s, e);
}, Gv = () => ({ state: n, dispatch: e }) => {
  const t = n.plugins;
  for (let r = 0; r < t.length; r += 1) {
    const s = t[r];
    let i;
    if (s.spec.isInputRules && (i = s.getState(n))) {
      if (e) {
        const o = n.tr, a = i.transform;
        for (let l = a.steps.length - 1; l >= 0; l -= 1)
          o.step(a.steps[l].invert(a.docs[l]));
        if (i.text) {
          const l = o.doc.resolve(i.from).marks();
          o.replaceWith(i.from, i.to, n.schema.text(i.text, l));
        } else
          o.delete(i.from, i.to);
      }
      return !0;
    }
  }
  return !1;
}, Yv = () => ({ tr: n, dispatch: e }) => {
  const { selection: t } = n, { empty: r, ranges: s } = t;
  return r || e && s.forEach((i) => {
    n.removeMark(i.$from.pos, i.$to.pos);
  }), !0;
}, Qv = (n, e = {}) => ({ tr: t, state: r, dispatch: s }) => {
  var i;
  const { extendEmptyMarkRange: o = !1 } = e, { selection: a } = t, l = An(n, r.schema), { $from: c, empty: d, ranges: f } = a;
  if (!s)
    return !0;
  if (d && o) {
    let { from: m, to: h } = a;
    const p = (i = c.marks().find((v) => v.type === l)) === null || i === void 0 ? void 0 : i.attrs, y = Ua(c, l, p);
    y && (m = y.from, h = y.to), t.removeMark(m, h, l);
  } else
    f.forEach((m) => {
      t.removeMark(m.$from.pos, m.$to.pos, l);
    });
  return t.removeStoredMark(l), !0;
}, Xv = (n, e = {}) => ({ tr: t, state: r, dispatch: s }) => {
  let i = null, o = null;
  const a = Ji(typeof n == "string" ? n : n.name, r.schema);
  return a ? (a === "node" && (i = je(n, r.schema)), a === "mark" && (o = An(n, r.schema)), s && t.selection.ranges.forEach((l) => {
    const c = l.$from.pos, d = l.$to.pos;
    r.doc.nodesBetween(c, d, (f, m) => {
      i && i === f.type && t.setNodeMarkup(m, void 0, {
        ...f.attrs,
        ...e
      }), o && f.marks.length && f.marks.forEach((h) => {
        if (o === h.type) {
          const p = Math.max(m, c), y = Math.min(m + f.nodeSize, d);
          t.addMark(p, y, o.create({
            ...h.attrs,
            ...e
          }));
        }
      });
    });
  }), !0) : !1;
}, ex = (n, e = {}) => ({ state: t, dispatch: r }) => {
  const s = je(n, t.schema);
  return p4(s, e)(t, r);
}, tx = (n, e = {}) => ({ state: t, dispatch: r }) => {
  const s = je(n, t.schema);
  return g4(s, e)(t, r);
};
var nx = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  blur: L4,
  clearContent: Z4,
  clearNodes: $4,
  command: V4,
  createParagraphNear: z4,
  cut: F4,
  deleteCurrentNode: j4,
  deleteNode: U4,
  deleteRange: B4,
  deleteSelection: W4,
  enter: q4,
  exitCode: K4,
  extendMarkRange: G4,
  first: Y4,
  focus: Q4,
  forEach: X4,
  insertContent: ev,
  insertContentAt: rv,
  joinUp: sv,
  joinDown: iv,
  joinBackward: ov,
  joinForward: av,
  joinItemBackward: lv,
  joinItemForward: cv,
  keyboardShortcut: dv,
  lift: fv,
  liftEmptyBlock: mv,
  liftListItem: hv,
  newlineInCode: pv,
  resetAttributes: gv,
  scrollIntoView: bv,
  selectAll: yv,
  selectNodeBackward: vv,
  selectNodeForward: xv,
  selectParentNode: wv,
  selectTextblockEnd: Nv,
  selectTextblockStart: kv,
  setContent: Mv,
  setMark: Zv,
  setMeta: $v,
  setNode: Vv,
  setNodeSelection: zv,
  setTextSelection: Fv,
  sinkListItem: jv,
  splitBlock: Uv,
  splitListItem: Bv,
  toggleList: Wv,
  toggleMark: qv,
  toggleNode: Kv,
  toggleWrap: Jv,
  undoInputRule: Gv,
  unsetAllMarks: Yv,
  unsetMark: Qv,
  updateAttributes: Xv,
  wrapIn: ex,
  wrapInList: tx
});
const rx = lt.create({
  name: "commands",
  addCommands() {
    return {
      ...nx
    };
  }
}), sx = lt.create({
  name: "editable",
  addProseMirrorPlugins() {
    return [
      new it({
        key: new Tt("editable"),
        props: {
          editable: () => this.editor.options.editable
        }
      })
    ];
  }
}), ix = lt.create({
  name: "focusEvents",
  addProseMirrorPlugins() {
    const { editor: n } = this;
    return [
      new it({
        key: new Tt("focusEvents"),
        props: {
          handleDOMEvents: {
            focus: (e, t) => {
              n.isFocused = !0;
              const r = n.state.tr.setMeta("focus", { event: t }).setMeta("addToHistory", !1);
              return e.dispatch(r), !1;
            },
            blur: (e, t) => {
              n.isFocused = !1;
              const r = n.state.tr.setMeta("blur", { event: t }).setMeta("addToHistory", !1);
              return e.dispatch(r), !1;
            }
          }
        }
      })
    ];
  }
}), ox = lt.create({
  name: "keymap",
  addKeyboardShortcuts() {
    const n = () => this.editor.commands.first(({ commands: o }) => [
      () => o.undoInputRule(),
      // maybe convert first text block node to default node
      () => o.command(({ tr: a }) => {
        const { selection: l, doc: c } = a, { empty: d, $anchor: f } = l, { pos: m, parent: h } = f, p = f.parent.isTextblock ? a.doc.resolve(m - 1) : f, y = p.parent.type.spec.isolating, v = f.pos - f.parentOffset, k = y && p.parent.childCount === 1 ? v === f.pos : de.atStart(c).from === m;
        return !d || !k || !h.type.isTextblock || h.textContent.length ? !1 : o.clearNodes();
      }),
      () => o.deleteSelection(),
      () => o.joinBackward(),
      () => o.selectNodeBackward()
    ]), e = () => this.editor.commands.first(({ commands: o }) => [
      () => o.deleteSelection(),
      () => o.deleteCurrentNode(),
      () => o.joinForward(),
      () => o.selectNodeForward()
    ]), r = {
      Enter: () => this.editor.commands.first(({ commands: o }) => [
        () => o.newlineInCode(),
        () => o.createParagraphNear(),
        () => o.liftEmptyBlock(),
        () => o.splitBlock()
      ]),
      "Mod-Enter": () => this.editor.commands.exitCode(),
      Backspace: n,
      "Mod-Backspace": n,
      "Shift-Backspace": n,
      Delete: e,
      "Mod-Delete": e,
      "Mod-a": () => this.editor.commands.selectAll()
    }, s = {
      ...r
    }, i = {
      ...r,
      "Ctrl-h": n,
      "Alt-Backspace": n,
      "Ctrl-d": e,
      "Ctrl-Alt-Backspace": e,
      "Alt-Delete": e,
      "Alt-d": e,
      "Ctrl-a": () => this.editor.commands.selectTextblockStart(),
      "Ctrl-e": () => this.editor.commands.selectTextblockEnd()
    };
    return Ba() || Wa() ? i : s;
  },
  addProseMirrorPlugins() {
    return [
      // With this plugin we check if the whole document was selected and deleted.
      // In this case we will additionally call `clearNodes()` to convert e.g. a heading
      // to a paragraph if necessary.
      // This is an alternative to ProseMirror's `AllSelection`, which doesn’t work well
      // with many other commands.
      new it({
        key: new Tt("clearDocument"),
        appendTransaction: (n, e, t) => {
          if (!(n.some((p) => p.docChanged) && !e.doc.eq(t.doc)))
            return;
          const { empty: s, from: i, to: o } = e.selection, a = de.atStart(e.doc).from, l = de.atEnd(e.doc).to;
          if (s || !(i === a && o === l) || !(t.doc.textBetween(0, t.doc.content.size, " ", " ").length === 0))
            return;
          const f = t.tr, m = Ui({
            state: t,
            transaction: f
          }), { commands: h } = new Bi({
            editor: this.editor,
            state: m
          });
          if (h.clearNodes(), !!f.steps.length)
            return f;
        }
      })
    ];
  }
}), ax = lt.create({
  name: "tabindex",
  addProseMirrorPlugins() {
    return [
      new it({
        key: new Tt("tabindex"),
        props: {
          attributes: this.editor.isEditable ? { tabindex: "0" } : {}
        }
      })
    ];
  }
});
var lx = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  ClipboardTextSerializer: P4,
  Commands: rx,
  Editable: sx,
  FocusEvents: ix,
  Keymap: ox,
  Tabindex: ax
});
const cx = `.ProseMirror {
  position: relative;
}

.ProseMirror {
  word-wrap: break-word;
  white-space: pre-wrap;
  white-space: break-spaces;
  -webkit-font-variant-ligatures: none;
  font-variant-ligatures: none;
  font-feature-settings: "liga" 0; /* the above doesn't seem to work in Edge */
}

.ProseMirror [contenteditable="false"] {
  white-space: normal;
}

.ProseMirror [contenteditable="false"] [contenteditable="true"] {
  white-space: pre-wrap;
}

.ProseMirror pre {
  white-space: pre-wrap;
}

img.ProseMirror-separator {
  display: inline !important;
  border: none !important;
  margin: 0 !important;
  width: 1px !important;
  height: 1px !important;
}

.ProseMirror-gapcursor {
  display: none;
  pointer-events: none;
  position: absolute;
  margin: 0;
}

.ProseMirror-gapcursor:after {
  content: "";
  display: block;
  position: absolute;
  top: -2px;
  width: 20px;
  border-top: 1px solid black;
  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
}

@keyframes ProseMirror-cursor-blink {
  to {
    visibility: hidden;
  }
}

.ProseMirror-hideselection *::selection {
  background: transparent;
}

.ProseMirror-hideselection *::-moz-selection {
  background: transparent;
}

.ProseMirror-hideselection * {
  caret-color: transparent;
}

.ProseMirror-focused .ProseMirror-gapcursor {
  display: block;
}

.tippy-box[data-animation=fade][data-state=hidden] {
  opacity: 0
}`;
function ux(n, e, t) {
  const r = document.querySelector(`style[data-tiptap-style${t ? `-${t}` : ""}]`);
  if (r !== null)
    return r;
  const s = document.createElement("style");
  return e && s.setAttribute("nonce", e), s.setAttribute(`data-tiptap-style${t ? `-${t}` : ""}`, ""), s.innerHTML = n, document.getElementsByTagName("head")[0].appendChild(s), s;
}
let dx = class extends N4 {
  constructor(e = {}) {
    super(), this.isFocused = !1, this.extensionStorage = {}, this.options = {
      element: document.createElement("div"),
      content: "",
      injectCSS: !0,
      injectNonce: void 0,
      extensions: [],
      autofocus: !1,
      editable: !0,
      editorProps: {},
      parseOptions: {},
      enableInputRules: !0,
      enablePasteRules: !0,
      enableCoreExtensions: !0,
      onBeforeCreate: () => null,
      onCreate: () => null,
      onUpdate: () => null,
      onSelectionUpdate: () => null,
      onTransaction: () => null,
      onFocus: () => null,
      onBlur: () => null,
      onDestroy: () => null
    }, this.isCapturingTransaction = !1, this.capturedTransaction = null, this.setOptions(e), this.createExtensionManager(), this.createCommandManager(), this.createSchema(), this.on("beforeCreate", this.options.onBeforeCreate), this.emit("beforeCreate", { editor: this }), this.createView(), this.injectCSS(), this.on("create", this.options.onCreate), this.on("update", this.options.onUpdate), this.on("selectionUpdate", this.options.onSelectionUpdate), this.on("transaction", this.options.onTransaction), this.on("focus", this.options.onFocus), this.on("blur", this.options.onBlur), this.on("destroy", this.options.onDestroy), window.setTimeout(() => {
      this.isDestroyed || (this.commands.focus(this.options.autofocus), this.emit("create", { editor: this }));
    }, 0);
  }
  /**
   * Returns the editor storage.
   */
  get storage() {
    return this.extensionStorage;
  }
  /**
   * An object of all registered commands.
   */
  get commands() {
    return this.commandManager.commands;
  }
  /**
   * Create a command chain to call multiple commands at once.
   */
  chain() {
    return this.commandManager.chain();
  }
  /**
   * Check if a command or a command chain can be executed. Without executing it.
   */
  can() {
    return this.commandManager.can();
  }
  /**
   * Inject CSS styles.
   */
  injectCSS() {
    this.options.injectCSS && document && (this.css = ux(cx, this.options.injectNonce));
  }
  /**
   * Update editor options.
   *
   * @param options A list of options
   */
  setOptions(e = {}) {
    this.options = {
      ...this.options,
      ...e
    }, !(!this.view || !this.state || this.isDestroyed) && (this.options.editorProps && this.view.setProps(this.options.editorProps), this.view.updateState(this.state));
  }
  /**
   * Update editable state of the editor.
   */
  setEditable(e, t = !0) {
    this.setOptions({ editable: e }), t && this.emit("update", { editor: this, transaction: this.state.tr });
  }
  /**
   * Returns whether the editor is editable.
   */
  get isEditable() {
    return this.options.editable && this.view && this.view.editable;
  }
  /**
   * Returns the editor state.
   */
  get state() {
    return this.view.state;
  }
  /**
   * Register a ProseMirror plugin.
   *
   * @param plugin A ProseMirror plugin
   * @param handlePlugins Control how to merge the plugin into the existing plugins.
   */
  registerPlugin(e, t) {
    const r = E0(t) ? t(e, [...this.state.plugins]) : [...this.state.plugins, e], s = this.state.reconfigure({ plugins: r });
    this.view.updateState(s);
  }
  /**
   * Unregister a ProseMirror plugin.
   *
   * @param nameOrPluginKey The plugins name
   */
  unregisterPlugin(e) {
    if (this.isDestroyed)
      return;
    const t = typeof e == "string" ? `${e}$` : e.key, r = this.state.reconfigure({
      // @ts-ignore
      plugins: this.state.plugins.filter((s) => !s.key.startsWith(t))
    });
    this.view.updateState(r);
  }
  /**
   * Creates an extension manager.
   */
  createExtensionManager() {
    const t = [...this.options.enableCoreExtensions ? Object.values(lx) : [], ...this.options.extensions].filter((r) => ["extension", "node", "mark"].includes(r == null ? void 0 : r.type));
    this.extensionManager = new pr(t, this);
  }
  /**
   * Creates an command manager.
   */
  createCommandManager() {
    this.commandManager = new Bi({
      editor: this
    });
  }
  /**
   * Creates a ProseMirror schema.
   */
  createSchema() {
    this.schema = this.extensionManager.schema;
  }
  /**
   * Creates a ProseMirror view.
   */
  createView() {
    const e = _0(this.options.content, this.schema, this.options.parseOptions), t = T0(e, this.options.autofocus);
    this.view = new zy(this.options.element, {
      ...this.options.editorProps,
      dispatchTransaction: this.dispatchTransaction.bind(this),
      state: hr.create({
        doc: e,
        selection: t || void 0
      })
    });
    const r = this.state.reconfigure({
      plugins: this.extensionManager.plugins
    });
    this.view.updateState(r), this.createNodeViews(), this.prependClass();
    const s = this.view.dom;
    s.editor = this;
  }
  /**
   * Creates all node views.
   */
  createNodeViews() {
    this.view.setProps({
      nodeViews: this.extensionManager.nodeViews
    });
  }
  /**
   * Prepend class name to element.
   */
  prependClass() {
    this.view.dom.className = `tiptap ${this.view.dom.className}`;
  }
  captureTransaction(e) {
    this.isCapturingTransaction = !0, e(), this.isCapturingTransaction = !1;
    const t = this.capturedTransaction;
    return this.capturedTransaction = null, t;
  }
  /**
   * The callback over which to send transactions (state updates) produced by the view.
   *
   * @param transaction An editor state transaction
   */
  dispatchTransaction(e) {
    if (this.view.isDestroyed)
      return;
    if (this.isCapturingTransaction) {
      if (!this.capturedTransaction) {
        this.capturedTransaction = e;
        return;
      }
      e.steps.forEach((o) => {
        var a;
        return (a = this.capturedTransaction) === null || a === void 0 ? void 0 : a.step(o);
      });
      return;
    }
    const t = this.state.apply(e), r = !this.state.selection.eq(t.selection);
    this.view.updateState(t), this.emit("transaction", {
      editor: this,
      transaction: e
    }), r && this.emit("selectionUpdate", {
      editor: this,
      transaction: e
    });
    const s = e.getMeta("focus"), i = e.getMeta("blur");
    s && this.emit("focus", {
      editor: this,
      event: s.event,
      transaction: e
    }), i && this.emit("blur", {
      editor: this,
      event: i.event,
      transaction: e
    }), !(!e.docChanged || e.getMeta("preventUpdate")) && this.emit("update", {
      editor: this,
      transaction: e
    });
  }
  /**
   * Get attributes of the currently selected node or mark.
   */
  getAttributes(e) {
    return D0(this.state, e);
  }
  isActive(e, t) {
    const r = typeof e == "string" ? e : null, s = typeof e == "string" ? t : e;
    return Iv(this.state, r, s);
  }
  /**
   * Get the document as JSON.
   */
  getJSON() {
    return this.state.doc.toJSON();
  }
  /**
   * Get the document as HTML.
   */
  getHTML() {
    return Av(this.state.doc.content, this.schema);
  }
  /**
   * Get the document as text.
   */
  getText(e) {
    const { blockSeparator: t = `

`, textSerializers: r = {} } = e || {};
    return Ov(this.state.doc, {
      blockSeparator: t,
      textSerializers: {
        ...A0(this.schema),
        ...r
      }
    });
  }
  /**
   * Check if there is no content.
   */
  get isEmpty() {
    return Pv(this.state.doc);
  }
  /**
   * Get the number of characters for the current document.
   *
   * @deprecated
   */
  getCharacterCount() {
    return console.warn('[tiptap warn]: "editor.getCharacterCount()" is deprecated. Please use "editor.storage.characterCount.characters()" instead.'), this.state.doc.content.size - 2;
  }
  /**
   * Destroy the editor.
   */
  destroy() {
    this.emit("destroy"), this.view && this.view.destroy(), this.removeAllListeners();
  }
  /**
   * Check if the editor is already destroyed.
   */
  get isDestroyed() {
    var e;
    return !(!((e = this.view) === null || e === void 0) && e.docView);
  }
};
function Qn(n) {
  return new qi({
    find: n.find,
    handler: ({ state: e, range: t, match: r }) => {
      const s = ue(n.getAttributes, void 0, r);
      if (s === !1 || s === null)
        return null;
      const { tr: i } = e, o = r[r.length - 1], a = r[0];
      if (o) {
        const l = a.search(/\S/), c = t.from + a.indexOf(o), d = c + o.length;
        if (Ka(t.from, t.to, e.doc).filter((h) => h.mark.type.excluded.find((y) => y === n.type && y !== h.mark.type)).filter((h) => h.to > c).length)
          return null;
        d < t.to && i.delete(d, t.to), c > t.from && i.delete(t.from + l, c);
        const m = t.from + l + o.length;
        i.addMark(t.from + l, m, n.type.create(s || {})), i.removeStoredMark(n.type);
      }
    }
  });
}
function H0(n) {
  return new qi({
    find: n.find,
    handler: ({ state: e, range: t, match: r }) => {
      const s = ue(n.getAttributes, void 0, r) || {}, { tr: i } = e, o = t.from;
      let a = t.to;
      const l = n.type.create(s);
      if (r[1]) {
        const c = r[0].lastIndexOf(r[1]);
        let d = o + c;
        d > a ? d = a : a = d + r[1].length;
        const f = r[0][r[0].length - 1];
        i.insertText(f, o + r[0].length - 1), i.replaceWith(d, a, l);
      } else
        r[0] && i.insert(o - 1, n.type.create(s)).delete(i.mapping.map(o), i.mapping.map(a));
      i.scrollIntoView();
    }
  });
}
function ca(n) {
  return new qi({
    find: n.find,
    handler: ({ state: e, range: t, match: r }) => {
      const s = e.doc.resolve(t.from), i = ue(n.getAttributes, void 0, r) || {};
      if (!s.node(-1).canReplaceWith(s.index(-1), s.indexAfter(-1), n.type))
        return null;
      e.tr.delete(t.from, t.to).setBlockType(t.from, t.from, n.type, i);
    }
  });
}
function ds(n) {
  return new qi({
    find: n.find,
    handler: ({ state: e, range: t, match: r, chain: s }) => {
      const i = ue(n.getAttributes, void 0, r) || {}, o = e.tr.delete(t.from, t.to), l = o.doc.resolve(t.from).blockRange(), c = l && Ta(l, n.type, i);
      if (!c)
        return null;
      if (o.wrap(l, c), n.keepMarks && n.editor) {
        const { selection: f, storedMarks: m } = e, { splittableMarks: h } = n.editor.extensionManager, p = m || f.$to.parentOffset && f.$from.marks();
        if (p) {
          const y = p.filter((v) => h.includes(v.type.name));
          o.ensureMarks(y);
        }
      }
      if (n.keepAttributes) {
        const f = n.type.name === "bulletList" || n.type.name === "orderedList" ? "listItem" : "taskList";
        s().updateAttributes(f, i).run();
      }
      const d = o.doc.resolve(t.from - 1).nodeBefore;
      d && d.type === n.type && En(o.doc, t.from - 1) && (!n.joinPredicate || n.joinPredicate(r, d)) && o.join(t.from - 1);
    }
  });
}
class dt {
  constructor(e = {}) {
    this.type = "mark", this.name = "mark", this.parent = null, this.child = null, this.config = {
      name: this.name,
      defaultOptions: {}
    }, this.config = {
      ...this.config,
      ...e
    }, this.name = this.config.name, e.defaultOptions && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${this.name}".`), this.options = this.config.defaultOptions, this.config.addOptions && (this.options = ue(B(this, "addOptions", {
      name: this.name
    }))), this.storage = ue(B(this, "addStorage", {
      name: this.name,
      options: this.options
    })) || {};
  }
  static create(e = {}) {
    return new dt(e);
  }
  configure(e = {}) {
    const t = this.extend();
    return t.options = Ki(this.options, e), t.storage = ue(B(t, "addStorage", {
      name: t.name,
      options: t.options
    })), t;
  }
  extend(e = {}) {
    const t = new dt(e);
    return t.parent = this, this.child = t, t.name = e.name ? e.name : t.parent.name, e.defaultOptions && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${t.name}".`), t.options = ue(B(t, "addOptions", {
      name: t.name
    })), t.storage = ue(B(t, "addStorage", {
      name: t.name,
      options: t.options
    })), t;
  }
  static handleExit({ editor: e, mark: t }) {
    const { tr: r } = e.state, s = e.state.selection.$from;
    if (s.pos === s.end()) {
      const o = s.marks();
      if (!!!o.find((c) => (c == null ? void 0 : c.type.name) === t.name))
        return !1;
      const l = o.find((c) => (c == null ? void 0 : c.type.name) === t.name);
      return l && r.removeStoredMark(l), r.insertText(" ", s.pos), e.view.dispatch(r), !0;
    }
    return !1;
  }
}
class qe {
  constructor(e = {}) {
    this.type = "node", this.name = "node", this.parent = null, this.child = null, this.config = {
      name: this.name,
      defaultOptions: {}
    }, this.config = {
      ...this.config,
      ...e
    }, this.name = this.config.name, e.defaultOptions && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${this.name}".`), this.options = this.config.defaultOptions, this.config.addOptions && (this.options = ue(B(this, "addOptions", {
      name: this.name
    }))), this.storage = ue(B(this, "addStorage", {
      name: this.name,
      options: this.options
    })) || {};
  }
  static create(e = {}) {
    return new qe(e);
  }
  configure(e = {}) {
    const t = this.extend();
    return t.options = Ki(this.options, e), t.storage = ue(B(t, "addStorage", {
      name: t.name,
      options: t.options
    })), t;
  }
  extend(e = {}) {
    const t = new qe(e);
    return t.parent = this, this.child = t, t.name = e.name ? e.name : t.parent.name, e.defaultOptions && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${t.name}".`), t.options = ue(B(t, "addOptions", {
      name: t.name
    })), t.storage = ue(B(t, "addStorage", {
      name: t.name,
      options: t.options
    })), t;
  }
}
function kn(n) {
  return new O4({
    find: n.find,
    handler: ({ state: e, range: t, match: r, pasteEvent: s }) => {
      const i = ue(n.getAttributes, void 0, r, s);
      if (i === !1 || i === null)
        return null;
      const { tr: o } = e, a = r[r.length - 1], l = r[0];
      let c = t.to;
      if (a) {
        const d = l.search(/\S/), f = t.from + l.indexOf(a), m = f + a.length;
        if (Ka(t.from, t.to, e.doc).filter((p) => p.mark.type.excluded.find((v) => v === n.type && v !== p.mark.type)).filter((p) => p.to > f).length)
          return null;
        m < t.to && o.delete(m, t.to), f > t.from && o.delete(t.from + d, f), c = t.from + d + a.length, o.addMark(t.from + d, c, n.type.create(i || {})), o.removeStoredMark(n.type);
      }
    }
  });
}
const fx = /(?:^|\s)((?:==)((?:[^~=]+))(?:==))$/, mx = /(?:^|\s)((?:==)((?:[^~=]+))(?:==))/g, hx = dt.create({
  name: "highlight",
  addOptions() {
    return {
      multicolor: !1,
      HTMLAttributes: {}
    };
  },
  addAttributes() {
    return this.options.multicolor ? {
      color: {
        default: null,
        parseHTML: (n) => n.getAttribute("data-color") || n.style.backgroundColor,
        renderHTML: (n) => n.color ? {
          "data-color": n.color,
          style: `background-color: ${n.color}; color: inherit`
        } : {}
      }
    } : {};
  },
  parseHTML() {
    return [
      {
        tag: "mark"
      }
    ];
  },
  renderHTML({ HTMLAttributes: n }) {
    return ["mark", Ae(this.options.HTMLAttributes, n), 0];
  },
  addCommands() {
    return {
      setHighlight: (n) => ({ commands: e }) => e.setMark(this.name, n),
      toggleHighlight: (n) => ({ commands: e }) => e.toggleMark(this.name, n),
      unsetHighlight: () => ({ commands: n }) => n.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Shift-h": () => this.editor.commands.toggleHighlight()
    };
  },
  addInputRules() {
    return [
      Qn({
        find: fx,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      kn({
        find: mx,
        type: this.type
      })
    ];
  }
}), px = /(?:^|\s)(!\[(.+|:?)]\((\S+)(?:(?:\s+)["'](\S+)["'])?\))$/, gx = qe.create({
  name: "image",
  addOptions() {
    return {
      inline: !1,
      allowBase64: !1,
      HTMLAttributes: {}
    };
  },
  inline() {
    return this.options.inline;
  },
  group() {
    return this.options.inline ? "inline" : "block";
  },
  draggable: !0,
  addAttributes() {
    return {
      src: {
        default: null
      },
      alt: {
        default: null
      },
      title: {
        default: null
      }
    };
  },
  parseHTML() {
    return [
      {
        tag: this.options.allowBase64 ? "img[src]" : 'img[src]:not([src^="data:"])'
      }
    ];
  },
  renderHTML({ HTMLAttributes: n }) {
    return ["img", Ae(this.options.HTMLAttributes, n)];
  },
  addCommands() {
    return {
      setImage: (n) => ({ commands: e }) => e.insertContent({
        type: this.name,
        attrs: n
      })
    };
  },
  addInputRules() {
    return [
      H0({
        find: px,
        type: this.type,
        getAttributes: (n) => {
          const [, , e, t, r] = n;
          return { src: t, alt: e, title: r };
        }
      })
    ];
  }
}), bx = "aaa1rp3barth4b0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0faromeo7ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4vianca6w0s2x0a2z0ure5ba0by2idu3namex3narepublic11d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re2s2c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y0eats7k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0cast4mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking0channel11l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dabur3d1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t0isalat7u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0at2delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d0network8tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntdoor4ier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0ardian6cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5gtv3iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0eles2s3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1nder2le4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster5ia3d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4de2k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0cys3drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7serati6ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic3tual5v1w1x1y1z2na0b1goya4me2tura4vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rthwesternmutual14on4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9dnavy5lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3ssagens7y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cher3ks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0a1b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp2w2ell3ia1ksha5oes2p0ping5uji3w0time7i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ffany5ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0channel7ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5mögensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lkswagen7vo3te1ing3o2yage5u0elos6wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4finity6ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2", yx = "ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5تصالات6رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत0म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里0大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2", _r = (n, e) => {
  for (const t in e)
    n[t] = e[t];
  return n;
}, ua = "numeric", da = "ascii", fa = "alpha", Us = "asciinumeric", Zs = "alphanumeric", ma = "domain", I0 = "emoji", vx = "scheme", xx = "slashscheme", _u = "whitespace";
function wx(n, e) {
  return n in e || (e[n] = []), e[n];
}
function Vn(n, e, t) {
  e[ua] && (e[Us] = !0, e[Zs] = !0), e[da] && (e[Us] = !0, e[fa] = !0), e[Us] && (e[Zs] = !0), e[fa] && (e[Zs] = !0), e[Zs] && (e[ma] = !0), e[I0] && (e[ma] = !0);
  for (const r in e) {
    const s = wx(r, t);
    s.indexOf(n) < 0 && s.push(n);
  }
}
function Nx(n, e) {
  const t = {};
  for (const r in e)
    e[r].indexOf(n) >= 0 && (t[r] = !0);
  return t;
}
function ot(n) {
  n === void 0 && (n = null), this.j = {}, this.jr = [], this.jd = null, this.t = n;
}
ot.groups = {};
ot.prototype = {
  accepts() {
    return !!this.t;
  },
  /**
   * Follow an existing transition from the given input to the next state.
   * Does not mutate.
   * @param {string} input character or token type to transition on
   * @returns {?State<T>} the next state, if any
   */
  go(n) {
    const e = this, t = e.j[n];
    if (t)
      return t;
    for (let r = 0; r < e.jr.length; r++) {
      const s = e.jr[r][0], i = e.jr[r][1];
      if (i && s.test(n))
        return i;
    }
    return e.jd;
  },
  /**
   * Whether the state has a transition for the given input. Set the second
   * argument to true to only look for an exact match (and not a default or
   * regular-expression-based transition)
   * @param {string} input
   * @param {boolean} exactOnly
   */
  has(n, e) {
    return e === void 0 && (e = !1), e ? n in this.j : !!this.go(n);
  },
  /**
   * Short for "transition all"; create a transition from the array of items
   * in the given list to the same final resulting state.
   * @param {string | string[]} inputs Group of inputs to transition on
   * @param {Transition<T> | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of token groups
   */
  ta(n, e, t, r) {
    for (let s = 0; s < n.length; s++)
      this.tt(n[s], e, t, r);
  },
  /**
   * Short for "take regexp transition"; defines a transition for this state
   * when it encounters a token which matches the given regular expression
   * @param {RegExp} regexp Regular expression transition (populate first)
   * @param {T | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of token groups
   * @returns {State<T>} taken after the given input
   */
  tr(n, e, t, r) {
    r = r || ot.groups;
    let s;
    return e && e.j ? s = e : (s = new ot(e), t && r && Vn(e, t, r)), this.jr.push([n, s]), s;
  },
  /**
   * Short for "take transitions", will take as many sequential transitions as
   * the length of the given input and returns the
   * resulting final state.
   * @param {string | string[]} input
   * @param {T | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of token groups
   * @returns {State<T>} taken after the given input
   */
  ts(n, e, t, r) {
    let s = this;
    const i = n.length;
    if (!i)
      return s;
    for (let o = 0; o < i - 1; o++)
      s = s.tt(n[o]);
    return s.tt(n[i - 1], e, t, r);
  },
  /**
   * Short for "take transition", this is a method for building/working with
   * state machines.
   *
   * If a state already exists for the given input, returns it.
   *
   * If a token is specified, that state will emit that token when reached by
   * the linkify engine.
   *
   * If no state exists, it will be initialized with some default transitions
   * that resemble existing default transitions.
   *
   * If a state is given for the second argument, that state will be
   * transitioned to on the given input regardless of what that input
   * previously did.
   *
   * Specify a token group flags to define groups that this token belongs to.
   * The token will be added to corresponding entires in the given groups
   * object.
   *
   * @param {string} input character, token type to transition on
   * @param {T | State<T>} [next] Transition options
   * @param {Flags} [flags] Collections flags to add token to
   * @param {Collections<T>} [groups] Master list of groups
   * @returns {State<T>} taken after the given input
   */
  tt(n, e, t, r) {
    r = r || ot.groups;
    const s = this;
    if (e && e.j)
      return s.j[n] = e, e;
    const i = e;
    let o, a = s.go(n);
    if (a ? (o = new ot(), _r(o.j, a.j), o.jr.push.apply(o.jr, a.jr), o.jd = a.jd, o.t = a.t) : o = new ot(), i) {
      if (r)
        if (o.t && typeof o.t == "string") {
          const l = _r(Nx(o.t, r), t);
          Vn(i, l, r);
        } else
          t && Vn(i, t, r);
      o.t = i;
    }
    return s.j[n] = o, o;
  }
};
const Y = (n, e, t, r, s) => n.ta(e, t, r, s), bt = (n, e, t, r, s) => n.tr(e, t, r, s), Du = (n, e, t, r, s) => n.ts(e, t, r, s), L = (n, e, t, r, s) => n.tt(e, t, r, s), Kt = "WORD", ha = "UWORD", fs = "LOCALHOST", pa = "TLD", ga = "UTLD", Bs = "SCHEME", fr = "SLASH_SCHEME", Ja = "NUM", P0 = "WS", Ga = "NL", gr = "OPENBRACE", Qr = "OPENBRACKET", Xr = "OPENANGLEBRACKET", es = "OPENPAREN", Hn = "CLOSEBRACE", br = "CLOSEBRACKET", yr = "CLOSEANGLEBRACKET", In = "CLOSEPAREN", di = "AMPERSAND", fi = "APOSTROPHE", mi = "ASTERISK", un = "AT", hi = "BACKSLASH", pi = "BACKTICK", gi = "CARET", mn = "COLON", Ya = "COMMA", bi = "DOLLAR", Dt = "DOT", yi = "EQUALS", Qa = "EXCLAMATION", Ht = "HYPHEN", vi = "PERCENT", xi = "PIPE", wi = "PLUS", Ni = "POUND", ki = "QUERY", Xa = "QUOTE", el = "SEMI", It = "SLASH", ts = "TILDE", Mi = "UNDERSCORE", L0 = "EMOJI", Ci = "SYM";
var Z0 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  WORD: Kt,
  UWORD: ha,
  LOCALHOST: fs,
  TLD: pa,
  UTLD: ga,
  SCHEME: Bs,
  SLASH_SCHEME: fr,
  NUM: Ja,
  WS: P0,
  NL: Ga,
  OPENBRACE: gr,
  OPENBRACKET: Qr,
  OPENANGLEBRACKET: Xr,
  OPENPAREN: es,
  CLOSEBRACE: Hn,
  CLOSEBRACKET: br,
  CLOSEANGLEBRACKET: yr,
  CLOSEPAREN: In,
  AMPERSAND: di,
  APOSTROPHE: fi,
  ASTERISK: mi,
  AT: un,
  BACKSLASH: hi,
  BACKTICK: pi,
  CARET: gi,
  COLON: mn,
  COMMA: Ya,
  DOLLAR: bi,
  DOT: Dt,
  EQUALS: yi,
  EXCLAMATION: Qa,
  HYPHEN: Ht,
  PERCENT: vi,
  PIPE: xi,
  PLUS: wi,
  POUND: Ni,
  QUERY: ki,
  QUOTE: Xa,
  SEMI: el,
  SLASH: It,
  TILDE: ts,
  UNDERSCORE: Mi,
  EMOJI: L0,
  SYM: Ci
});
const lr = /[a-z]/, Ro = new RegExp("\\p{L}", "u"), Eo = new RegExp("\\p{Emoji}", "u"), So = /\d/, Hu = /\s/, Iu = `
`, kx = "️", Mx = "‍";
let $s = null, Vs = null;
function Cx(n) {
  n === void 0 && (n = []);
  const e = {};
  ot.groups = e;
  const t = new ot();
  $s == null && ($s = Pu(bx)), Vs == null && (Vs = Pu(yx)), L(t, "'", fi), L(t, "{", gr), L(t, "[", Qr), L(t, "<", Xr), L(t, "(", es), L(t, "}", Hn), L(t, "]", br), L(t, ">", yr), L(t, ")", In), L(t, "&", di), L(t, "*", mi), L(t, "@", un), L(t, "`", pi), L(t, "^", gi), L(t, ":", mn), L(t, ",", Ya), L(t, "$", bi), L(t, ".", Dt), L(t, "=", yi), L(t, "!", Qa), L(t, "-", Ht), L(t, "%", vi), L(t, "|", xi), L(t, "+", wi), L(t, "#", Ni), L(t, "?", ki), L(t, '"', Xa), L(t, "/", It), L(t, ";", el), L(t, "~", ts), L(t, "_", Mi), L(t, "\\", hi);
  const r = bt(t, So, Ja, {
    [ua]: !0
  });
  bt(r, So, r);
  const s = bt(t, lr, Kt, {
    [da]: !0
  });
  bt(s, lr, s);
  const i = bt(t, Ro, ha, {
    [fa]: !0
  });
  bt(i, lr), bt(i, Ro, i);
  const o = bt(t, Hu, P0, {
    [_u]: !0
  });
  L(t, Iu, Ga, {
    [_u]: !0
  }), L(o, Iu), bt(o, Hu, o);
  const a = bt(t, Eo, L0, {
    [I0]: !0
  });
  bt(a, Eo, a), L(a, kx, a);
  const l = L(a, Mx);
  bt(l, Eo, a);
  const c = [[lr, s]], d = [[lr, null], [Ro, i]];
  for (let f = 0; f < $s.length; f++)
    on(t, $s[f], pa, Kt, c);
  for (let f = 0; f < Vs.length; f++)
    on(t, Vs[f], ga, ha, d);
  Vn(pa, {
    tld: !0,
    ascii: !0
  }, e), Vn(ga, {
    utld: !0,
    alpha: !0
  }, e), on(t, "file", Bs, Kt, c), on(t, "mailto", Bs, Kt, c), on(t, "http", fr, Kt, c), on(t, "https", fr, Kt, c), on(t, "ftp", fr, Kt, c), on(t, "ftps", fr, Kt, c), Vn(Bs, {
    scheme: !0,
    ascii: !0
  }, e), Vn(fr, {
    slashscheme: !0,
    ascii: !0
  }, e), n = n.sort((f, m) => f[0] > m[0] ? 1 : -1);
  for (let f = 0; f < n.length; f++) {
    const m = n[f][0], p = n[f][1] ? {
      [vx]: !0
    } : {
      [xx]: !0
    };
    m.indexOf("-") >= 0 ? p[ma] = !0 : lr.test(m) ? So.test(m) ? p[Us] = !0 : p[da] = !0 : p[ua] = !0, Du(t, m, m, p);
  }
  return Du(t, "localhost", fs, {
    ascii: !0
  }), t.jd = new ot(Ci), {
    start: t,
    tokens: _r({
      groups: e
    }, Z0)
  };
}
function Rx(n, e) {
  const t = Ex(e.replace(/[A-Z]/g, (a) => a.toLowerCase())), r = t.length, s = [];
  let i = 0, o = 0;
  for (; o < r; ) {
    let a = n, l = null, c = 0, d = null, f = -1, m = -1;
    for (; o < r && (l = a.go(t[o])); )
      a = l, a.accepts() ? (f = 0, m = 0, d = a) : f >= 0 && (f += t[o].length, m++), c += t[o].length, i += t[o].length, o++;
    i -= f, o -= m, c -= f, s.push({
      t: d.t,
      // token type/name
      v: e.slice(i - c, i),
      // string value
      s: i - c,
      // start index
      e: i
      // end index (excluding)
    });
  }
  return s;
}
function Ex(n) {
  const e = [], t = n.length;
  let r = 0;
  for (; r < t; ) {
    let s = n.charCodeAt(r), i, o = s < 55296 || s > 56319 || r + 1 === t || (i = n.charCodeAt(r + 1)) < 56320 || i > 57343 ? n[r] : n.slice(r, r + 2);
    e.push(o), r += o.length;
  }
  return e;
}
function on(n, e, t, r, s) {
  let i;
  const o = e.length;
  for (let a = 0; a < o - 1; a++) {
    const l = e[a];
    n.j[l] ? i = n.j[l] : (i = new ot(r), i.jr = s.slice(), n.j[l] = i), n = i;
  }
  return i = new ot(t), i.jr = s.slice(), n.j[e[o - 1]] = i, i;
}
function Pu(n) {
  const e = [], t = [];
  let r = 0, s = "0123456789";
  for (; r < n.length; ) {
    let i = 0;
    for (; s.indexOf(n[r + i]) >= 0; )
      i++;
    if (i > 0) {
      e.push(t.join(""));
      for (let o = parseInt(n.substring(r, r + i), 10); o > 0; o--)
        t.pop();
      r += i;
    } else
      t.push(n[r]), r++;
  }
  return e;
}
const ms = {
  defaultProtocol: "http",
  events: null,
  format: Lu,
  formatHref: Lu,
  nl2br: !1,
  tagName: "a",
  target: null,
  rel: null,
  validate: !0,
  truncate: 1 / 0,
  className: null,
  attributes: null,
  ignoreTags: [],
  render: null
};
function tl(n, e) {
  e === void 0 && (e = null);
  let t = _r({}, ms);
  n && (t = _r(t, n instanceof tl ? n.o : n));
  const r = t.ignoreTags, s = [];
  for (let i = 0; i < r.length; i++)
    s.push(r[i].toUpperCase());
  this.o = t, e && (this.defaultRender = e), this.ignoreTags = s;
}
tl.prototype = {
  o: ms,
  /**
   * @type string[]
   */
  ignoreTags: [],
  /**
   * @param {IntermediateRepresentation} ir
   * @returns {any}
   */
  defaultRender(n) {
    return n;
  },
  /**
   * Returns true or false based on whether a token should be displayed as a
   * link based on the user options.
   * @param {MultiToken} token
   * @returns {boolean}
   */
  check(n) {
    return this.get("validate", n.toString(), n);
  },
  // Private methods
  /**
   * Resolve an option's value based on the value of the option and the given
   * params. If operator and token are specified and the target option is
   * callable, automatically calls the function with the given argument.
   * @template {keyof Opts} K
   * @param {K} key Name of option to use
   * @param {string} [operator] will be passed to the target option if it's a
   * function. If not specified, RAW function value gets returned
   * @param {MultiToken} [token] The token from linkify.tokenize
   * @returns {Opts[K] | any}
   */
  get(n, e, t) {
    const r = e != null;
    let s = this.o[n];
    return s && (typeof s == "object" ? (s = t.t in s ? s[t.t] : ms[n], typeof s == "function" && r && (s = s(e, t))) : typeof s == "function" && r && (s = s(e, t.t, t)), s);
  },
  /**
   * @template {keyof Opts} L
   * @param {L} key Name of options object to use
   * @param {string} [operator]
   * @param {MultiToken} [token]
   * @returns {Opts[L] | any}
   */
  getObj(n, e, t) {
    let r = this.o[n];
    return typeof r == "function" && e != null && (r = r(e, t.t, t)), r;
  },
  /**
   * Convert the given token to a rendered element that may be added to the
   * calling-interface's DOM
   * @param {MultiToken} token Token to render to an HTML element
   * @returns {any} Render result; e.g., HTML string, DOM element, React
   *   Component, etc.
   */
  render(n) {
    const e = n.render(this);
    return (this.get("render", null, n) || this.defaultRender)(e, n.t, n);
  }
};
function Lu(n) {
  return n;
}
function $0(n, e) {
  this.t = "token", this.v = n, this.tk = e;
}
$0.prototype = {
  isLink: !1,
  /**
   * Return the string this token represents.
   * @return {string}
   */
  toString() {
    return this.v;
  },
  /**
   * What should the value for this token be in the `href` HTML attribute?
   * Returns the `.toString` value by default.
   * @param {string} [scheme]
   * @return {string}
  */
  toHref(n) {
    return this.toString();
  },
  /**
   * @param {Options} options Formatting options
   * @returns {string}
   */
  toFormattedString(n) {
    const e = this.toString(), t = n.get("truncate", e, this), r = n.get("format", e, this);
    return t && r.length > t ? r.substring(0, t) + "…" : r;
  },
  /**
   *
   * @param {Options} options
   * @returns {string}
   */
  toFormattedHref(n) {
    return n.get("formatHref", this.toHref(n.get("defaultProtocol")), this);
  },
  /**
   * The start index of this token in the original input string
   * @returns {number}
   */
  startIndex() {
    return this.tk[0].s;
  },
  /**
   * The end index of this token in the original input string (up to this
   * index but not including it)
   * @returns {number}
   */
  endIndex() {
    return this.tk[this.tk.length - 1].e;
  },
  /**
  	Returns an object  of relevant values for this token, which includes keys
  	* type - Kind of token ('url', 'email', etc.)
  	* value - Original text
  	* href - The value that should be added to the anchor tag's href
  		attribute
  		@method toObject
  	@param {string} [protocol] `'http'` by default
  */
  toObject(n) {
    return n === void 0 && (n = ms.defaultProtocol), {
      type: this.t,
      value: this.toString(),
      isLink: this.isLink,
      href: this.toHref(n),
      start: this.startIndex(),
      end: this.endIndex()
    };
  },
  /**
   *
   * @param {Options} options Formatting option
   */
  toFormattedObject(n) {
    return {
      type: this.t,
      value: this.toFormattedString(n),
      isLink: this.isLink,
      href: this.toFormattedHref(n),
      start: this.startIndex(),
      end: this.endIndex()
    };
  },
  /**
   * Whether this token should be rendered as a link according to the given options
   * @param {Options} options
   * @returns {boolean}
   */
  validate(n) {
    return n.get("validate", this.toString(), this);
  },
  /**
   * Return an object that represents how this link should be rendered.
   * @param {Options} options Formattinng options
   */
  render(n) {
    const e = this, t = this.toHref(n.get("defaultProtocol")), r = n.get("formatHref", t, this), s = n.get("tagName", t, e), i = this.toFormattedString(n), o = {}, a = n.get("className", t, e), l = n.get("target", t, e), c = n.get("rel", t, e), d = n.getObj("attributes", t, e), f = n.getObj("events", t, e);
    return o.href = r, a && (o.class = a), l && (o.target = l), c && (o.rel = c), d && _r(o, d), {
      tagName: s,
      attributes: o,
      content: i,
      eventListeners: f
    };
  }
};
function Yi(n, e) {
  class t extends $0 {
    constructor(s, i) {
      super(s, i), this.t = n;
    }
  }
  for (const r in e)
    t.prototype[r] = e[r];
  return t.t = n, t;
}
const Zu = Yi("email", {
  isLink: !0,
  toHref() {
    return "mailto:" + this.toString();
  }
}), $u = Yi("text"), Sx = Yi("nl"), _n = Yi("url", {
  isLink: !0,
  /**
  	Lowercases relevant parts of the domain and adds the protocol if
  	required. Note that this will not escape unsafe HTML characters in the
  	URL.
  		@param {string} [scheme] default scheme (e.g., 'https')
  	@return {string} the full href
  */
  toHref(n) {
    return n === void 0 && (n = ms.defaultProtocol), this.hasProtocol() ? this.v : `${n}://${this.v}`;
  },
  /**
   * Check whether this URL token has a protocol
   * @return {boolean}
   */
  hasProtocol() {
    const n = this.tk;
    return n.length >= 2 && n[0].t !== fs && n[1].t === mn;
  }
}), Ze = (n) => new ot(n);
function Ax(n) {
  let {
    groups: e
  } = n;
  const t = e.domain.concat([di, mi, un, hi, pi, gi, bi, yi, Ht, Ja, vi, xi, wi, Ni, It, Ci, ts, Mi]), r = [fi, yr, Hn, br, In, mn, Ya, Dt, Qa, Xr, gr, Qr, es, ki, Xa, el], s = [di, fi, mi, hi, pi, gi, Hn, bi, yi, Ht, gr, vi, xi, wi, Ni, ki, It, Ci, ts, Mi], i = Ze(), o = L(i, ts);
  Y(o, s, o), Y(o, e.domain, o);
  const a = Ze(), l = Ze(), c = Ze();
  Y(i, e.domain, a), Y(i, e.scheme, l), Y(i, e.slashscheme, c), Y(a, s, o), Y(a, e.domain, a);
  const d = L(a, un);
  L(o, un, d), L(l, un, d), L(c, un, d);
  const f = L(o, Dt);
  Y(f, s, o), Y(f, e.domain, o);
  const m = Ze();
  Y(d, e.domain, m), Y(m, e.domain, m);
  const h = L(m, Dt);
  Y(h, e.domain, m);
  const p = Ze(Zu);
  Y(h, e.tld, p), Y(h, e.utld, p), L(d, fs, p);
  const y = L(m, Ht);
  Y(y, e.domain, m), Y(p, e.domain, m), L(p, Dt, h), L(p, Ht, y);
  const v = L(p, mn);
  Y(v, e.numeric, Zu);
  const k = L(a, Ht), P = L(a, Dt);
  Y(k, e.domain, a), Y(P, s, o), Y(P, e.domain, a);
  const q = Ze(_n);
  Y(P, e.tld, q), Y(P, e.utld, q), Y(q, e.domain, a), Y(q, s, o), L(q, Dt, P), L(q, Ht, k), L(q, un, d);
  const te = L(q, mn), re = Ze(_n);
  Y(te, e.numeric, re);
  const V = Ze(_n), K = Ze();
  Y(V, t, V), Y(V, r, K), Y(K, t, V), Y(K, r, K), L(q, It, V), L(re, It, V);
  const w = L(l, mn), b = L(c, mn), M = L(b, It), S = L(M, It);
  Y(l, e.domain, a), L(l, Dt, P), L(l, Ht, k), Y(c, e.domain, a), L(c, Dt, P), L(c, Ht, k), Y(w, e.domain, V), L(w, It, V), Y(S, e.domain, V), Y(S, t, V), L(S, It, V);
  const _ = L(V, gr), J = L(V, Qr), H = L(V, Xr), I = L(V, es);
  L(K, gr, _), L(K, Qr, J), L(K, Xr, H), L(K, es, I), L(_, Hn, V), L(J, br, V), L(H, yr, V), L(I, In, V), L(_, Hn, V);
  const E = Ze(_n), C = Ze(_n), A = Ze(_n), x = Ze(_n);
  Y(_, t, E), Y(J, t, C), Y(H, t, A), Y(I, t, x);
  const O = Ze(), $ = Ze(), N = Ze(), z = Ze();
  return Y(_, r), Y(J, r), Y(H, r), Y(I, r), Y(E, t, E), Y(C, t, C), Y(A, t, A), Y(x, t, x), Y(E, r, E), Y(C, r, C), Y(A, r, A), Y(x, r, x), Y(O, t, O), Y($, t, C), Y(N, t, A), Y(z, t, x), Y(O, r, O), Y($, r, $), Y(N, r, N), Y(z, r, z), L(C, br, V), L(A, yr, V), L(x, In, V), L(E, Hn, V), L($, br, V), L(N, yr, V), L(z, In, V), L(O, In, V), L(i, fs, q), L(i, Ga, Sx), {
    start: i,
    tokens: Z0
  };
}
function Ox(n, e, t) {
  let r = t.length, s = 0, i = [], o = [];
  for (; s < r; ) {
    let a = n, l = null, c = null, d = 0, f = null, m = -1;
    for (; s < r && !(l = a.go(t[s].t)); )
      o.push(t[s++]);
    for (; s < r && (c = l || a.go(t[s].t)); )
      l = null, a = c, a.accepts() ? (m = 0, f = a) : m >= 0 && m++, s++, d++;
    if (m < 0)
      s -= d, s < r && (o.push(t[s]), s++);
    else {
      o.length > 0 && (i.push(Ao($u, e, o)), o = []), s -= m, d -= m;
      const h = f.t, p = t.slice(s - d, s);
      i.push(Ao(h, e, p));
    }
  }
  return o.length > 0 && i.push(Ao($u, e, o)), i;
}
function Ao(n, e, t) {
  const r = t[0].s, s = t[t.length - 1].e, i = e.slice(r, s);
  return new n(i, t);
}
const Tx = typeof console < "u" && console && console.warn || (() => {
}), _x = "until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.", Te = {
  scanner: null,
  parser: null,
  tokenQueue: [],
  pluginQueue: [],
  customSchemes: [],
  initialized: !1
};
function Dx() {
  ot.groups = {}, Te.scanner = null, Te.parser = null, Te.tokenQueue = [], Te.pluginQueue = [], Te.customSchemes = [], Te.initialized = !1;
}
function Vu(n, e) {
  if (e === void 0 && (e = !1), Te.initialized && Tx(`linkifyjs: already initialized - will not register custom scheme "${n}" ${_x}`), !/^[0-9a-z]+(-[0-9a-z]+)*$/.test(n))
    throw new Error(`linkifyjs: incorrect scheme format.
1. Must only contain digits, lowercase ASCII letters or "-"
2. Cannot start or end with "-"
3. "-" cannot repeat`);
  Te.customSchemes.push([n, e]);
}
function Hx() {
  Te.scanner = Cx(Te.customSchemes);
  for (let n = 0; n < Te.tokenQueue.length; n++)
    Te.tokenQueue[n][1]({
      scanner: Te.scanner
    });
  Te.parser = Ax(Te.scanner.tokens);
  for (let n = 0; n < Te.pluginQueue.length; n++)
    Te.pluginQueue[n][1]({
      scanner: Te.scanner,
      parser: Te.parser
    });
  Te.initialized = !0;
}
function Ix(n) {
  return Te.initialized || Hx(), Ox(Te.parser.start, n, Rx(Te.scanner.start, n));
}
function nl(n, e, t) {
  if (e === void 0 && (e = null), t === void 0 && (t = null), e && typeof e == "object") {
    if (t)
      throw Error(`linkifyjs: Invalid link type ${e}; must be a string`);
    t = e, e = null;
  }
  const r = new tl(t), s = Ix(n), i = [];
  for (let o = 0; o < s.length; o++) {
    const a = s[o];
    a.isLink && (!e || a.t === e) && r.check(a) && i.push(a.toFormattedObject(r));
  }
  return i;
}
function Px(n) {
  return new it({
    key: new Tt("autolink"),
    appendTransaction: (e, t, r) => {
      const s = e.some((c) => c.docChanged) && !t.doc.eq(r.doc), i = e.some((c) => c.getMeta("preventAutolink"));
      if (!s || i)
        return;
      const { tr: o } = r, a = Cv(t.doc, [...e]);
      if (Hv(a).forEach(({ newRange: c }) => {
        const d = Ev(r.doc, c, (h) => h.isTextblock);
        let f, m;
        if (d.length > 1 ? (f = d[0], m = r.doc.textBetween(f.pos, f.pos + f.node.nodeSize, void 0, " ")) : d.length && r.doc.textBetween(c.from, c.to, " ", " ").endsWith(" ") && (f = d[0], m = r.doc.textBetween(f.pos, c.to, void 0, " ")), f && m) {
          const h = m.split(" ").filter((v) => v !== "");
          if (h.length <= 0)
            return !1;
          const p = h[h.length - 1], y = f.pos + m.lastIndexOf(p);
          if (!p)
            return !1;
          nl(p).filter((v) => v.isLink).map((v) => ({
            ...v,
            from: y + v.start + 1,
            to: y + v.end + 1
          })).filter((v) => r.schema.marks.code ? !r.doc.rangeHasMark(v.from, v.to, r.schema.marks.code) : !0).filter((v) => n.validate ? n.validate(v.value) : !0).forEach((v) => {
            Ka(v.from, v.to, r.doc).some((k) => k.mark.type === n.type) || o.addMark(v.from, v.to, n.type.create({
              href: v.href
            }));
          });
        }
      }), !!o.steps.length)
        return o;
    }
  });
}
function Lx(n) {
  return new it({
    key: new Tt("handleClickLink"),
    props: {
      handleClick: (e, t, r) => {
        var s, i;
        if (r.button !== 0 || r.target.nodeName !== "A")
          return !1;
        const a = D0(e.state, n.type.name), l = r.target, c = (s = l == null ? void 0 : l.href) !== null && s !== void 0 ? s : a.href, d = (i = l == null ? void 0 : l.target) !== null && i !== void 0 ? i : a.target;
        return l && c ? (e.editable && window.open(c, d), !0) : !1;
      }
    }
  });
}
function Zx(n) {
  return new it({
    key: new Tt("handlePasteLink"),
    props: {
      handlePaste: (e, t, r) => {
        const { state: s } = e, { selection: i } = s, { empty: o } = i;
        if (o)
          return !1;
        let a = "";
        r.content.forEach((c) => {
          a += c.textContent;
        });
        const l = nl(a).find((c) => c.isLink && c.value === a);
        return !a || !l ? !1 : (n.editor.commands.setMark(n.type, {
          href: l.href
        }), !0);
      }
    }
  });
}
const $x = dt.create({
  name: "link",
  priority: 1e3,
  keepOnSplit: !1,
  onCreate() {
    this.options.protocols.forEach((n) => {
      if (typeof n == "string") {
        Vu(n);
        return;
      }
      Vu(n.scheme, n.optionalSlashes);
    });
  },
  onDestroy() {
    Dx();
  },
  inclusive() {
    return this.options.autolink;
  },
  addOptions() {
    return {
      openOnClick: !0,
      linkOnPaste: !0,
      autolink: !0,
      protocols: [],
      HTMLAttributes: {
        target: "_blank",
        rel: "noopener noreferrer nofollow",
        class: null
      },
      validate: void 0
    };
  },
  addAttributes() {
    return {
      href: {
        default: null
      },
      target: {
        default: this.options.HTMLAttributes.target
      },
      rel: {
        default: this.options.HTMLAttributes.rel
      },
      class: {
        default: this.options.HTMLAttributes.class
      }
    };
  },
  parseHTML() {
    return [{ tag: 'a[href]:not([href *= "javascript:" i])' }];
  },
  renderHTML({ HTMLAttributes: n }) {
    var e;
    return !((e = n.href) === null || e === void 0) && e.startsWith("javascript:") ? ["a", Ae(this.options.HTMLAttributes, { ...n, href: "" }), 0] : ["a", Ae(this.options.HTMLAttributes, n), 0];
  },
  addCommands() {
    return {
      setLink: (n) => ({ chain: e }) => e().setMark(this.name, n).setMeta("preventAutolink", !0).run(),
      toggleLink: (n) => ({ chain: e }) => e().toggleMark(this.name, n, { extendEmptyMarkRange: !0 }).setMeta("preventAutolink", !0).run(),
      unsetLink: () => ({ chain: n }) => n().unsetMark(this.name, { extendEmptyMarkRange: !0 }).setMeta("preventAutolink", !0).run()
    };
  },
  addPasteRules() {
    return [
      kn({
        find: (n, e) => {
          var t;
          const r = (t = e == null ? void 0 : e.clipboardData) === null || t === void 0 ? void 0 : t.getData("text/html"), s = [];
          if (r) {
            const i = new DOMParser().parseFromString(r, "text/html"), o = i.querySelectorAll("a");
            o.length && [...o].forEach((a) => s.push({
              text: a.innerText,
              data: {
                href: a.getAttribute("href")
              },
              // get the index of the anchor inside the text
              // and add the length of the anchor text
              index: i.body.innerText.indexOf(a.innerText) + a.innerText.length
            }));
          }
          if (n) {
            const i = nl(n).filter((o) => o.isLink);
            i.length && i.forEach((o) => s.push({
              text: o.value,
              data: {
                href: o.href
              },
              index: o.start
            }));
          }
          return s;
        },
        type: this.type,
        getAttributes: (n) => {
          var e;
          return {
            href: (e = n.data) === null || e === void 0 ? void 0 : e.href
          };
        }
      })
    ];
  },
  addProseMirrorPlugins() {
    const n = [];
    return this.options.autolink && n.push(Px({
      type: this.type,
      validate: this.options.validate
    })), this.options.openOnClick && n.push(Lx({
      type: this.type
    })), this.options.linkOnPaste && n.push(Zx({
      editor: this.editor,
      type: this.type
    })), n;
  }
}), Vx = lt.create({
  name: "textAlign",
  addOptions() {
    return {
      types: [],
      alignments: ["left", "center", "right", "justify"],
      defaultAlignment: "left"
    };
  },
  addGlobalAttributes() {
    return [
      {
        types: this.options.types,
        attributes: {
          textAlign: {
            default: this.options.defaultAlignment,
            parseHTML: (n) => n.style.textAlign || this.options.defaultAlignment,
            renderHTML: (n) => n.textAlign === this.options.defaultAlignment ? {} : { style: `text-align: ${n.textAlign}` }
          }
        }
      }
    ];
  },
  addCommands() {
    return {
      setTextAlign: (n) => ({ commands: e }) => this.options.alignments.includes(n) ? this.options.types.every((t) => e.updateAttributes(t, { textAlign: n })) : !1,
      unsetTextAlign: () => ({ commands: n }) => this.options.types.every((e) => n.resetAttributes(e, "textAlign"))
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Shift-l": () => this.editor.commands.setTextAlign("left"),
      "Mod-Shift-e": () => this.editor.commands.setTextAlign("center"),
      "Mod-Shift-r": () => this.editor.commands.setTextAlign("right"),
      "Mod-Shift-j": () => this.editor.commands.setTextAlign("justify")
    };
  }
}), zx = dt.create({
  name: "underline",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "u"
      },
      {
        style: "text-decoration",
        consuming: !1,
        getAttrs: (n) => n.includes("underline") ? {} : !1
      }
    ];
  },
  renderHTML({ HTMLAttributes: n }) {
    return ["u", Ae(this.options.HTMLAttributes, n), 0];
  },
  addCommands() {
    return {
      setUnderline: () => ({ commands: n }) => n.setMark(this.name),
      toggleUnderline: () => ({ commands: n }) => n.toggleMark(this.name),
      unsetUnderline: () => ({ commands: n }) => n.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-u": () => this.editor.commands.toggleUnderline(),
      "Mod-U": () => this.editor.commands.toggleUnderline()
    };
  }
}), Fx = ({ renderers: n }) => u.createElement(u.Fragment, null, Object.entries(n).map(([e, t]) => dm.createPortal(t.reactElement, t.element, e)));
class jx extends u.Component {
  constructor(e) {
    super(e), this.editorContentRef = u.createRef(), this.initialized = !1, this.state = {
      renderers: {}
    };
  }
  componentDidMount() {
    this.init();
  }
  componentDidUpdate() {
    this.init();
  }
  init() {
    const { editor: e } = this.props;
    if (e && e.options.element) {
      if (e.contentComponent)
        return;
      const t = this.editorContentRef.current;
      t.append(...e.options.element.childNodes), e.setOptions({
        element: t
      }), e.contentComponent = this, e.createNodeViews(), this.initialized = !0;
    }
  }
  maybeFlushSync(e) {
    this.initialized ? fm(e) : e();
  }
  setRenderer(e, t) {
    this.maybeFlushSync(() => {
      this.setState(({ renderers: r }) => ({
        renderers: {
          ...r,
          [e]: t
        }
      }));
    });
  }
  removeRenderer(e) {
    this.maybeFlushSync(() => {
      this.setState(({ renderers: t }) => {
        const r = { ...t };
        return delete r[e], { renderers: r };
      });
    });
  }
  componentWillUnmount() {
    const { editor: e } = this.props;
    if (!e || (this.initialized = !1, e.isDestroyed || e.view.setProps({
      nodeViews: {}
    }), e.contentComponent = null, !e.options.element.firstChild))
      return;
    const t = document.createElement("div");
    t.append(...e.options.element.childNodes), e.setOptions({
      element: t
    });
  }
  render() {
    const { editor: e, ...t } = this.props;
    return u.createElement(
      u.Fragment,
      null,
      u.createElement("div", { ref: this.editorContentRef, ...t }),
      u.createElement(Fx, { renderers: this.state.renderers })
    );
  }
}
const Ux = (n) => {
  const e = u.useMemo(() => Math.floor(Math.random() * 4294967295).toString(), [n.editor]);
  return u.createElement(jx, { key: e, ...n });
}, Bx = u.memo(Ux);
class Wx extends dx {
  constructor() {
    super(...arguments), this.contentComponent = null;
  }
}
function qx() {
  const [, n] = Es(0);
  return () => n((e) => e + 1);
}
const Kx = (n = {}, e = []) => {
  const [t, r] = Es(null), s = qx(), { onBeforeCreate: i, onBlur: o, onCreate: a, onDestroy: l, onFocus: c, onSelectionUpdate: d, onTransaction: f, onUpdate: m } = n, h = nn(i), p = nn(o), y = nn(a), v = nn(l), k = nn(c), P = nn(d), q = nn(f), te = nn(m);
  return vr(() => {
    t && (i && (t.off("beforeCreate", h.current), t.on("beforeCreate", i), h.current = i), o && (t.off("blur", p.current), t.on("blur", o), p.current = o), a && (t.off("create", y.current), t.on("create", a), y.current = a), l && (t.off("destroy", v.current), t.on("destroy", l), v.current = l), c && (t.off("focus", k.current), t.on("focus", c), k.current = c), d && (t.off("selectionUpdate", P.current), t.on("selectionUpdate", d), P.current = d), f && (t.off("transaction", q.current), t.on("transaction", f), q.current = f), m && (t.off("update", te.current), t.on("update", m), te.current = m));
  }, [i, o, a, l, c, d, f, m, t]), vr(() => {
    let re = !0;
    const V = new Wx(n);
    return r(V), V.on("transaction", () => {
      requestAnimationFrame(() => {
        requestAnimationFrame(() => {
          re && s();
        });
      });
    }), () => {
      re = !1;
    };
  }, e), vr(() => () => {
    t == null || t.destroy();
  }, [t]), t;
}, Jx = Rs({
  editor: null
});
Jx.Consumer;
const Gx = Rs({
  onDragStart: void 0
}), Yx = () => Ks(Gx);
u.forwardRef((n, e) => {
  const { onDragStart: t } = Yx(), r = n.as || "div";
  return u.createElement(r, { ...n, ref: e, "data-node-view-wrapper": "", onDragStart: t, style: {
    whiteSpace: "normal",
    ...n.style
  } });
});
const Qx = /^\s*>\s$/, Xx = qe.create({
  name: "blockquote",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  content: "block+",
  group: "block",
  defining: !0,
  parseHTML() {
    return [
      { tag: "blockquote" }
    ];
  },
  renderHTML({ HTMLAttributes: n }) {
    return ["blockquote", Ae(this.options.HTMLAttributes, n), 0];
  },
  addCommands() {
    return {
      setBlockquote: () => ({ commands: n }) => n.wrapIn(this.name),
      toggleBlockquote: () => ({ commands: n }) => n.toggleWrap(this.name),
      unsetBlockquote: () => ({ commands: n }) => n.lift(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Shift-b": () => this.editor.commands.toggleBlockquote()
    };
  },
  addInputRules() {
    return [
      ds({
        find: Qx,
        type: this.type
      })
    ];
  }
}), ew = /(?:^|\s)((?:\*\*)((?:[^*]+))(?:\*\*))$/, tw = /(?:^|\s)((?:\*\*)((?:[^*]+))(?:\*\*))/g, nw = /(?:^|\s)((?:__)((?:[^__]+))(?:__))$/, rw = /(?:^|\s)((?:__)((?:[^__]+))(?:__))/g, sw = dt.create({
  name: "bold",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "strong"
      },
      {
        tag: "b",
        getAttrs: (n) => n.style.fontWeight !== "normal" && null
      },
      {
        style: "font-weight",
        getAttrs: (n) => /^(bold(er)?|[5-9]\d{2,})$/.test(n) && null
      }
    ];
  },
  renderHTML({ HTMLAttributes: n }) {
    return ["strong", Ae(this.options.HTMLAttributes, n), 0];
  },
  addCommands() {
    return {
      setBold: () => ({ commands: n }) => n.setMark(this.name),
      toggleBold: () => ({ commands: n }) => n.toggleMark(this.name),
      unsetBold: () => ({ commands: n }) => n.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-b": () => this.editor.commands.toggleBold(),
      "Mod-B": () => this.editor.commands.toggleBold()
    };
  },
  addInputRules() {
    return [
      Qn({
        find: ew,
        type: this.type
      }),
      Qn({
        find: nw,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      kn({
        find: tw,
        type: this.type
      }),
      kn({
        find: rw,
        type: this.type
      })
    ];
  }
}), iw = qe.create({
  name: "listItem",
  addOptions() {
    return {
      HTMLAttributes: {},
      bulletListTypeName: "bulletList",
      orderedListTypeName: "orderedList"
    };
  },
  content: "paragraph block*",
  defining: !0,
  parseHTML() {
    return [
      {
        tag: "li"
      }
    ];
  },
  renderHTML({ HTMLAttributes: n }) {
    return ["li", Ae(this.options.HTMLAttributes, n), 0];
  },
  addKeyboardShortcuts() {
    return {
      Enter: () => this.editor.commands.splitListItem(this.name),
      Tab: () => this.editor.commands.sinkListItem(this.name),
      "Shift-Tab": () => this.editor.commands.liftListItem(this.name)
    };
  }
}), zu = dt.create({
  name: "textStyle",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "span",
        getAttrs: (n) => n.hasAttribute("style") ? {} : !1
      }
    ];
  },
  renderHTML({ HTMLAttributes: n }) {
    return ["span", Ae(this.options.HTMLAttributes, n), 0];
  },
  addCommands() {
    return {
      removeEmptyTextStyle: () => ({ state: n, commands: e }) => {
        const t = Gi(n, this.type);
        return Object.entries(t).some(([, s]) => !!s) ? !0 : e.unsetMark(this.name);
      }
    };
  }
}), Fu = /^\s*([-+*])\s$/, ow = qe.create({
  name: "bulletList",
  addOptions() {
    return {
      itemTypeName: "listItem",
      HTMLAttributes: {},
      keepMarks: !1,
      keepAttributes: !1
    };
  },
  group: "block list",
  content() {
    return `${this.options.itemTypeName}+`;
  },
  parseHTML() {
    return [
      { tag: "ul" }
    ];
  },
  renderHTML({ HTMLAttributes: n }) {
    return ["ul", Ae(this.options.HTMLAttributes, n), 0];
  },
  addCommands() {
    return {
      toggleBulletList: () => ({ commands: n, chain: e }) => this.options.keepAttributes ? e().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(iw.name, this.editor.getAttributes(zu.name)).run() : n.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Shift-8": () => this.editor.commands.toggleBulletList()
    };
  },
  addInputRules() {
    let n = ds({
      find: Fu,
      type: this.type
    });
    return (this.options.keepMarks || this.options.keepAttributes) && (n = ds({
      find: Fu,
      type: this.type,
      keepMarks: this.options.keepMarks,
      keepAttributes: this.options.keepAttributes,
      getAttributes: () => this.editor.getAttributes(zu.name),
      editor: this.editor
    })), [
      n
    ];
  }
}), aw = /(?:^|\s)((?:`)((?:[^`]+))(?:`))$/, lw = /(?:^|\s)((?:`)((?:[^`]+))(?:`))/g, cw = dt.create({
  name: "code",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  excludes: "_",
  code: !0,
  exitable: !0,
  parseHTML() {
    return [
      { tag: "code" }
    ];
  },
  renderHTML({ HTMLAttributes: n }) {
    return ["code", Ae(this.options.HTMLAttributes, n), 0];
  },
  addCommands() {
    return {
      setCode: () => ({ commands: n }) => n.setMark(this.name),
      toggleCode: () => ({ commands: n }) => n.toggleMark(this.name),
      unsetCode: () => ({ commands: n }) => n.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-e": () => this.editor.commands.toggleCode()
    };
  },
  addInputRules() {
    return [
      Qn({
        find: aw,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      kn({
        find: lw,
        type: this.type
      })
    ];
  }
}), uw = /^```([a-z]+)?[\s\n]$/, dw = /^~~~([a-z]+)?[\s\n]$/, fw = qe.create({
  name: "codeBlock",
  addOptions() {
    return {
      languageClassPrefix: "language-",
      exitOnTripleEnter: !0,
      exitOnArrowDown: !0,
      HTMLAttributes: {}
    };
  },
  content: "text*",
  marks: "",
  group: "block",
  code: !0,
  defining: !0,
  addAttributes() {
    return {
      language: {
        default: null,
        parseHTML: (n) => {
          var e;
          const { languageClassPrefix: t } = this.options, i = [...((e = n.firstElementChild) === null || e === void 0 ? void 0 : e.classList) || []].filter((o) => o.startsWith(t)).map((o) => o.replace(t, ""))[0];
          return i || null;
        },
        rendered: !1
      }
    };
  },
  parseHTML() {
    return [
      {
        tag: "pre",
        preserveWhitespace: "full"
      }
    ];
  },
  renderHTML({ node: n, HTMLAttributes: e }) {
    return [
      "pre",
      Ae(this.options.HTMLAttributes, e),
      [
        "code",
        {
          class: n.attrs.language ? this.options.languageClassPrefix + n.attrs.language : null
        },
        0
      ]
    ];
  },
  addCommands() {
    return {
      setCodeBlock: (n) => ({ commands: e }) => e.setNode(this.name, n),
      toggleCodeBlock: (n) => ({ commands: e }) => e.toggleNode(this.name, "paragraph", n)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Alt-c": () => this.editor.commands.toggleCodeBlock(),
      // remove code block when at start of document or code block is empty
      Backspace: () => {
        const { empty: n, $anchor: e } = this.editor.state.selection, t = e.pos === 1;
        return !n || e.parent.type.name !== this.name ? !1 : t || !e.parent.textContent.length ? this.editor.commands.clearNodes() : !1;
      },
      // exit node on triple enter
      Enter: ({ editor: n }) => {
        if (!this.options.exitOnTripleEnter)
          return !1;
        const { state: e } = n, { selection: t } = e, { $from: r, empty: s } = t;
        if (!s || r.parent.type !== this.type)
          return !1;
        const i = r.parentOffset === r.parent.nodeSize - 2, o = r.parent.textContent.endsWith(`

`);
        return !i || !o ? !1 : n.chain().command(({ tr: a }) => (a.delete(r.pos - 2, r.pos), !0)).exitCode().run();
      },
      // exit node on arrow down
      ArrowDown: ({ editor: n }) => {
        if (!this.options.exitOnArrowDown)
          return !1;
        const { state: e } = n, { selection: t, doc: r } = e, { $from: s, empty: i } = t;
        if (!i || s.parent.type !== this.type || !(s.parentOffset === s.parent.nodeSize - 2))
          return !1;
        const a = s.after();
        return a === void 0 || r.nodeAt(a) ? !1 : n.commands.exitCode();
      }
    };
  },
  addInputRules() {
    return [
      ca({
        find: uw,
        type: this.type,
        getAttributes: (n) => ({
          language: n[1]
        })
      }),
      ca({
        find: dw,
        type: this.type,
        getAttributes: (n) => ({
          language: n[1]
        })
      })
    ];
  },
  addProseMirrorPlugins() {
    return [
      // this plugin creates a code block for pasted content from VS Code
      // we can also detect the copied code language
      new it({
        key: new Tt("codeBlockVSCodeHandler"),
        props: {
          handlePaste: (n, e) => {
            if (!e.clipboardData || this.editor.isActive(this.type.name))
              return !1;
            const t = e.clipboardData.getData("text/plain"), r = e.clipboardData.getData("vscode-editor-data"), s = r ? JSON.parse(r) : void 0, i = s == null ? void 0 : s.mode;
            if (!t || !i)
              return !1;
            const { tr: o } = n.state;
            return o.replaceSelectionWith(this.type.create({ language: i })), o.setSelection(oe.near(o.doc.resolve(Math.max(0, o.selection.from - 2)))), o.insertText(t.replace(/\r\n?/g, `
`)), o.setMeta("paste", !0), n.dispatch(o), !0;
          }
        }
      })
    ];
  }
}), mw = qe.create({
  name: "doc",
  topNode: !0,
  content: "block+"
});
function hw(n = {}) {
  return new it({
    view(e) {
      return new pw(e, n);
    }
  });
}
class pw {
  constructor(e, t) {
    var r;
    this.editorView = e, this.cursorPos = null, this.element = null, this.timeout = -1, this.width = (r = t.width) !== null && r !== void 0 ? r : 1, this.color = t.color === !1 ? void 0 : t.color || "black", this.class = t.class, this.handlers = ["dragover", "dragend", "drop", "dragleave"].map((s) => {
      let i = (o) => {
        this[s](o);
      };
      return e.dom.addEventListener(s, i), { name: s, handler: i };
    });
  }
  destroy() {
    this.handlers.forEach(({ name: e, handler: t }) => this.editorView.dom.removeEventListener(e, t));
  }
  update(e, t) {
    this.cursorPos != null && t.doc != e.state.doc && (this.cursorPos > e.state.doc.content.size ? this.setCursor(null) : this.updateOverlay());
  }
  setCursor(e) {
    e != this.cursorPos && (this.cursorPos = e, e == null ? (this.element.parentNode.removeChild(this.element), this.element = null) : this.updateOverlay());
  }
  updateOverlay() {
    let e = this.editorView.state.doc.resolve(this.cursorPos), t = !e.parent.inlineContent, r;
    if (t) {
      let a = e.nodeBefore, l = e.nodeAfter;
      if (a || l) {
        let c = this.editorView.nodeDOM(this.cursorPos - (a ? a.nodeSize : 0));
        if (c) {
          let d = c.getBoundingClientRect(), f = a ? d.bottom : d.top;
          a && l && (f = (f + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2), r = { left: d.left, right: d.right, top: f - this.width / 2, bottom: f + this.width / 2 };
        }
      }
    }
    if (!r) {
      let a = this.editorView.coordsAtPos(this.cursorPos);
      r = { left: a.left - this.width / 2, right: a.left + this.width / 2, top: a.top, bottom: a.bottom };
    }
    let s = this.editorView.dom.offsetParent;
    this.element || (this.element = s.appendChild(document.createElement("div")), this.class && (this.element.className = this.class), this.element.style.cssText = "position: absolute; z-index: 50; pointer-events: none;", this.color && (this.element.style.backgroundColor = this.color)), this.element.classList.toggle("prosemirror-dropcursor-block", t), this.element.classList.toggle("prosemirror-dropcursor-inline", !t);
    let i, o;
    if (!s || s == document.body && getComputedStyle(s).position == "static")
      i = -pageXOffset, o = -pageYOffset;
    else {
      let a = s.getBoundingClientRect();
      i = a.left - s.scrollLeft, o = a.top - s.scrollTop;
    }
    this.element.style.left = r.left - i + "px", this.element.style.top = r.top - o + "px", this.element.style.width = r.right - r.left + "px", this.element.style.height = r.bottom - r.top + "px";
  }
  scheduleRemoval(e) {
    clearTimeout(this.timeout), this.timeout = setTimeout(() => this.setCursor(null), e);
  }
  dragover(e) {
    if (!this.editorView.editable)
      return;
    let t = this.editorView.posAtCoords({ left: e.clientX, top: e.clientY }), r = t && t.inside >= 0 && this.editorView.state.doc.nodeAt(t.inside), s = r && r.type.spec.disableDropCursor, i = typeof s == "function" ? s(this.editorView, t, e) : s;
    if (t && !i) {
      let o = t.pos;
      if (this.editorView.dragging && this.editorView.dragging.slice) {
        let a = Df(this.editorView.state.doc, o, this.editorView.dragging.slice);
        a != null && (o = a);
      }
      this.setCursor(o), this.scheduleRemoval(5e3);
    }
  }
  dragend() {
    this.scheduleRemoval(20);
  }
  drop() {
    this.scheduleRemoval(20);
  }
  dragleave(e) {
    (e.target == this.editorView.dom || !this.editorView.dom.contains(e.relatedTarget)) && this.setCursor(null);
  }
}
const gw = lt.create({
  name: "dropCursor",
  addOptions() {
    return {
      color: "currentColor",
      width: 1,
      class: void 0
    };
  },
  addProseMirrorPlugins() {
    return [
      hw(this.options)
    ];
  }
});
class De extends de {
  /**
  Create a gap cursor.
  */
  constructor(e) {
    super(e, e);
  }
  map(e, t) {
    let r = e.resolve(t.map(this.head));
    return De.valid(r) ? new De(r) : de.near(r);
  }
  content() {
    return F.empty;
  }
  eq(e) {
    return e instanceof De && e.head == this.head;
  }
  toJSON() {
    return { type: "gapcursor", pos: this.head };
  }
  /**
  @internal
  */
  static fromJSON(e, t) {
    if (typeof t.pos != "number")
      throw new RangeError("Invalid input for GapCursor.fromJSON");
    return new De(e.resolve(t.pos));
  }
  /**
  @internal
  */
  getBookmark() {
    return new rl(this.anchor);
  }
  /**
  @internal
  */
  static valid(e) {
    let t = e.parent;
    if (t.isTextblock || !bw(e) || !yw(e))
      return !1;
    let r = t.type.spec.allowGapCursor;
    if (r != null)
      return r;
    let s = t.contentMatchAt(e.index()).defaultType;
    return s && s.isTextblock;
  }
  /**
  @internal
  */
  static findGapCursorFrom(e, t, r = !1) {
    e:
      for (; ; ) {
        if (!r && De.valid(e))
          return e;
        let s = e.pos, i = null;
        for (let o = e.depth; ; o--) {
          let a = e.node(o);
          if (t > 0 ? e.indexAfter(o) < a.childCount : e.index(o) > 0) {
            i = a.child(t > 0 ? e.indexAfter(o) : e.index(o) - 1);
            break;
          } else if (o == 0)
            return null;
          s += t;
          let l = e.doc.resolve(s);
          if (De.valid(l))
            return l;
        }
        for (; ; ) {
          let o = t > 0 ? i.firstChild : i.lastChild;
          if (!o) {
            if (i.isAtom && !i.isText && !X.isSelectable(i)) {
              e = e.doc.resolve(s + i.nodeSize * t), r = !1;
              continue e;
            }
            break;
          }
          i = o, s += t;
          let a = e.doc.resolve(s);
          if (De.valid(a))
            return a;
        }
        return null;
      }
  }
}
De.prototype.visible = !1;
De.findFrom = De.findGapCursorFrom;
de.jsonID("gapcursor", De);
class rl {
  constructor(e) {
    this.pos = e;
  }
  map(e) {
    return new rl(e.map(this.pos));
  }
  resolve(e) {
    let t = e.resolve(this.pos);
    return De.valid(t) ? new De(t) : de.near(t);
  }
}
function bw(n) {
  for (let e = n.depth; e >= 0; e--) {
    let t = n.index(e), r = n.node(e);
    if (t == 0) {
      if (r.type.spec.isolating)
        return !0;
      continue;
    }
    for (let s = r.child(t - 1); ; s = s.lastChild) {
      if (s.childCount == 0 && !s.inlineContent || s.isAtom || s.type.spec.isolating)
        return !0;
      if (s.inlineContent)
        return !1;
    }
  }
  return !0;
}
function yw(n) {
  for (let e = n.depth; e >= 0; e--) {
    let t = n.indexAfter(e), r = n.node(e);
    if (t == r.childCount) {
      if (r.type.spec.isolating)
        return !0;
      continue;
    }
    for (let s = r.child(t); ; s = s.firstChild) {
      if (s.childCount == 0 && !s.inlineContent || s.isAtom || s.type.spec.isolating)
        return !0;
      if (s.inlineContent)
        return !1;
    }
  }
  return !0;
}
function vw() {
  return new it({
    props: {
      decorations: kw,
      createSelectionBetween(n, e, t) {
        return e.pos == t.pos && De.valid(t) ? new De(t) : null;
      },
      handleClick: ww,
      handleKeyDown: xw,
      handleDOMEvents: { beforeinput: Nw }
    }
  });
}
const xw = x0({
  ArrowLeft: zs("horiz", -1),
  ArrowRight: zs("horiz", 1),
  ArrowUp: zs("vert", -1),
  ArrowDown: zs("vert", 1)
});
function zs(n, e) {
  const t = n == "vert" ? e > 0 ? "down" : "up" : e > 0 ? "right" : "left";
  return function(r, s, i) {
    let o = r.selection, a = e > 0 ? o.$to : o.$from, l = o.empty;
    if (o instanceof oe) {
      if (!i.endOfTextblock(t) || a.depth == 0)
        return !1;
      l = !1, a = r.doc.resolve(e > 0 ? a.after() : a.before());
    }
    let c = De.findGapCursorFrom(a, e, l);
    return c ? (s && s(r.tr.setSelection(new De(c))), !0) : !1;
  };
}
function ww(n, e, t) {
  if (!n || !n.editable)
    return !1;
  let r = n.state.doc.resolve(e);
  if (!De.valid(r))
    return !1;
  let s = n.posAtCoords({ left: t.clientX, top: t.clientY });
  return s && s.inside > -1 && X.isSelectable(n.state.doc.nodeAt(s.inside)) ? !1 : (n.dispatch(n.state.tr.setSelection(new De(r))), !0);
}
function Nw(n, e) {
  if (e.inputType != "insertCompositionText" || !(n.state.selection instanceof De))
    return !1;
  let { $from: t } = n.state.selection, r = t.parent.contentMatchAt(t.index()).findWrapping(n.state.schema.nodes.text);
  if (!r)
    return !1;
  let s = D.empty;
  for (let o = r.length - 1; o >= 0; o--)
    s = D.from(r[o].createAndFill(null, s));
  let i = n.state.tr.replace(t.pos, t.pos, new F(s, 0, 0));
  return i.setSelection(oe.near(i.doc.resolve(t.pos + 1))), n.dispatch(i), !1;
}
function kw(n) {
  if (!(n.selection instanceof De))
    return null;
  let e = document.createElement("div");
  return e.className = "ProseMirror-gapcursor", Le.create(n.doc, [vt.widget(n.selection.head, e, { key: "gapcursor" })]);
}
const Mw = lt.create({
  name: "gapCursor",
  addProseMirrorPlugins() {
    return [
      vw()
    ];
  },
  extendNodeSchema(n) {
    var e;
    const t = {
      name: n.name,
      options: n.options,
      storage: n.storage
    };
    return {
      allowGapCursor: (e = ue(B(n, "allowGapCursor", t))) !== null && e !== void 0 ? e : null
    };
  }
}), Cw = qe.create({
  name: "hardBreak",
  addOptions() {
    return {
      keepMarks: !0,
      HTMLAttributes: {}
    };
  },
  inline: !0,
  group: "inline",
  selectable: !1,
  parseHTML() {
    return [
      { tag: "br" }
    ];
  },
  renderHTML({ HTMLAttributes: n }) {
    return ["br", Ae(this.options.HTMLAttributes, n)];
  },
  renderText() {
    return `
`;
  },
  addCommands() {
    return {
      setHardBreak: () => ({ commands: n, chain: e, state: t, editor: r }) => n.first([
        () => n.exitCode(),
        () => n.command(() => {
          const { selection: s, storedMarks: i } = t;
          if (s.$from.parent.type.spec.isolating)
            return !1;
          const { keepMarks: o } = this.options, { splittableMarks: a } = r.extensionManager, l = i || s.$to.parentOffset && s.$from.marks();
          return e().insertContent({ type: this.name }).command(({ tr: c, dispatch: d }) => {
            if (d && l && o) {
              const f = l.filter((m) => a.includes(m.type.name));
              c.ensureMarks(f);
            }
            return !0;
          }).run();
        })
      ])
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Enter": () => this.editor.commands.setHardBreak(),
      "Shift-Enter": () => this.editor.commands.setHardBreak()
    };
  }
}), Rw = qe.create({
  name: "heading",
  addOptions() {
    return {
      levels: [1, 2, 3, 4, 5, 6],
      HTMLAttributes: {}
    };
  },
  content: "inline*",
  group: "block",
  defining: !0,
  addAttributes() {
    return {
      level: {
        default: 1,
        rendered: !1
      }
    };
  },
  parseHTML() {
    return this.options.levels.map((n) => ({
      tag: `h${n}`,
      attrs: { level: n }
    }));
  },
  renderHTML({ node: n, HTMLAttributes: e }) {
    return [`h${this.options.levels.includes(n.attrs.level) ? n.attrs.level : this.options.levels[0]}`, Ae(this.options.HTMLAttributes, e), 0];
  },
  addCommands() {
    return {
      setHeading: (n) => ({ commands: e }) => this.options.levels.includes(n.level) ? e.setNode(this.name, n) : !1,
      toggleHeading: (n) => ({ commands: e }) => this.options.levels.includes(n.level) ? e.toggleNode(this.name, "paragraph", n) : !1
    };
  },
  addKeyboardShortcuts() {
    return this.options.levels.reduce((n, e) => ({
      ...n,
      [`Mod-Alt-${e}`]: () => this.editor.commands.toggleHeading({ level: e })
    }), {});
  },
  addInputRules() {
    return this.options.levels.map((n) => ca({
      find: new RegExp(`^(#{1,${n}})\\s$`),
      type: this.type,
      getAttributes: {
        level: n
      }
    }));
  }
});
var Ri = 200, Fe = function() {
};
Fe.prototype.append = function(e) {
  return e.length ? (e = Fe.from(e), !this.length && e || e.length < Ri && this.leafAppend(e) || this.length < Ri && e.leafPrepend(this) || this.appendInner(e)) : this;
};
Fe.prototype.prepend = function(e) {
  return e.length ? Fe.from(e).append(this) : this;
};
Fe.prototype.appendInner = function(e) {
  return new Ew(this, e);
};
Fe.prototype.slice = function(e, t) {
  return e === void 0 && (e = 0), t === void 0 && (t = this.length), e >= t ? Fe.empty : this.sliceInner(Math.max(0, e), Math.min(this.length, t));
};
Fe.prototype.get = function(e) {
  if (!(e < 0 || e >= this.length))
    return this.getInner(e);
};
Fe.prototype.forEach = function(e, t, r) {
  t === void 0 && (t = 0), r === void 0 && (r = this.length), t <= r ? this.forEachInner(e, t, r, 0) : this.forEachInvertedInner(e, t, r, 0);
};
Fe.prototype.map = function(e, t, r) {
  t === void 0 && (t = 0), r === void 0 && (r = this.length);
  var s = [];
  return this.forEach(function(i, o) {
    return s.push(e(i, o));
  }, t, r), s;
};
Fe.from = function(e) {
  return e instanceof Fe ? e : e && e.length ? new V0(e) : Fe.empty;
};
var V0 = /* @__PURE__ */ function(n) {
  function e(r) {
    n.call(this), this.values = r;
  }
  n && (e.__proto__ = n), e.prototype = Object.create(n && n.prototype), e.prototype.constructor = e;
  var t = { length: { configurable: !0 }, depth: { configurable: !0 } };
  return e.prototype.flatten = function() {
    return this.values;
  }, e.prototype.sliceInner = function(s, i) {
    return s == 0 && i == this.length ? this : new e(this.values.slice(s, i));
  }, e.prototype.getInner = function(s) {
    return this.values[s];
  }, e.prototype.forEachInner = function(s, i, o, a) {
    for (var l = i; l < o; l++)
      if (s(this.values[l], a + l) === !1)
        return !1;
  }, e.prototype.forEachInvertedInner = function(s, i, o, a) {
    for (var l = i - 1; l >= o; l--)
      if (s(this.values[l], a + l) === !1)
        return !1;
  }, e.prototype.leafAppend = function(s) {
    if (this.length + s.length <= Ri)
      return new e(this.values.concat(s.flatten()));
  }, e.prototype.leafPrepend = function(s) {
    if (this.length + s.length <= Ri)
      return new e(s.flatten().concat(this.values));
  }, t.length.get = function() {
    return this.values.length;
  }, t.depth.get = function() {
    return 0;
  }, Object.defineProperties(e.prototype, t), e;
}(Fe);
Fe.empty = new V0([]);
var Ew = /* @__PURE__ */ function(n) {
  function e(t, r) {
    n.call(this), this.left = t, this.right = r, this.length = t.length + r.length, this.depth = Math.max(t.depth, r.depth) + 1;
  }
  return n && (e.__proto__ = n), e.prototype = Object.create(n && n.prototype), e.prototype.constructor = e, e.prototype.flatten = function() {
    return this.left.flatten().concat(this.right.flatten());
  }, e.prototype.getInner = function(r) {
    return r < this.left.length ? this.left.get(r) : this.right.get(r - this.left.length);
  }, e.prototype.forEachInner = function(r, s, i, o) {
    var a = this.left.length;
    if (s < a && this.left.forEachInner(r, s, Math.min(i, a), o) === !1 || i > a && this.right.forEachInner(r, Math.max(s - a, 0), Math.min(this.length, i) - a, o + a) === !1)
      return !1;
  }, e.prototype.forEachInvertedInner = function(r, s, i, o) {
    var a = this.left.length;
    if (s > a && this.right.forEachInvertedInner(r, s - a, Math.max(i, a) - a, o + a) === !1 || i < a && this.left.forEachInvertedInner(r, Math.min(s, a), i, o) === !1)
      return !1;
  }, e.prototype.sliceInner = function(r, s) {
    if (r == 0 && s == this.length)
      return this;
    var i = this.left.length;
    return s <= i ? this.left.slice(r, s) : r >= i ? this.right.slice(r - i, s - i) : this.left.slice(r, i).append(this.right.slice(0, s - i));
  }, e.prototype.leafAppend = function(r) {
    var s = this.right.leafAppend(r);
    if (s)
      return new e(this.left, s);
  }, e.prototype.leafPrepend = function(r) {
    var s = this.left.leafPrepend(r);
    if (s)
      return new e(s, this.right);
  }, e.prototype.appendInner = function(r) {
    return this.left.depth >= Math.max(this.right.depth, r.depth) + 1 ? new e(this.left, new e(this.right, r)) : new e(this, r);
  }, e;
}(Fe);
const Sw = 500;
class Mt {
  constructor(e, t) {
    this.items = e, this.eventCount = t;
  }
  // Pop the latest event off the branch's history and apply it
  // to a document transform.
  popEvent(e, t) {
    if (this.eventCount == 0)
      return null;
    let r = this.items.length;
    for (; ; r--)
      if (this.items.get(r - 1).selection) {
        --r;
        break;
      }
    let s, i;
    t && (s = this.remapping(r, this.items.length), i = s.maps.length);
    let o = e.tr, a, l, c = [], d = [];
    return this.items.forEach((f, m) => {
      if (!f.step) {
        s || (s = this.remapping(r, m + 1), i = s.maps.length), i--, d.push(f);
        return;
      }
      if (s) {
        d.push(new Pt(f.map));
        let h = f.step.map(s.slice(i)), p;
        h && o.maybeStep(h).doc && (p = o.mapping.maps[o.mapping.maps.length - 1], c.push(new Pt(p, void 0, void 0, c.length + d.length))), i--, p && s.appendMap(p, i);
      } else
        o.maybeStep(f.step);
      if (f.selection)
        return a = s ? f.selection.map(s.slice(i)) : f.selection, l = new Mt(this.items.slice(0, r).append(d.reverse().concat(c)), this.eventCount - 1), !1;
    }, this.items.length, 0), { remaining: l, transform: o, selection: a };
  }
  // Create a new branch with the given transform added.
  addTransform(e, t, r, s) {
    let i = [], o = this.eventCount, a = this.items, l = !s && a.length ? a.get(a.length - 1) : null;
    for (let d = 0; d < e.steps.length; d++) {
      let f = e.steps[d].invert(e.docs[d]), m = new Pt(e.mapping.maps[d], f, t), h;
      (h = l && l.merge(m)) && (m = h, d ? i.pop() : a = a.slice(0, a.length - 1)), i.push(m), t && (o++, t = void 0), s || (l = m);
    }
    let c = o - r.depth;
    return c > Ow && (a = Aw(a, c), o -= c), new Mt(a.append(i), o);
  }
  remapping(e, t) {
    let r = new xr();
    return this.items.forEach((s, i) => {
      let o = s.mirrorOffset != null && i - s.mirrorOffset >= e ? r.maps.length - s.mirrorOffset : void 0;
      r.appendMap(s.map, o);
    }, e, t), r;
  }
  addMaps(e) {
    return this.eventCount == 0 ? this : new Mt(this.items.append(e.map((t) => new Pt(t))), this.eventCount);
  }
  // When the collab module receives remote changes, the history has
  // to know about those, so that it can adjust the steps that were
  // rebased on top of the remote changes, and include the position
  // maps for the remote changes in its array of items.
  rebased(e, t) {
    if (!this.eventCount)
      return this;
    let r = [], s = Math.max(0, this.items.length - t), i = e.mapping, o = e.steps.length, a = this.eventCount;
    this.items.forEach((m) => {
      m.selection && a--;
    }, s);
    let l = t;
    this.items.forEach((m) => {
      let h = i.getMirror(--l);
      if (h == null)
        return;
      o = Math.min(o, h);
      let p = i.maps[h];
      if (m.step) {
        let y = e.steps[h].invert(e.docs[h]), v = m.selection && m.selection.map(i.slice(l + 1, h));
        v && a++, r.push(new Pt(p, y, v));
      } else
        r.push(new Pt(p));
    }, s);
    let c = [];
    for (let m = t; m < o; m++)
      c.push(new Pt(i.maps[m]));
    let d = this.items.slice(0, s).append(c).append(r), f = new Mt(d, a);
    return f.emptyItemCount() > Sw && (f = f.compress(this.items.length - r.length)), f;
  }
  emptyItemCount() {
    let e = 0;
    return this.items.forEach((t) => {
      t.step || e++;
    }), e;
  }
  // Compressing a branch means rewriting it to push the air (map-only
  // items) out. During collaboration, these naturally accumulate
  // because each remote change adds one. The `upto` argument is used
  // to ensure that only the items below a given level are compressed,
  // because `rebased` relies on a clean, untouched set of items in
  // order to associate old items with rebased steps.
  compress(e = this.items.length) {
    let t = this.remapping(0, e), r = t.maps.length, s = [], i = 0;
    return this.items.forEach((o, a) => {
      if (a >= e)
        s.push(o), o.selection && i++;
      else if (o.step) {
        let l = o.step.map(t.slice(r)), c = l && l.getMap();
        if (r--, c && t.appendMap(c, r), l) {
          let d = o.selection && o.selection.map(t.slice(r));
          d && i++;
          let f = new Pt(c.invert(), l, d), m, h = s.length - 1;
          (m = s.length && s[h].merge(f)) ? s[h] = m : s.push(f);
        }
      } else
        o.map && r--;
    }, this.items.length, 0), new Mt(Fe.from(s.reverse()), i);
  }
}
Mt.empty = new Mt(Fe.empty, 0);
function Aw(n, e) {
  let t;
  return n.forEach((r, s) => {
    if (r.selection && e-- == 0)
      return t = s, !1;
  }), n.slice(t);
}
class Pt {
  constructor(e, t, r, s) {
    this.map = e, this.step = t, this.selection = r, this.mirrorOffset = s;
  }
  merge(e) {
    if (this.step && e.step && !e.selection) {
      let t = e.step.merge(this.step);
      if (t)
        return new Pt(t.getMap().invert(), t, this.selection);
    }
  }
}
class dn {
  constructor(e, t, r, s, i) {
    this.done = e, this.undone = t, this.prevRanges = r, this.prevTime = s, this.prevComposition = i;
  }
}
const Ow = 20;
function Tw(n, e, t, r) {
  let s = t.getMeta(wn), i;
  if (s)
    return s.historyState;
  t.getMeta(Dw) && (n = new dn(n.done, n.undone, null, 0, -1));
  let o = t.getMeta("appendedTransaction");
  if (t.steps.length == 0)
    return n;
  if (o && o.getMeta(wn))
    return o.getMeta(wn).redo ? new dn(n.done.addTransform(t, void 0, r, Ws(e)), n.undone, ju(t.mapping.maps[t.steps.length - 1]), n.prevTime, n.prevComposition) : new dn(n.done, n.undone.addTransform(t, void 0, r, Ws(e)), null, n.prevTime, n.prevComposition);
  if (t.getMeta("addToHistory") !== !1 && !(o && o.getMeta("addToHistory") === !1)) {
    let a = t.getMeta("composition"), l = n.prevTime == 0 || !o && n.prevComposition != a && (n.prevTime < (t.time || 0) - r.newGroupDelay || !_w(t, n.prevRanges)), c = o ? Oo(n.prevRanges, t.mapping) : ju(t.mapping.maps[t.steps.length - 1]);
    return new dn(n.done.addTransform(t, l ? e.selection.getBookmark() : void 0, r, Ws(e)), Mt.empty, c, t.time, a ?? n.prevComposition);
  } else
    return (i = t.getMeta("rebased")) ? new dn(n.done.rebased(t, i), n.undone.rebased(t, i), Oo(n.prevRanges, t.mapping), n.prevTime, n.prevComposition) : new dn(n.done.addMaps(t.mapping.maps), n.undone.addMaps(t.mapping.maps), Oo(n.prevRanges, t.mapping), n.prevTime, n.prevComposition);
}
function _w(n, e) {
  if (!e)
    return !1;
  if (!n.docChanged)
    return !0;
  let t = !1;
  return n.mapping.maps[0].forEach((r, s) => {
    for (let i = 0; i < e.length; i += 2)
      r <= e[i + 1] && s >= e[i] && (t = !0);
  }), t;
}
function ju(n) {
  let e = [];
  return n.forEach((t, r, s, i) => e.push(s, i)), e;
}
function Oo(n, e) {
  if (!n)
    return null;
  let t = [];
  for (let r = 0; r < n.length; r += 2) {
    let s = e.map(n[r], 1), i = e.map(n[r + 1], -1);
    s <= i && t.push(s, i);
  }
  return t;
}
function z0(n, e, t, r) {
  let s = Ws(e), i = wn.get(e).spec.config, o = (r ? n.undone : n.done).popEvent(e, s);
  if (!o)
    return;
  let a = o.selection.resolve(o.transform.doc), l = (r ? n.done : n.undone).addTransform(o.transform, e.selection.getBookmark(), i, s), c = new dn(r ? l : o.remaining, r ? o.remaining : l, null, 0, -1);
  t(o.transform.setSelection(a).setMeta(wn, { redo: r, historyState: c }).scrollIntoView());
}
let To = !1, Uu = null;
function Ws(n) {
  let e = n.plugins;
  if (Uu != e) {
    To = !1, Uu = e;
    for (let t = 0; t < e.length; t++)
      if (e[t].spec.historyPreserveItems) {
        To = !0;
        break;
      }
  }
  return To;
}
const wn = new Tt("history"), Dw = new Tt("closeHistory");
function Hw(n = {}) {
  return n = {
    depth: n.depth || 100,
    newGroupDelay: n.newGroupDelay || 500
  }, new it({
    key: wn,
    state: {
      init() {
        return new dn(Mt.empty, Mt.empty, null, 0, -1);
      },
      apply(e, t, r) {
        return Tw(t, r, e, n);
      }
    },
    config: n,
    props: {
      handleDOMEvents: {
        beforeinput(e, t) {
          let r = t.inputType, s = r == "historyUndo" ? F0 : r == "historyRedo" ? j0 : null;
          return s ? (t.preventDefault(), s(e.state, e.dispatch)) : !1;
        }
      }
    }
  });
}
const F0 = (n, e) => {
  let t = wn.getState(n);
  return !t || t.done.eventCount == 0 ? !1 : (e && z0(t, n, e, !1), !0);
}, j0 = (n, e) => {
  let t = wn.getState(n);
  return !t || t.undone.eventCount == 0 ? !1 : (e && z0(t, n, e, !0), !0);
}, Iw = lt.create({
  name: "history",
  addOptions() {
    return {
      depth: 100,
      newGroupDelay: 500
    };
  },
  addCommands() {
    return {
      undo: () => ({ state: n, dispatch: e }) => F0(n, e),
      redo: () => ({ state: n, dispatch: e }) => j0(n, e)
    };
  },
  addProseMirrorPlugins() {
    return [
      Hw(this.options)
    ];
  },
  addKeyboardShortcuts() {
    return {
      "Mod-z": () => this.editor.commands.undo(),
      "Mod-Z": () => this.editor.commands.undo(),
      "Mod-y": () => this.editor.commands.redo(),
      "Mod-Y": () => this.editor.commands.redo(),
      "Shift-Mod-z": () => this.editor.commands.redo(),
      "Shift-Mod-Z": () => this.editor.commands.redo(),
      // Russian keyboard layouts
      "Mod-я": () => this.editor.commands.undo(),
      "Shift-Mod-я": () => this.editor.commands.redo()
    };
  }
}), Pw = qe.create({
  name: "horizontalRule",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  group: "block",
  parseHTML() {
    return [{ tag: "hr" }];
  },
  renderHTML({ HTMLAttributes: n }) {
    return ["hr", Ae(this.options.HTMLAttributes, n)];
  },
  addCommands() {
    return {
      setHorizontalRule: () => ({ chain: n, state: e }) => {
        const { $to: t } = e.selection, r = n();
        return t.parentOffset === 0 ? r.insertContentAt(Math.max(t.pos - 2, 0), { type: this.name }) : r.insertContent({ type: this.name }), r.command(({ tr: s, dispatch: i }) => {
          var o;
          if (i) {
            const { $to: a } = s.selection, l = a.end();
            if (a.nodeAfter)
              a.nodeAfter.isTextblock ? s.setSelection(oe.create(s.doc, a.pos + 1)) : a.nodeAfter.isBlock ? s.setSelection(X.create(s.doc, a.pos)) : s.setSelection(oe.create(s.doc, a.pos));
            else {
              const c = (o = a.parent.type.contentMatch.defaultType) === null || o === void 0 ? void 0 : o.create();
              c && (s.insert(l, c), s.setSelection(oe.create(s.doc, l + 1)));
            }
            s.scrollIntoView();
          }
          return !0;
        }).run();
      }
    };
  },
  addInputRules() {
    return [
      H0({
        find: /^(?:---|—-|___\s|\*\*\*\s)$/,
        type: this.type
      })
    ];
  }
}), Lw = /(?:^|\s)((?:\*)((?:[^*]+))(?:\*))$/, Zw = /(?:^|\s)((?:\*)((?:[^*]+))(?:\*))/g, $w = /(?:^|\s)((?:_)((?:[^_]+))(?:_))$/, Vw = /(?:^|\s)((?:_)((?:[^_]+))(?:_))/g, zw = dt.create({
  name: "italic",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "em"
      },
      {
        tag: "i",
        getAttrs: (n) => n.style.fontStyle !== "normal" && null
      },
      {
        style: "font-style=italic"
      }
    ];
  },
  renderHTML({ HTMLAttributes: n }) {
    return ["em", Ae(this.options.HTMLAttributes, n), 0];
  },
  addCommands() {
    return {
      setItalic: () => ({ commands: n }) => n.setMark(this.name),
      toggleItalic: () => ({ commands: n }) => n.toggleMark(this.name),
      unsetItalic: () => ({ commands: n }) => n.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-i": () => this.editor.commands.toggleItalic(),
      "Mod-I": () => this.editor.commands.toggleItalic()
    };
  },
  addInputRules() {
    return [
      Qn({
        find: Lw,
        type: this.type
      }),
      Qn({
        find: $w,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      kn({
        find: Zw,
        type: this.type
      }),
      kn({
        find: Vw,
        type: this.type
      })
    ];
  }
}), Fw = qe.create({
  name: "listItem",
  addOptions() {
    return {
      HTMLAttributes: {},
      bulletListTypeName: "bulletList",
      orderedListTypeName: "orderedList"
    };
  },
  content: "paragraph block*",
  defining: !0,
  parseHTML() {
    return [
      {
        tag: "li"
      }
    ];
  },
  renderHTML({ HTMLAttributes: n }) {
    return ["li", Ae(this.options.HTMLAttributes, n), 0];
  },
  addKeyboardShortcuts() {
    return {
      Enter: () => this.editor.commands.splitListItem(this.name),
      Tab: () => this.editor.commands.sinkListItem(this.name),
      "Shift-Tab": () => this.editor.commands.liftListItem(this.name)
    };
  }
}), jw = qe.create({
  name: "listItem",
  addOptions() {
    return {
      HTMLAttributes: {},
      bulletListTypeName: "bulletList",
      orderedListTypeName: "orderedList"
    };
  },
  content: "paragraph block*",
  defining: !0,
  parseHTML() {
    return [
      {
        tag: "li"
      }
    ];
  },
  renderHTML({ HTMLAttributes: n }) {
    return ["li", Ae(this.options.HTMLAttributes, n), 0];
  },
  addKeyboardShortcuts() {
    return {
      Enter: () => this.editor.commands.splitListItem(this.name),
      Tab: () => this.editor.commands.sinkListItem(this.name),
      "Shift-Tab": () => this.editor.commands.liftListItem(this.name)
    };
  }
}), Bu = dt.create({
  name: "textStyle",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "span",
        getAttrs: (n) => n.hasAttribute("style") ? {} : !1
      }
    ];
  },
  renderHTML({ HTMLAttributes: n }) {
    return ["span", Ae(this.options.HTMLAttributes, n), 0];
  },
  addCommands() {
    return {
      removeEmptyTextStyle: () => ({ state: n, commands: e }) => {
        const t = Gi(n, this.type);
        return Object.entries(t).some(([, s]) => !!s) ? !0 : e.unsetMark(this.name);
      }
    };
  }
}), Wu = /^(\d+)\.\s$/, Uw = qe.create({
  name: "orderedList",
  addOptions() {
    return {
      itemTypeName: "listItem",
      HTMLAttributes: {},
      keepMarks: !1,
      keepAttributes: !1
    };
  },
  group: "block list",
  content() {
    return `${this.options.itemTypeName}+`;
  },
  addAttributes() {
    return {
      start: {
        default: 1,
        parseHTML: (n) => n.hasAttribute("start") ? parseInt(n.getAttribute("start") || "", 10) : 1
      }
    };
  },
  parseHTML() {
    return [
      {
        tag: "ol"
      }
    ];
  },
  renderHTML({ HTMLAttributes: n }) {
    const { start: e, ...t } = n;
    return e === 1 ? ["ol", Ae(this.options.HTMLAttributes, t), 0] : ["ol", Ae(this.options.HTMLAttributes, n), 0];
  },
  addCommands() {
    return {
      toggleOrderedList: () => ({ commands: n, chain: e }) => this.options.keepAttributes ? e().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(jw.name, this.editor.getAttributes(Bu.name)).run() : n.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Shift-7": () => this.editor.commands.toggleOrderedList()
    };
  },
  addInputRules() {
    let n = ds({
      find: Wu,
      type: this.type,
      getAttributes: (e) => ({ start: +e[1] }),
      joinPredicate: (e, t) => t.childCount + t.attrs.start === +e[1]
    });
    return (this.options.keepMarks || this.options.keepAttributes) && (n = ds({
      find: Wu,
      type: this.type,
      keepMarks: this.options.keepMarks,
      keepAttributes: this.options.keepAttributes,
      getAttributes: (e) => ({ start: +e[1], ...this.editor.getAttributes(Bu.name) }),
      joinPredicate: (e, t) => t.childCount + t.attrs.start === +e[1],
      editor: this.editor
    })), [
      n
    ];
  }
}), Bw = qe.create({
  name: "paragraph",
  priority: 1e3,
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  group: "block",
  content: "inline*",
  parseHTML() {
    return [
      { tag: "p" }
    ];
  },
  renderHTML({ HTMLAttributes: n }) {
    return ["p", Ae(this.options.HTMLAttributes, n), 0];
  },
  addCommands() {
    return {
      setParagraph: () => ({ commands: n }) => n.setNode(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Alt-0": () => this.editor.commands.setParagraph()
    };
  }
}), Ww = /(?:^|\s)((?:~~)((?:[^~]+))(?:~~))$/, qw = /(?:^|\s)((?:~~)((?:[^~]+))(?:~~))/g, Kw = dt.create({
  name: "strike",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "s"
      },
      {
        tag: "del"
      },
      {
        tag: "strike"
      },
      {
        style: "text-decoration",
        consuming: !1,
        getAttrs: (n) => n.includes("line-through") ? {} : !1
      }
    ];
  },
  renderHTML({ HTMLAttributes: n }) {
    return ["s", Ae(this.options.HTMLAttributes, n), 0];
  },
  addCommands() {
    return {
      setStrike: () => ({ commands: n }) => n.setMark(this.name),
      toggleStrike: () => ({ commands: n }) => n.toggleMark(this.name),
      unsetStrike: () => ({ commands: n }) => n.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    const n = {};
    return Wa() ? n["Mod-Shift-s"] = () => this.editor.commands.toggleStrike() : n["Ctrl-Shift-s"] = () => this.editor.commands.toggleStrike(), n;
  },
  addInputRules() {
    return [
      Qn({
        find: Ww,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      kn({
        find: qw,
        type: this.type
      })
    ];
  }
}), Jw = qe.create({
  name: "text",
  group: "inline"
}), Gw = lt.create({
  name: "starterKit",
  addExtensions() {
    var n, e, t, r, s, i, o, a, l, c, d, f, m, h, p, y, v, k;
    const P = [];
    return this.options.blockquote !== !1 && P.push(Xx.configure((n = this.options) === null || n === void 0 ? void 0 : n.blockquote)), this.options.bold !== !1 && P.push(sw.configure((e = this.options) === null || e === void 0 ? void 0 : e.bold)), this.options.bulletList !== !1 && P.push(ow.configure((t = this.options) === null || t === void 0 ? void 0 : t.bulletList)), this.options.code !== !1 && P.push(cw.configure((r = this.options) === null || r === void 0 ? void 0 : r.code)), this.options.codeBlock !== !1 && P.push(fw.configure((s = this.options) === null || s === void 0 ? void 0 : s.codeBlock)), this.options.document !== !1 && P.push(mw.configure((i = this.options) === null || i === void 0 ? void 0 : i.document)), this.options.dropcursor !== !1 && P.push(gw.configure((o = this.options) === null || o === void 0 ? void 0 : o.dropcursor)), this.options.gapcursor !== !1 && P.push(Mw.configure((a = this.options) === null || a === void 0 ? void 0 : a.gapcursor)), this.options.hardBreak !== !1 && P.push(Cw.configure((l = this.options) === null || l === void 0 ? void 0 : l.hardBreak)), this.options.heading !== !1 && P.push(Rw.configure((c = this.options) === null || c === void 0 ? void 0 : c.heading)), this.options.history !== !1 && P.push(Iw.configure((d = this.options) === null || d === void 0 ? void 0 : d.history)), this.options.horizontalRule !== !1 && P.push(Pw.configure((f = this.options) === null || f === void 0 ? void 0 : f.horizontalRule)), this.options.italic !== !1 && P.push(zw.configure((m = this.options) === null || m === void 0 ? void 0 : m.italic)), this.options.listItem !== !1 && P.push(Fw.configure((h = this.options) === null || h === void 0 ? void 0 : h.listItem)), this.options.orderedList !== !1 && P.push(Uw.configure((p = this.options) === null || p === void 0 ? void 0 : p.orderedList)), this.options.paragraph !== !1 && P.push(Bw.configure((y = this.options) === null || y === void 0 ? void 0 : y.paragraph)), this.options.strike !== !1 && P.push(Kw.configure((v = this.options) === null || v === void 0 ? void 0 : v.strike)), this.options.text !== !1 && P.push(Jw.configure((k = this.options) === null || k === void 0 ? void 0 : k.text)), P;
  }
});
var pe;
(function(n) {
  n.assertEqual = (s) => s;
  function e(s) {
  }
  n.assertIs = e;
  function t(s) {
    throw new Error();
  }
  n.assertNever = t, n.arrayToEnum = (s) => {
    const i = {};
    for (const o of s)
      i[o] = o;
    return i;
  }, n.getValidEnumValues = (s) => {
    const i = n.objectKeys(s).filter((a) => typeof s[s[a]] != "number"), o = {};
    for (const a of i)
      o[a] = s[a];
    return n.objectValues(o);
  }, n.objectValues = (s) => n.objectKeys(s).map(function(i) {
    return s[i];
  }), n.objectKeys = typeof Object.keys == "function" ? (s) => Object.keys(s) : (s) => {
    const i = [];
    for (const o in s)
      Object.prototype.hasOwnProperty.call(s, o) && i.push(o);
    return i;
  }, n.find = (s, i) => {
    for (const o of s)
      if (i(o))
        return o;
  }, n.isInteger = typeof Number.isInteger == "function" ? (s) => Number.isInteger(s) : (s) => typeof s == "number" && isFinite(s) && Math.floor(s) === s;
  function r(s, i = " | ") {
    return s.map((o) => typeof o == "string" ? `'${o}'` : o).join(i);
  }
  n.joinValues = r, n.jsonStringifyReplacer = (s, i) => typeof i == "bigint" ? i.toString() : i;
})(pe || (pe = {}));
var ba;
(function(n) {
  n.mergeShapes = (e, t) => ({
    ...e,
    ...t
    // second overwrites first
  });
})(ba || (ba = {}));
const j = pe.arrayToEnum([
  "string",
  "nan",
  "number",
  "integer",
  "float",
  "boolean",
  "date",
  "bigint",
  "symbol",
  "function",
  "undefined",
  "null",
  "array",
  "object",
  "unknown",
  "promise",
  "void",
  "never",
  "map",
  "set"
]), hn = (n) => {
  switch (typeof n) {
    case "undefined":
      return j.undefined;
    case "string":
      return j.string;
    case "number":
      return isNaN(n) ? j.nan : j.number;
    case "boolean":
      return j.boolean;
    case "function":
      return j.function;
    case "bigint":
      return j.bigint;
    case "symbol":
      return j.symbol;
    case "object":
      return Array.isArray(n) ? j.array : n === null ? j.null : n.then && typeof n.then == "function" && n.catch && typeof n.catch == "function" ? j.promise : typeof Map < "u" && n instanceof Map ? j.map : typeof Set < "u" && n instanceof Set ? j.set : typeof Date < "u" && n instanceof Date ? j.date : j.object;
    default:
      return j.unknown;
  }
}, Z = pe.arrayToEnum([
  "invalid_type",
  "invalid_literal",
  "custom",
  "invalid_union",
  "invalid_union_discriminator",
  "invalid_enum_value",
  "unrecognized_keys",
  "invalid_arguments",
  "invalid_return_type",
  "invalid_date",
  "invalid_string",
  "too_small",
  "too_big",
  "invalid_intersection_types",
  "not_multiple_of",
  "not_finite"
]), Yw = (n) => JSON.stringify(n, null, 2).replace(/"([^"]+)":/g, "$1:");
class Et extends Error {
  constructor(e) {
    super(), this.issues = [], this.addIssue = (r) => {
      this.issues = [...this.issues, r];
    }, this.addIssues = (r = []) => {
      this.issues = [...this.issues, ...r];
    };
    const t = new.target.prototype;
    Object.setPrototypeOf ? Object.setPrototypeOf(this, t) : this.__proto__ = t, this.name = "ZodError", this.issues = e;
  }
  get errors() {
    return this.issues;
  }
  format(e) {
    const t = e || function(i) {
      return i.message;
    }, r = { _errors: [] }, s = (i) => {
      for (const o of i.issues)
        if (o.code === "invalid_union")
          o.unionErrors.map(s);
        else if (o.code === "invalid_return_type")
          s(o.returnTypeError);
        else if (o.code === "invalid_arguments")
          s(o.argumentsError);
        else if (o.path.length === 0)
          r._errors.push(t(o));
        else {
          let a = r, l = 0;
          for (; l < o.path.length; ) {
            const c = o.path[l];
            l === o.path.length - 1 ? (a[c] = a[c] || { _errors: [] }, a[c]._errors.push(t(o))) : a[c] = a[c] || { _errors: [] }, a = a[c], l++;
          }
        }
    };
    return s(this), r;
  }
  toString() {
    return this.message;
  }
  get message() {
    return JSON.stringify(this.issues, pe.jsonStringifyReplacer, 2);
  }
  get isEmpty() {
    return this.issues.length === 0;
  }
  flatten(e = (t) => t.message) {
    const t = {}, r = [];
    for (const s of this.issues)
      s.path.length > 0 ? (t[s.path[0]] = t[s.path[0]] || [], t[s.path[0]].push(e(s))) : r.push(e(s));
    return { formErrors: r, fieldErrors: t };
  }
  get formErrors() {
    return this.flatten();
  }
}
Et.create = (n) => new Et(n);
const hs = (n, e) => {
  let t;
  switch (n.code) {
    case Z.invalid_type:
      n.received === j.undefined ? t = "Required" : t = `Expected ${n.expected}, received ${n.received}`;
      break;
    case Z.invalid_literal:
      t = `Invalid literal value, expected ${JSON.stringify(n.expected, pe.jsonStringifyReplacer)}`;
      break;
    case Z.unrecognized_keys:
      t = `Unrecognized key(s) in object: ${pe.joinValues(n.keys, ", ")}`;
      break;
    case Z.invalid_union:
      t = "Invalid input";
      break;
    case Z.invalid_union_discriminator:
      t = `Invalid discriminator value. Expected ${pe.joinValues(n.options)}`;
      break;
    case Z.invalid_enum_value:
      t = `Invalid enum value. Expected ${pe.joinValues(n.options)}, received '${n.received}'`;
      break;
    case Z.invalid_arguments:
      t = "Invalid function arguments";
      break;
    case Z.invalid_return_type:
      t = "Invalid function return type";
      break;
    case Z.invalid_date:
      t = "Invalid date";
      break;
    case Z.invalid_string:
      typeof n.validation == "object" ? "includes" in n.validation ? (t = `Invalid input: must include "${n.validation.includes}"`, typeof n.validation.position == "number" && (t = `${t} at one or more positions greater than or equal to ${n.validation.position}`)) : "startsWith" in n.validation ? t = `Invalid input: must start with "${n.validation.startsWith}"` : "endsWith" in n.validation ? t = `Invalid input: must end with "${n.validation.endsWith}"` : pe.assertNever(n.validation) : n.validation !== "regex" ? t = `Invalid ${n.validation}` : t = "Invalid";
      break;
    case Z.too_small:
      n.type === "array" ? t = `Array must contain ${n.exact ? "exactly" : n.inclusive ? "at least" : "more than"} ${n.minimum} element(s)` : n.type === "string" ? t = `String must contain ${n.exact ? "exactly" : n.inclusive ? "at least" : "over"} ${n.minimum} character(s)` : n.type === "number" ? t = `Number must be ${n.exact ? "exactly equal to " : n.inclusive ? "greater than or equal to " : "greater than "}${n.minimum}` : n.type === "date" ? t = `Date must be ${n.exact ? "exactly equal to " : n.inclusive ? "greater than or equal to " : "greater than "}${new Date(Number(n.minimum))}` : t = "Invalid input";
      break;
    case Z.too_big:
      n.type === "array" ? t = `Array must contain ${n.exact ? "exactly" : n.inclusive ? "at most" : "less than"} ${n.maximum} element(s)` : n.type === "string" ? t = `String must contain ${n.exact ? "exactly" : n.inclusive ? "at most" : "under"} ${n.maximum} character(s)` : n.type === "number" ? t = `Number must be ${n.exact ? "exactly" : n.inclusive ? "less than or equal to" : "less than"} ${n.maximum}` : n.type === "bigint" ? t = `BigInt must be ${n.exact ? "exactly" : n.inclusive ? "less than or equal to" : "less than"} ${n.maximum}` : n.type === "date" ? t = `Date must be ${n.exact ? "exactly" : n.inclusive ? "smaller than or equal to" : "smaller than"} ${new Date(Number(n.maximum))}` : t = "Invalid input";
      break;
    case Z.custom:
      t = "Invalid input";
      break;
    case Z.invalid_intersection_types:
      t = "Intersection results could not be merged";
      break;
    case Z.not_multiple_of:
      t = `Number must be a multiple of ${n.multipleOf}`;
      break;
    case Z.not_finite:
      t = "Number must be finite";
      break;
    default:
      t = e.defaultError, pe.assertNever(n);
  }
  return { message: t };
};
let U0 = hs;
function Qw(n) {
  U0 = n;
}
function Ei() {
  return U0;
}
const Si = (n) => {
  const { data: e, path: t, errorMaps: r, issueData: s } = n, i = [...t, ...s.path || []], o = {
    ...s,
    path: i
  };
  let a = "";
  const l = r.filter((c) => !!c).slice().reverse();
  for (const c of l)
    a = c(o, { data: e, defaultError: a }).message;
  return {
    ...s,
    path: i,
    message: s.message || a
  };
}, Xw = [];
function U(n, e) {
  const t = Si({
    issueData: e,
    data: n.data,
    path: n.path,
    errorMaps: [
      n.common.contextualErrorMap,
      n.schemaErrorMap,
      Ei(),
      hs
      // then global default map
    ].filter((r) => !!r)
  });
  n.common.issues.push(t);
}
class Ye {
  constructor() {
    this.value = "valid";
  }
  dirty() {
    this.value === "valid" && (this.value = "dirty");
  }
  abort() {
    this.value !== "aborted" && (this.value = "aborted");
  }
  static mergeArray(e, t) {
    const r = [];
    for (const s of t) {
      if (s.status === "aborted")
        return ie;
      s.status === "dirty" && e.dirty(), r.push(s.value);
    }
    return { status: e.value, value: r };
  }
  static async mergeObjectAsync(e, t) {
    const r = [];
    for (const s of t)
      r.push({
        key: await s.key,
        value: await s.value
      });
    return Ye.mergeObjectSync(e, r);
  }
  static mergeObjectSync(e, t) {
    const r = {};
    for (const s of t) {
      const { key: i, value: o } = s;
      if (i.status === "aborted" || o.status === "aborted")
        return ie;
      i.status === "dirty" && e.dirty(), o.status === "dirty" && e.dirty(), i.value !== "__proto__" && (typeof o.value < "u" || s.alwaysSet) && (r[i.value] = o.value);
    }
    return { status: e.value, value: r };
  }
}
const ie = Object.freeze({
  status: "aborted"
}), B0 = (n) => ({ status: "dirty", value: n }), st = (n) => ({ status: "valid", value: n }), ya = (n) => n.status === "aborted", va = (n) => n.status === "dirty", ps = (n) => n.status === "valid", Ai = (n) => typeof Promise < "u" && n instanceof Promise;
var Q;
(function(n) {
  n.errToObj = (e) => typeof e == "string" ? { message: e } : e || {}, n.toString = (e) => typeof e == "string" ? e : e == null ? void 0 : e.message;
})(Q || (Q = {}));
class Ft {
  constructor(e, t, r, s) {
    this._cachedPath = [], this.parent = e, this.data = t, this._path = r, this._key = s;
  }
  get path() {
    return this._cachedPath.length || (this._key instanceof Array ? this._cachedPath.push(...this._path, ...this._key) : this._cachedPath.push(...this._path, this._key)), this._cachedPath;
  }
}
const qu = (n, e) => {
  if (ps(e))
    return { success: !0, data: e.value };
  if (!n.common.issues.length)
    throw new Error("Validation failed but no issues detected.");
  return {
    success: !1,
    get error() {
      if (this._error)
        return this._error;
      const t = new Et(n.common.issues);
      return this._error = t, this._error;
    }
  };
};
function ae(n) {
  if (!n)
    return {};
  const { errorMap: e, invalid_type_error: t, required_error: r, description: s } = n;
  if (e && (t || r))
    throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);
  return e ? { errorMap: e, description: s } : { errorMap: (o, a) => o.code !== "invalid_type" ? { message: a.defaultError } : typeof a.data > "u" ? { message: r ?? a.defaultError } : { message: t ?? a.defaultError }, description: s };
}
class fe {
  constructor(e) {
    this.spa = this.safeParseAsync, this._def = e, this.parse = this.parse.bind(this), this.safeParse = this.safeParse.bind(this), this.parseAsync = this.parseAsync.bind(this), this.safeParseAsync = this.safeParseAsync.bind(this), this.spa = this.spa.bind(this), this.refine = this.refine.bind(this), this.refinement = this.refinement.bind(this), this.superRefine = this.superRefine.bind(this), this.optional = this.optional.bind(this), this.nullable = this.nullable.bind(this), this.nullish = this.nullish.bind(this), this.array = this.array.bind(this), this.promise = this.promise.bind(this), this.or = this.or.bind(this), this.and = this.and.bind(this), this.transform = this.transform.bind(this), this.brand = this.brand.bind(this), this.default = this.default.bind(this), this.catch = this.catch.bind(this), this.describe = this.describe.bind(this), this.pipe = this.pipe.bind(this), this.readonly = this.readonly.bind(this), this.isNullable = this.isNullable.bind(this), this.isOptional = this.isOptional.bind(this);
  }
  get description() {
    return this._def.description;
  }
  _getType(e) {
    return hn(e.data);
  }
  _getOrReturnCtx(e, t) {
    return t || {
      common: e.parent.common,
      data: e.data,
      parsedType: hn(e.data),
      schemaErrorMap: this._def.errorMap,
      path: e.path,
      parent: e.parent
    };
  }
  _processInputParams(e) {
    return {
      status: new Ye(),
      ctx: {
        common: e.parent.common,
        data: e.data,
        parsedType: hn(e.data),
        schemaErrorMap: this._def.errorMap,
        path: e.path,
        parent: e.parent
      }
    };
  }
  _parseSync(e) {
    const t = this._parse(e);
    if (Ai(t))
      throw new Error("Synchronous parse encountered promise.");
    return t;
  }
  _parseAsync(e) {
    const t = this._parse(e);
    return Promise.resolve(t);
  }
  parse(e, t) {
    const r = this.safeParse(e, t);
    if (r.success)
      return r.data;
    throw r.error;
  }
  safeParse(e, t) {
    var r;
    const s = {
      common: {
        issues: [],
        async: (r = t == null ? void 0 : t.async) !== null && r !== void 0 ? r : !1,
        contextualErrorMap: t == null ? void 0 : t.errorMap
      },
      path: (t == null ? void 0 : t.path) || [],
      schemaErrorMap: this._def.errorMap,
      parent: null,
      data: e,
      parsedType: hn(e)
    }, i = this._parseSync({ data: e, path: s.path, parent: s });
    return qu(s, i);
  }
  async parseAsync(e, t) {
    const r = await this.safeParseAsync(e, t);
    if (r.success)
      return r.data;
    throw r.error;
  }
  async safeParseAsync(e, t) {
    const r = {
      common: {
        issues: [],
        contextualErrorMap: t == null ? void 0 : t.errorMap,
        async: !0
      },
      path: (t == null ? void 0 : t.path) || [],
      schemaErrorMap: this._def.errorMap,
      parent: null,
      data: e,
      parsedType: hn(e)
    }, s = this._parse({ data: e, path: r.path, parent: r }), i = await (Ai(s) ? s : Promise.resolve(s));
    return qu(r, i);
  }
  refine(e, t) {
    const r = (s) => typeof t == "string" || typeof t > "u" ? { message: t } : typeof t == "function" ? t(s) : t;
    return this._refinement((s, i) => {
      const o = e(s), a = () => i.addIssue({
        code: Z.custom,
        ...r(s)
      });
      return typeof Promise < "u" && o instanceof Promise ? o.then((l) => l ? !0 : (a(), !1)) : o ? !0 : (a(), !1);
    });
  }
  refinement(e, t) {
    return this._refinement((r, s) => e(r) ? !0 : (s.addIssue(typeof t == "function" ? t(r, s) : t), !1));
  }
  _refinement(e) {
    return new Ot({
      schema: this,
      typeName: ee.ZodEffects,
      effect: { type: "refinement", refinement: e }
    });
  }
  superRefine(e) {
    return this._refinement(e);
  }
  optional() {
    return Yt.create(this, this._def);
  }
  nullable() {
    return tr.create(this, this._def);
  }
  nullish() {
    return this.nullable().optional();
  }
  array() {
    return St.create(this, this._def);
  }
  promise() {
    return Hr.create(this, this._def);
  }
  or(e) {
    return vs.create([this, e], this._def);
  }
  and(e) {
    return xs.create(this, e, this._def);
  }
  transform(e) {
    return new Ot({
      ...ae(this._def),
      schema: this,
      typeName: ee.ZodEffects,
      effect: { type: "transform", transform: e }
    });
  }
  default(e) {
    const t = typeof e == "function" ? e : () => e;
    return new Cs({
      ...ae(this._def),
      innerType: this,
      defaultValue: t,
      typeName: ee.ZodDefault
    });
  }
  brand() {
    return new q0({
      typeName: ee.ZodBranded,
      type: this,
      ...ae(this._def)
    });
  }
  catch(e) {
    const t = typeof e == "function" ? e : () => e;
    return new Di({
      ...ae(this._def),
      innerType: this,
      catchValue: t,
      typeName: ee.ZodCatch
    });
  }
  describe(e) {
    const t = this.constructor;
    return new t({
      ...this._def,
      description: e
    });
  }
  pipe(e) {
    return _s.create(this, e);
  }
  readonly() {
    return Ii.create(this);
  }
  isOptional() {
    return this.safeParse(void 0).success;
  }
  isNullable() {
    return this.safeParse(null).success;
  }
}
const eN = /^c[^\s-]{8,}$/i, tN = /^[a-z][a-z0-9]*$/, nN = /^[0-9A-HJKMNP-TV-Z]{26}$/, rN = /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i, sN = /^(?!\.)(?!.*\.\.)([A-Z0-9_+-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i, iN = "^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";
let _o;
const oN = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/, aN = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/, lN = (n) => n.precision ? n.offset ? new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${n.precision}}(([+-]\\d{2}(:?\\d{2})?)|Z)$`) : new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${n.precision}}Z$`) : n.precision === 0 ? n.offset ? new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(([+-]\\d{2}(:?\\d{2})?)|Z)$") : new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$") : n.offset ? new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(([+-]\\d{2}(:?\\d{2})?)|Z)$") : new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$");
function cN(n, e) {
  return !!((e === "v4" || !e) && oN.test(n) || (e === "v6" || !e) && aN.test(n));
}
class Ct extends fe {
  _parse(e) {
    if (this._def.coerce && (e.data = String(e.data)), this._getType(e) !== j.string) {
      const i = this._getOrReturnCtx(e);
      return U(
        i,
        {
          code: Z.invalid_type,
          expected: j.string,
          received: i.parsedType
        }
        //
      ), ie;
    }
    const r = new Ye();
    let s;
    for (const i of this._def.checks)
      if (i.kind === "min")
        e.data.length < i.value && (s = this._getOrReturnCtx(e, s), U(s, {
          code: Z.too_small,
          minimum: i.value,
          type: "string",
          inclusive: !0,
          exact: !1,
          message: i.message
        }), r.dirty());
      else if (i.kind === "max")
        e.data.length > i.value && (s = this._getOrReturnCtx(e, s), U(s, {
          code: Z.too_big,
          maximum: i.value,
          type: "string",
          inclusive: !0,
          exact: !1,
          message: i.message
        }), r.dirty());
      else if (i.kind === "length") {
        const o = e.data.length > i.value, a = e.data.length < i.value;
        (o || a) && (s = this._getOrReturnCtx(e, s), o ? U(s, {
          code: Z.too_big,
          maximum: i.value,
          type: "string",
          inclusive: !0,
          exact: !0,
          message: i.message
        }) : a && U(s, {
          code: Z.too_small,
          minimum: i.value,
          type: "string",
          inclusive: !0,
          exact: !0,
          message: i.message
        }), r.dirty());
      } else if (i.kind === "email")
        sN.test(e.data) || (s = this._getOrReturnCtx(e, s), U(s, {
          validation: "email",
          code: Z.invalid_string,
          message: i.message
        }), r.dirty());
      else if (i.kind === "emoji")
        _o || (_o = new RegExp(iN, "u")), _o.test(e.data) || (s = this._getOrReturnCtx(e, s), U(s, {
          validation: "emoji",
          code: Z.invalid_string,
          message: i.message
        }), r.dirty());
      else if (i.kind === "uuid")
        rN.test(e.data) || (s = this._getOrReturnCtx(e, s), U(s, {
          validation: "uuid",
          code: Z.invalid_string,
          message: i.message
        }), r.dirty());
      else if (i.kind === "cuid")
        eN.test(e.data) || (s = this._getOrReturnCtx(e, s), U(s, {
          validation: "cuid",
          code: Z.invalid_string,
          message: i.message
        }), r.dirty());
      else if (i.kind === "cuid2")
        tN.test(e.data) || (s = this._getOrReturnCtx(e, s), U(s, {
          validation: "cuid2",
          code: Z.invalid_string,
          message: i.message
        }), r.dirty());
      else if (i.kind === "ulid")
        nN.test(e.data) || (s = this._getOrReturnCtx(e, s), U(s, {
          validation: "ulid",
          code: Z.invalid_string,
          message: i.message
        }), r.dirty());
      else if (i.kind === "url")
        try {
          new URL(e.data);
        } catch {
          s = this._getOrReturnCtx(e, s), U(s, {
            validation: "url",
            code: Z.invalid_string,
            message: i.message
          }), r.dirty();
        }
      else
        i.kind === "regex" ? (i.regex.lastIndex = 0, i.regex.test(e.data) || (s = this._getOrReturnCtx(e, s), U(s, {
          validation: "regex",
          code: Z.invalid_string,
          message: i.message
        }), r.dirty())) : i.kind === "trim" ? e.data = e.data.trim() : i.kind === "includes" ? e.data.includes(i.value, i.position) || (s = this._getOrReturnCtx(e, s), U(s, {
          code: Z.invalid_string,
          validation: { includes: i.value, position: i.position },
          message: i.message
        }), r.dirty()) : i.kind === "toLowerCase" ? e.data = e.data.toLowerCase() : i.kind === "toUpperCase" ? e.data = e.data.toUpperCase() : i.kind === "startsWith" ? e.data.startsWith(i.value) || (s = this._getOrReturnCtx(e, s), U(s, {
          code: Z.invalid_string,
          validation: { startsWith: i.value },
          message: i.message
        }), r.dirty()) : i.kind === "endsWith" ? e.data.endsWith(i.value) || (s = this._getOrReturnCtx(e, s), U(s, {
          code: Z.invalid_string,
          validation: { endsWith: i.value },
          message: i.message
        }), r.dirty()) : i.kind === "datetime" ? lN(i).test(e.data) || (s = this._getOrReturnCtx(e, s), U(s, {
          code: Z.invalid_string,
          validation: "datetime",
          message: i.message
        }), r.dirty()) : i.kind === "ip" ? cN(e.data, i.version) || (s = this._getOrReturnCtx(e, s), U(s, {
          validation: "ip",
          code: Z.invalid_string,
          message: i.message
        }), r.dirty()) : pe.assertNever(i);
    return { status: r.value, value: e.data };
  }
  _regex(e, t, r) {
    return this.refinement((s) => e.test(s), {
      validation: t,
      code: Z.invalid_string,
      ...Q.errToObj(r)
    });
  }
  _addCheck(e) {
    return new Ct({
      ...this._def,
      checks: [...this._def.checks, e]
    });
  }
  email(e) {
    return this._addCheck({ kind: "email", ...Q.errToObj(e) });
  }
  url(e) {
    return this._addCheck({ kind: "url", ...Q.errToObj(e) });
  }
  emoji(e) {
    return this._addCheck({ kind: "emoji", ...Q.errToObj(e) });
  }
  uuid(e) {
    return this._addCheck({ kind: "uuid", ...Q.errToObj(e) });
  }
  cuid(e) {
    return this._addCheck({ kind: "cuid", ...Q.errToObj(e) });
  }
  cuid2(e) {
    return this._addCheck({ kind: "cuid2", ...Q.errToObj(e) });
  }
  ulid(e) {
    return this._addCheck({ kind: "ulid", ...Q.errToObj(e) });
  }
  ip(e) {
    return this._addCheck({ kind: "ip", ...Q.errToObj(e) });
  }
  datetime(e) {
    var t;
    return typeof e == "string" ? this._addCheck({
      kind: "datetime",
      precision: null,
      offset: !1,
      message: e
    }) : this._addCheck({
      kind: "datetime",
      precision: typeof (e == null ? void 0 : e.precision) > "u" ? null : e == null ? void 0 : e.precision,
      offset: (t = e == null ? void 0 : e.offset) !== null && t !== void 0 ? t : !1,
      ...Q.errToObj(e == null ? void 0 : e.message)
    });
  }
  regex(e, t) {
    return this._addCheck({
      kind: "regex",
      regex: e,
      ...Q.errToObj(t)
    });
  }
  includes(e, t) {
    return this._addCheck({
      kind: "includes",
      value: e,
      position: t == null ? void 0 : t.position,
      ...Q.errToObj(t == null ? void 0 : t.message)
    });
  }
  startsWith(e, t) {
    return this._addCheck({
      kind: "startsWith",
      value: e,
      ...Q.errToObj(t)
    });
  }
  endsWith(e, t) {
    return this._addCheck({
      kind: "endsWith",
      value: e,
      ...Q.errToObj(t)
    });
  }
  min(e, t) {
    return this._addCheck({
      kind: "min",
      value: e,
      ...Q.errToObj(t)
    });
  }
  max(e, t) {
    return this._addCheck({
      kind: "max",
      value: e,
      ...Q.errToObj(t)
    });
  }
  length(e, t) {
    return this._addCheck({
      kind: "length",
      value: e,
      ...Q.errToObj(t)
    });
  }
  /**
   * @deprecated Use z.string().min(1) instead.
   * @see {@link ZodString.min}
   */
  nonempty(e) {
    return this.min(1, Q.errToObj(e));
  }
  trim() {
    return new Ct({
      ...this._def,
      checks: [...this._def.checks, { kind: "trim" }]
    });
  }
  toLowerCase() {
    return new Ct({
      ...this._def,
      checks: [...this._def.checks, { kind: "toLowerCase" }]
    });
  }
  toUpperCase() {
    return new Ct({
      ...this._def,
      checks: [...this._def.checks, { kind: "toUpperCase" }]
    });
  }
  get isDatetime() {
    return !!this._def.checks.find((e) => e.kind === "datetime");
  }
  get isEmail() {
    return !!this._def.checks.find((e) => e.kind === "email");
  }
  get isURL() {
    return !!this._def.checks.find((e) => e.kind === "url");
  }
  get isEmoji() {
    return !!this._def.checks.find((e) => e.kind === "emoji");
  }
  get isUUID() {
    return !!this._def.checks.find((e) => e.kind === "uuid");
  }
  get isCUID() {
    return !!this._def.checks.find((e) => e.kind === "cuid");
  }
  get isCUID2() {
    return !!this._def.checks.find((e) => e.kind === "cuid2");
  }
  get isULID() {
    return !!this._def.checks.find((e) => e.kind === "ulid");
  }
  get isIP() {
    return !!this._def.checks.find((e) => e.kind === "ip");
  }
  get minLength() {
    let e = null;
    for (const t of this._def.checks)
      t.kind === "min" && (e === null || t.value > e) && (e = t.value);
    return e;
  }
  get maxLength() {
    let e = null;
    for (const t of this._def.checks)
      t.kind === "max" && (e === null || t.value < e) && (e = t.value);
    return e;
  }
}
Ct.create = (n) => {
  var e;
  return new Ct({
    checks: [],
    typeName: ee.ZodString,
    coerce: (e = n == null ? void 0 : n.coerce) !== null && e !== void 0 ? e : !1,
    ...ae(n)
  });
};
function uN(n, e) {
  const t = (n.toString().split(".")[1] || "").length, r = (e.toString().split(".")[1] || "").length, s = t > r ? t : r, i = parseInt(n.toFixed(s).replace(".", "")), o = parseInt(e.toFixed(s).replace(".", ""));
  return i % o / Math.pow(10, s);
}
class Mn extends fe {
  constructor() {
    super(...arguments), this.min = this.gte, this.max = this.lte, this.step = this.multipleOf;
  }
  _parse(e) {
    if (this._def.coerce && (e.data = Number(e.data)), this._getType(e) !== j.number) {
      const i = this._getOrReturnCtx(e);
      return U(i, {
        code: Z.invalid_type,
        expected: j.number,
        received: i.parsedType
      }), ie;
    }
    let r;
    const s = new Ye();
    for (const i of this._def.checks)
      i.kind === "int" ? pe.isInteger(e.data) || (r = this._getOrReturnCtx(e, r), U(r, {
        code: Z.invalid_type,
        expected: "integer",
        received: "float",
        message: i.message
      }), s.dirty()) : i.kind === "min" ? (i.inclusive ? e.data < i.value : e.data <= i.value) && (r = this._getOrReturnCtx(e, r), U(r, {
        code: Z.too_small,
        minimum: i.value,
        type: "number",
        inclusive: i.inclusive,
        exact: !1,
        message: i.message
      }), s.dirty()) : i.kind === "max" ? (i.inclusive ? e.data > i.value : e.data >= i.value) && (r = this._getOrReturnCtx(e, r), U(r, {
        code: Z.too_big,
        maximum: i.value,
        type: "number",
        inclusive: i.inclusive,
        exact: !1,
        message: i.message
      }), s.dirty()) : i.kind === "multipleOf" ? uN(e.data, i.value) !== 0 && (r = this._getOrReturnCtx(e, r), U(r, {
        code: Z.not_multiple_of,
        multipleOf: i.value,
        message: i.message
      }), s.dirty()) : i.kind === "finite" ? Number.isFinite(e.data) || (r = this._getOrReturnCtx(e, r), U(r, {
        code: Z.not_finite,
        message: i.message
      }), s.dirty()) : pe.assertNever(i);
    return { status: s.value, value: e.data };
  }
  gte(e, t) {
    return this.setLimit("min", e, !0, Q.toString(t));
  }
  gt(e, t) {
    return this.setLimit("min", e, !1, Q.toString(t));
  }
  lte(e, t) {
    return this.setLimit("max", e, !0, Q.toString(t));
  }
  lt(e, t) {
    return this.setLimit("max", e, !1, Q.toString(t));
  }
  setLimit(e, t, r, s) {
    return new Mn({
      ...this._def,
      checks: [
        ...this._def.checks,
        {
          kind: e,
          value: t,
          inclusive: r,
          message: Q.toString(s)
        }
      ]
    });
  }
  _addCheck(e) {
    return new Mn({
      ...this._def,
      checks: [...this._def.checks, e]
    });
  }
  int(e) {
    return this._addCheck({
      kind: "int",
      message: Q.toString(e)
    });
  }
  positive(e) {
    return this._addCheck({
      kind: "min",
      value: 0,
      inclusive: !1,
      message: Q.toString(e)
    });
  }
  negative(e) {
    return this._addCheck({
      kind: "max",
      value: 0,
      inclusive: !1,
      message: Q.toString(e)
    });
  }
  nonpositive(e) {
    return this._addCheck({
      kind: "max",
      value: 0,
      inclusive: !0,
      message: Q.toString(e)
    });
  }
  nonnegative(e) {
    return this._addCheck({
      kind: "min",
      value: 0,
      inclusive: !0,
      message: Q.toString(e)
    });
  }
  multipleOf(e, t) {
    return this._addCheck({
      kind: "multipleOf",
      value: e,
      message: Q.toString(t)
    });
  }
  finite(e) {
    return this._addCheck({
      kind: "finite",
      message: Q.toString(e)
    });
  }
  safe(e) {
    return this._addCheck({
      kind: "min",
      inclusive: !0,
      value: Number.MIN_SAFE_INTEGER,
      message: Q.toString(e)
    })._addCheck({
      kind: "max",
      inclusive: !0,
      value: Number.MAX_SAFE_INTEGER,
      message: Q.toString(e)
    });
  }
  get minValue() {
    let e = null;
    for (const t of this._def.checks)
      t.kind === "min" && (e === null || t.value > e) && (e = t.value);
    return e;
  }
  get maxValue() {
    let e = null;
    for (const t of this._def.checks)
      t.kind === "max" && (e === null || t.value < e) && (e = t.value);
    return e;
  }
  get isInt() {
    return !!this._def.checks.find((e) => e.kind === "int" || e.kind === "multipleOf" && pe.isInteger(e.value));
  }
  get isFinite() {
    let e = null, t = null;
    for (const r of this._def.checks) {
      if (r.kind === "finite" || r.kind === "int" || r.kind === "multipleOf")
        return !0;
      r.kind === "min" ? (t === null || r.value > t) && (t = r.value) : r.kind === "max" && (e === null || r.value < e) && (e = r.value);
    }
    return Number.isFinite(t) && Number.isFinite(e);
  }
}
Mn.create = (n) => new Mn({
  checks: [],
  typeName: ee.ZodNumber,
  coerce: (n == null ? void 0 : n.coerce) || !1,
  ...ae(n)
});
class Cn extends fe {
  constructor() {
    super(...arguments), this.min = this.gte, this.max = this.lte;
  }
  _parse(e) {
    if (this._def.coerce && (e.data = BigInt(e.data)), this._getType(e) !== j.bigint) {
      const i = this._getOrReturnCtx(e);
      return U(i, {
        code: Z.invalid_type,
        expected: j.bigint,
        received: i.parsedType
      }), ie;
    }
    let r;
    const s = new Ye();
    for (const i of this._def.checks)
      i.kind === "min" ? (i.inclusive ? e.data < i.value : e.data <= i.value) && (r = this._getOrReturnCtx(e, r), U(r, {
        code: Z.too_small,
        type: "bigint",
        minimum: i.value,
        inclusive: i.inclusive,
        message: i.message
      }), s.dirty()) : i.kind === "max" ? (i.inclusive ? e.data > i.value : e.data >= i.value) && (r = this._getOrReturnCtx(e, r), U(r, {
        code: Z.too_big,
        type: "bigint",
        maximum: i.value,
        inclusive: i.inclusive,
        message: i.message
      }), s.dirty()) : i.kind === "multipleOf" ? e.data % i.value !== BigInt(0) && (r = this._getOrReturnCtx(e, r), U(r, {
        code: Z.not_multiple_of,
        multipleOf: i.value,
        message: i.message
      }), s.dirty()) : pe.assertNever(i);
    return { status: s.value, value: e.data };
  }
  gte(e, t) {
    return this.setLimit("min", e, !0, Q.toString(t));
  }
  gt(e, t) {
    return this.setLimit("min", e, !1, Q.toString(t));
  }
  lte(e, t) {
    return this.setLimit("max", e, !0, Q.toString(t));
  }
  lt(e, t) {
    return this.setLimit("max", e, !1, Q.toString(t));
  }
  setLimit(e, t, r, s) {
    return new Cn({
      ...this._def,
      checks: [
        ...this._def.checks,
        {
          kind: e,
          value: t,
          inclusive: r,
          message: Q.toString(s)
        }
      ]
    });
  }
  _addCheck(e) {
    return new Cn({
      ...this._def,
      checks: [...this._def.checks, e]
    });
  }
  positive(e) {
    return this._addCheck({
      kind: "min",
      value: BigInt(0),
      inclusive: !1,
      message: Q.toString(e)
    });
  }
  negative(e) {
    return this._addCheck({
      kind: "max",
      value: BigInt(0),
      inclusive: !1,
      message: Q.toString(e)
    });
  }
  nonpositive(e) {
    return this._addCheck({
      kind: "max",
      value: BigInt(0),
      inclusive: !0,
      message: Q.toString(e)
    });
  }
  nonnegative(e) {
    return this._addCheck({
      kind: "min",
      value: BigInt(0),
      inclusive: !0,
      message: Q.toString(e)
    });
  }
  multipleOf(e, t) {
    return this._addCheck({
      kind: "multipleOf",
      value: e,
      message: Q.toString(t)
    });
  }
  get minValue() {
    let e = null;
    for (const t of this._def.checks)
      t.kind === "min" && (e === null || t.value > e) && (e = t.value);
    return e;
  }
  get maxValue() {
    let e = null;
    for (const t of this._def.checks)
      t.kind === "max" && (e === null || t.value < e) && (e = t.value);
    return e;
  }
}
Cn.create = (n) => {
  var e;
  return new Cn({
    checks: [],
    typeName: ee.ZodBigInt,
    coerce: (e = n == null ? void 0 : n.coerce) !== null && e !== void 0 ? e : !1,
    ...ae(n)
  });
};
class gs extends fe {
  _parse(e) {
    if (this._def.coerce && (e.data = !!e.data), this._getType(e) !== j.boolean) {
      const r = this._getOrReturnCtx(e);
      return U(r, {
        code: Z.invalid_type,
        expected: j.boolean,
        received: r.parsedType
      }), ie;
    }
    return st(e.data);
  }
}
gs.create = (n) => new gs({
  typeName: ee.ZodBoolean,
  coerce: (n == null ? void 0 : n.coerce) || !1,
  ...ae(n)
});
class Xn extends fe {
  _parse(e) {
    if (this._def.coerce && (e.data = new Date(e.data)), this._getType(e) !== j.date) {
      const i = this._getOrReturnCtx(e);
      return U(i, {
        code: Z.invalid_type,
        expected: j.date,
        received: i.parsedType
      }), ie;
    }
    if (isNaN(e.data.getTime())) {
      const i = this._getOrReturnCtx(e);
      return U(i, {
        code: Z.invalid_date
      }), ie;
    }
    const r = new Ye();
    let s;
    for (const i of this._def.checks)
      i.kind === "min" ? e.data.getTime() < i.value && (s = this._getOrReturnCtx(e, s), U(s, {
        code: Z.too_small,
        message: i.message,
        inclusive: !0,
        exact: !1,
        minimum: i.value,
        type: "date"
      }), r.dirty()) : i.kind === "max" ? e.data.getTime() > i.value && (s = this._getOrReturnCtx(e, s), U(s, {
        code: Z.too_big,
        message: i.message,
        inclusive: !0,
        exact: !1,
        maximum: i.value,
        type: "date"
      }), r.dirty()) : pe.assertNever(i);
    return {
      status: r.value,
      value: new Date(e.data.getTime())
    };
  }
  _addCheck(e) {
    return new Xn({
      ...this._def,
      checks: [...this._def.checks, e]
    });
  }
  min(e, t) {
    return this._addCheck({
      kind: "min",
      value: e.getTime(),
      message: Q.toString(t)
    });
  }
  max(e, t) {
    return this._addCheck({
      kind: "max",
      value: e.getTime(),
      message: Q.toString(t)
    });
  }
  get minDate() {
    let e = null;
    for (const t of this._def.checks)
      t.kind === "min" && (e === null || t.value > e) && (e = t.value);
    return e != null ? new Date(e) : null;
  }
  get maxDate() {
    let e = null;
    for (const t of this._def.checks)
      t.kind === "max" && (e === null || t.value < e) && (e = t.value);
    return e != null ? new Date(e) : null;
  }
}
Xn.create = (n) => new Xn({
  checks: [],
  coerce: (n == null ? void 0 : n.coerce) || !1,
  typeName: ee.ZodDate,
  ...ae(n)
});
class Oi extends fe {
  _parse(e) {
    if (this._getType(e) !== j.symbol) {
      const r = this._getOrReturnCtx(e);
      return U(r, {
        code: Z.invalid_type,
        expected: j.symbol,
        received: r.parsedType
      }), ie;
    }
    return st(e.data);
  }
}
Oi.create = (n) => new Oi({
  typeName: ee.ZodSymbol,
  ...ae(n)
});
class bs extends fe {
  _parse(e) {
    if (this._getType(e) !== j.undefined) {
      const r = this._getOrReturnCtx(e);
      return U(r, {
        code: Z.invalid_type,
        expected: j.undefined,
        received: r.parsedType
      }), ie;
    }
    return st(e.data);
  }
}
bs.create = (n) => new bs({
  typeName: ee.ZodUndefined,
  ...ae(n)
});
class ys extends fe {
  _parse(e) {
    if (this._getType(e) !== j.null) {
      const r = this._getOrReturnCtx(e);
      return U(r, {
        code: Z.invalid_type,
        expected: j.null,
        received: r.parsedType
      }), ie;
    }
    return st(e.data);
  }
}
ys.create = (n) => new ys({
  typeName: ee.ZodNull,
  ...ae(n)
});
class Dr extends fe {
  constructor() {
    super(...arguments), this._any = !0;
  }
  _parse(e) {
    return st(e.data);
  }
}
Dr.create = (n) => new Dr({
  typeName: ee.ZodAny,
  ...ae(n)
});
class qn extends fe {
  constructor() {
    super(...arguments), this._unknown = !0;
  }
  _parse(e) {
    return st(e.data);
  }
}
qn.create = (n) => new qn({
  typeName: ee.ZodUnknown,
  ...ae(n)
});
class Qt extends fe {
  _parse(e) {
    const t = this._getOrReturnCtx(e);
    return U(t, {
      code: Z.invalid_type,
      expected: j.never,
      received: t.parsedType
    }), ie;
  }
}
Qt.create = (n) => new Qt({
  typeName: ee.ZodNever,
  ...ae(n)
});
class Ti extends fe {
  _parse(e) {
    if (this._getType(e) !== j.undefined) {
      const r = this._getOrReturnCtx(e);
      return U(r, {
        code: Z.invalid_type,
        expected: j.void,
        received: r.parsedType
      }), ie;
    }
    return st(e.data);
  }
}
Ti.create = (n) => new Ti({
  typeName: ee.ZodVoid,
  ...ae(n)
});
class St extends fe {
  _parse(e) {
    const { ctx: t, status: r } = this._processInputParams(e), s = this._def;
    if (t.parsedType !== j.array)
      return U(t, {
        code: Z.invalid_type,
        expected: j.array,
        received: t.parsedType
      }), ie;
    if (s.exactLength !== null) {
      const o = t.data.length > s.exactLength.value, a = t.data.length < s.exactLength.value;
      (o || a) && (U(t, {
        code: o ? Z.too_big : Z.too_small,
        minimum: a ? s.exactLength.value : void 0,
        maximum: o ? s.exactLength.value : void 0,
        type: "array",
        inclusive: !0,
        exact: !0,
        message: s.exactLength.message
      }), r.dirty());
    }
    if (s.minLength !== null && t.data.length < s.minLength.value && (U(t, {
      code: Z.too_small,
      minimum: s.minLength.value,
      type: "array",
      inclusive: !0,
      exact: !1,
      message: s.minLength.message
    }), r.dirty()), s.maxLength !== null && t.data.length > s.maxLength.value && (U(t, {
      code: Z.too_big,
      maximum: s.maxLength.value,
      type: "array",
      inclusive: !0,
      exact: !1,
      message: s.maxLength.message
    }), r.dirty()), t.common.async)
      return Promise.all([...t.data].map((o, a) => s.type._parseAsync(new Ft(t, o, t.path, a)))).then((o) => Ye.mergeArray(r, o));
    const i = [...t.data].map((o, a) => s.type._parseSync(new Ft(t, o, t.path, a)));
    return Ye.mergeArray(r, i);
  }
  get element() {
    return this._def.type;
  }
  min(e, t) {
    return new St({
      ...this._def,
      minLength: { value: e, message: Q.toString(t) }
    });
  }
  max(e, t) {
    return new St({
      ...this._def,
      maxLength: { value: e, message: Q.toString(t) }
    });
  }
  length(e, t) {
    return new St({
      ...this._def,
      exactLength: { value: e, message: Q.toString(t) }
    });
  }
  nonempty(e) {
    return this.min(1, e);
  }
}
St.create = (n, e) => new St({
  type: n,
  minLength: null,
  maxLength: null,
  exactLength: null,
  typeName: ee.ZodArray,
  ...ae(e)
});
function mr(n) {
  if (n instanceof _e) {
    const e = {};
    for (const t in n.shape) {
      const r = n.shape[t];
      e[t] = Yt.create(mr(r));
    }
    return new _e({
      ...n._def,
      shape: () => e
    });
  } else
    return n instanceof St ? new St({
      ...n._def,
      type: mr(n.element)
    }) : n instanceof Yt ? Yt.create(mr(n.unwrap())) : n instanceof tr ? tr.create(mr(n.unwrap())) : n instanceof jt ? jt.create(n.items.map((e) => mr(e))) : n;
}
class _e extends fe {
  constructor() {
    super(...arguments), this._cached = null, this.nonstrict = this.passthrough, this.augment = this.extend;
  }
  _getCached() {
    if (this._cached !== null)
      return this._cached;
    const e = this._def.shape(), t = pe.objectKeys(e);
    return this._cached = { shape: e, keys: t };
  }
  _parse(e) {
    if (this._getType(e) !== j.object) {
      const c = this._getOrReturnCtx(e);
      return U(c, {
        code: Z.invalid_type,
        expected: j.object,
        received: c.parsedType
      }), ie;
    }
    const { status: r, ctx: s } = this._processInputParams(e), { shape: i, keys: o } = this._getCached(), a = [];
    if (!(this._def.catchall instanceof Qt && this._def.unknownKeys === "strip"))
      for (const c in s.data)
        o.includes(c) || a.push(c);
    const l = [];
    for (const c of o) {
      const d = i[c], f = s.data[c];
      l.push({
        key: { status: "valid", value: c },
        value: d._parse(new Ft(s, f, s.path, c)),
        alwaysSet: c in s.data
      });
    }
    if (this._def.catchall instanceof Qt) {
      const c = this._def.unknownKeys;
      if (c === "passthrough")
        for (const d of a)
          l.push({
            key: { status: "valid", value: d },
            value: { status: "valid", value: s.data[d] }
          });
      else if (c === "strict")
        a.length > 0 && (U(s, {
          code: Z.unrecognized_keys,
          keys: a
        }), r.dirty());
      else if (c !== "strip")
        throw new Error("Internal ZodObject error: invalid unknownKeys value.");
    } else {
      const c = this._def.catchall;
      for (const d of a) {
        const f = s.data[d];
        l.push({
          key: { status: "valid", value: d },
          value: c._parse(
            new Ft(s, f, s.path, d)
            //, ctx.child(key), value, getParsedType(value)
          ),
          alwaysSet: d in s.data
        });
      }
    }
    return s.common.async ? Promise.resolve().then(async () => {
      const c = [];
      for (const d of l) {
        const f = await d.key;
        c.push({
          key: f,
          value: await d.value,
          alwaysSet: d.alwaysSet
        });
      }
      return c;
    }).then((c) => Ye.mergeObjectSync(r, c)) : Ye.mergeObjectSync(r, l);
  }
  get shape() {
    return this._def.shape();
  }
  strict(e) {
    return Q.errToObj, new _e({
      ...this._def,
      unknownKeys: "strict",
      ...e !== void 0 ? {
        errorMap: (t, r) => {
          var s, i, o, a;
          const l = (o = (i = (s = this._def).errorMap) === null || i === void 0 ? void 0 : i.call(s, t, r).message) !== null && o !== void 0 ? o : r.defaultError;
          return t.code === "unrecognized_keys" ? {
            message: (a = Q.errToObj(e).message) !== null && a !== void 0 ? a : l
          } : {
            message: l
          };
        }
      } : {}
    });
  }
  strip() {
    return new _e({
      ...this._def,
      unknownKeys: "strip"
    });
  }
  passthrough() {
    return new _e({
      ...this._def,
      unknownKeys: "passthrough"
    });
  }
  // const AugmentFactory =
  //   <Def extends ZodObjectDef>(def: Def) =>
  //   <Augmentation extends ZodRawShape>(
  //     augmentation: Augmentation
  //   ): ZodObject<
  //     extendShape<ReturnType<Def["shape"]>, Augmentation>,
  //     Def["unknownKeys"],
  //     Def["catchall"]
  //   > => {
  //     return new ZodObject({
  //       ...def,
  //       shape: () => ({
  //         ...def.shape(),
  //         ...augmentation,
  //       }),
  //     }) as any;
  //   };
  extend(e) {
    return new _e({
      ...this._def,
      shape: () => ({
        ...this._def.shape(),
        ...e
      })
    });
  }
  /**
   * Prior to zod@1.0.12 there was a bug in the
   * inferred type of merged objects. Please
   * upgrade if you are experiencing issues.
   */
  merge(e) {
    return new _e({
      unknownKeys: e._def.unknownKeys,
      catchall: e._def.catchall,
      shape: () => ({
        ...this._def.shape(),
        ...e._def.shape()
      }),
      typeName: ee.ZodObject
    });
  }
  // merge<
  //   Incoming extends AnyZodObject,
  //   Augmentation extends Incoming["shape"],
  //   NewOutput extends {
  //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation
  //       ? Augmentation[k]["_output"]
  //       : k extends keyof Output
  //       ? Output[k]
  //       : never;
  //   },
  //   NewInput extends {
  //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation
  //       ? Augmentation[k]["_input"]
  //       : k extends keyof Input
  //       ? Input[k]
  //       : never;
  //   }
  // >(
  //   merging: Incoming
  // ): ZodObject<
  //   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,
  //   Incoming["_def"]["unknownKeys"],
  //   Incoming["_def"]["catchall"],
  //   NewOutput,
  //   NewInput
  // > {
  //   const merged: any = new ZodObject({
  //     unknownKeys: merging._def.unknownKeys,
  //     catchall: merging._def.catchall,
  //     shape: () =>
  //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),
  //     typeName: ZodFirstPartyTypeKind.ZodObject,
  //   }) as any;
  //   return merged;
  // }
  setKey(e, t) {
    return this.augment({ [e]: t });
  }
  // merge<Incoming extends AnyZodObject>(
  //   merging: Incoming
  // ): //ZodObject<T & Incoming["_shape"], UnknownKeys, Catchall> = (merging) => {
  // ZodObject<
  //   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,
  //   Incoming["_def"]["unknownKeys"],
  //   Incoming["_def"]["catchall"]
  // > {
  //   // const mergedShape = objectUtil.mergeShapes(
  //   //   this._def.shape(),
  //   //   merging._def.shape()
  //   // );
  //   const merged: any = new ZodObject({
  //     unknownKeys: merging._def.unknownKeys,
  //     catchall: merging._def.catchall,
  //     shape: () =>
  //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),
  //     typeName: ZodFirstPartyTypeKind.ZodObject,
  //   }) as any;
  //   return merged;
  // }
  catchall(e) {
    return new _e({
      ...this._def,
      catchall: e
    });
  }
  pick(e) {
    const t = {};
    return pe.objectKeys(e).forEach((r) => {
      e[r] && this.shape[r] && (t[r] = this.shape[r]);
    }), new _e({
      ...this._def,
      shape: () => t
    });
  }
  omit(e) {
    const t = {};
    return pe.objectKeys(this.shape).forEach((r) => {
      e[r] || (t[r] = this.shape[r]);
    }), new _e({
      ...this._def,
      shape: () => t
    });
  }
  /**
   * @deprecated
   */
  deepPartial() {
    return mr(this);
  }
  partial(e) {
    const t = {};
    return pe.objectKeys(this.shape).forEach((r) => {
      const s = this.shape[r];
      e && !e[r] ? t[r] = s : t[r] = s.optional();
    }), new _e({
      ...this._def,
      shape: () => t
    });
  }
  required(e) {
    const t = {};
    return pe.objectKeys(this.shape).forEach((r) => {
      if (e && !e[r])
        t[r] = this.shape[r];
      else {
        let i = this.shape[r];
        for (; i instanceof Yt; )
          i = i._def.innerType;
        t[r] = i;
      }
    }), new _e({
      ...this._def,
      shape: () => t
    });
  }
  keyof() {
    return W0(pe.objectKeys(this.shape));
  }
}
_e.create = (n, e) => new _e({
  shape: () => n,
  unknownKeys: "strip",
  catchall: Qt.create(),
  typeName: ee.ZodObject,
  ...ae(e)
});
_e.strictCreate = (n, e) => new _e({
  shape: () => n,
  unknownKeys: "strict",
  catchall: Qt.create(),
  typeName: ee.ZodObject,
  ...ae(e)
});
_e.lazycreate = (n, e) => new _e({
  shape: n,
  unknownKeys: "strip",
  catchall: Qt.create(),
  typeName: ee.ZodObject,
  ...ae(e)
});
class vs extends fe {
  _parse(e) {
    const { ctx: t } = this._processInputParams(e), r = this._def.options;
    function s(i) {
      for (const a of i)
        if (a.result.status === "valid")
          return a.result;
      for (const a of i)
        if (a.result.status === "dirty")
          return t.common.issues.push(...a.ctx.common.issues), a.result;
      const o = i.map((a) => new Et(a.ctx.common.issues));
      return U(t, {
        code: Z.invalid_union,
        unionErrors: o
      }), ie;
    }
    if (t.common.async)
      return Promise.all(r.map(async (i) => {
        const o = {
          ...t,
          common: {
            ...t.common,
            issues: []
          },
          parent: null
        };
        return {
          result: await i._parseAsync({
            data: t.data,
            path: t.path,
            parent: o
          }),
          ctx: o
        };
      })).then(s);
    {
      let i;
      const o = [];
      for (const l of r) {
        const c = {
          ...t,
          common: {
            ...t.common,
            issues: []
          },
          parent: null
        }, d = l._parseSync({
          data: t.data,
          path: t.path,
          parent: c
        });
        if (d.status === "valid")
          return d;
        d.status === "dirty" && !i && (i = { result: d, ctx: c }), c.common.issues.length && o.push(c.common.issues);
      }
      if (i)
        return t.common.issues.push(...i.ctx.common.issues), i.result;
      const a = o.map((l) => new Et(l));
      return U(t, {
        code: Z.invalid_union,
        unionErrors: a
      }), ie;
    }
  }
  get options() {
    return this._def.options;
  }
}
vs.create = (n, e) => new vs({
  options: n,
  typeName: ee.ZodUnion,
  ...ae(e)
});
const qs = (n) => n instanceof Ns ? qs(n.schema) : n instanceof Ot ? qs(n.innerType()) : n instanceof ks ? [n.value] : n instanceof Rn ? n.options : n instanceof Ms ? Object.keys(n.enum) : n instanceof Cs ? qs(n._def.innerType) : n instanceof bs ? [void 0] : n instanceof ys ? [null] : null;
class Qi extends fe {
  _parse(e) {
    const { ctx: t } = this._processInputParams(e);
    if (t.parsedType !== j.object)
      return U(t, {
        code: Z.invalid_type,
        expected: j.object,
        received: t.parsedType
      }), ie;
    const r = this.discriminator, s = t.data[r], i = this.optionsMap.get(s);
    return i ? t.common.async ? i._parseAsync({
      data: t.data,
      path: t.path,
      parent: t
    }) : i._parseSync({
      data: t.data,
      path: t.path,
      parent: t
    }) : (U(t, {
      code: Z.invalid_union_discriminator,
      options: Array.from(this.optionsMap.keys()),
      path: [r]
    }), ie);
  }
  get discriminator() {
    return this._def.discriminator;
  }
  get options() {
    return this._def.options;
  }
  get optionsMap() {
    return this._def.optionsMap;
  }
  /**
   * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.
   * However, it only allows a union of objects, all of which need to share a discriminator property. This property must
   * have a different value for each object in the union.
   * @param discriminator the name of the discriminator property
   * @param types an array of object schemas
   * @param params
   */
  static create(e, t, r) {
    const s = /* @__PURE__ */ new Map();
    for (const i of t) {
      const o = qs(i.shape[e]);
      if (!o)
        throw new Error(`A discriminator value for key \`${e}\` could not be extracted from all schema options`);
      for (const a of o) {
        if (s.has(a))
          throw new Error(`Discriminator property ${String(e)} has duplicate value ${String(a)}`);
        s.set(a, i);
      }
    }
    return new Qi({
      typeName: ee.ZodDiscriminatedUnion,
      discriminator: e,
      options: t,
      optionsMap: s,
      ...ae(r)
    });
  }
}
function xa(n, e) {
  const t = hn(n), r = hn(e);
  if (n === e)
    return { valid: !0, data: n };
  if (t === j.object && r === j.object) {
    const s = pe.objectKeys(e), i = pe.objectKeys(n).filter((a) => s.indexOf(a) !== -1), o = { ...n, ...e };
    for (const a of i) {
      const l = xa(n[a], e[a]);
      if (!l.valid)
        return { valid: !1 };
      o[a] = l.data;
    }
    return { valid: !0, data: o };
  } else if (t === j.array && r === j.array) {
    if (n.length !== e.length)
      return { valid: !1 };
    const s = [];
    for (let i = 0; i < n.length; i++) {
      const o = n[i], a = e[i], l = xa(o, a);
      if (!l.valid)
        return { valid: !1 };
      s.push(l.data);
    }
    return { valid: !0, data: s };
  } else
    return t === j.date && r === j.date && +n == +e ? { valid: !0, data: n } : { valid: !1 };
}
class xs extends fe {
  _parse(e) {
    const { status: t, ctx: r } = this._processInputParams(e), s = (i, o) => {
      if (ya(i) || ya(o))
        return ie;
      const a = xa(i.value, o.value);
      return a.valid ? ((va(i) || va(o)) && t.dirty(), { status: t.value, value: a.data }) : (U(r, {
        code: Z.invalid_intersection_types
      }), ie);
    };
    return r.common.async ? Promise.all([
      this._def.left._parseAsync({
        data: r.data,
        path: r.path,
        parent: r
      }),
      this._def.right._parseAsync({
        data: r.data,
        path: r.path,
        parent: r
      })
    ]).then(([i, o]) => s(i, o)) : s(this._def.left._parseSync({
      data: r.data,
      path: r.path,
      parent: r
    }), this._def.right._parseSync({
      data: r.data,
      path: r.path,
      parent: r
    }));
  }
}
xs.create = (n, e, t) => new xs({
  left: n,
  right: e,
  typeName: ee.ZodIntersection,
  ...ae(t)
});
class jt extends fe {
  _parse(e) {
    const { status: t, ctx: r } = this._processInputParams(e);
    if (r.parsedType !== j.array)
      return U(r, {
        code: Z.invalid_type,
        expected: j.array,
        received: r.parsedType
      }), ie;
    if (r.data.length < this._def.items.length)
      return U(r, {
        code: Z.too_small,
        minimum: this._def.items.length,
        inclusive: !0,
        exact: !1,
        type: "array"
      }), ie;
    !this._def.rest && r.data.length > this._def.items.length && (U(r, {
      code: Z.too_big,
      maximum: this._def.items.length,
      inclusive: !0,
      exact: !1,
      type: "array"
    }), t.dirty());
    const i = [...r.data].map((o, a) => {
      const l = this._def.items[a] || this._def.rest;
      return l ? l._parse(new Ft(r, o, r.path, a)) : null;
    }).filter((o) => !!o);
    return r.common.async ? Promise.all(i).then((o) => Ye.mergeArray(t, o)) : Ye.mergeArray(t, i);
  }
  get items() {
    return this._def.items;
  }
  rest(e) {
    return new jt({
      ...this._def,
      rest: e
    });
  }
}
jt.create = (n, e) => {
  if (!Array.isArray(n))
    throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
  return new jt({
    items: n,
    typeName: ee.ZodTuple,
    rest: null,
    ...ae(e)
  });
};
class ws extends fe {
  get keySchema() {
    return this._def.keyType;
  }
  get valueSchema() {
    return this._def.valueType;
  }
  _parse(e) {
    const { status: t, ctx: r } = this._processInputParams(e);
    if (r.parsedType !== j.object)
      return U(r, {
        code: Z.invalid_type,
        expected: j.object,
        received: r.parsedType
      }), ie;
    const s = [], i = this._def.keyType, o = this._def.valueType;
    for (const a in r.data)
      s.push({
        key: i._parse(new Ft(r, a, r.path, a)),
        value: o._parse(new Ft(r, r.data[a], r.path, a))
      });
    return r.common.async ? Ye.mergeObjectAsync(t, s) : Ye.mergeObjectSync(t, s);
  }
  get element() {
    return this._def.valueType;
  }
  static create(e, t, r) {
    return t instanceof fe ? new ws({
      keyType: e,
      valueType: t,
      typeName: ee.ZodRecord,
      ...ae(r)
    }) : new ws({
      keyType: Ct.create(),
      valueType: e,
      typeName: ee.ZodRecord,
      ...ae(t)
    });
  }
}
class _i extends fe {
  get keySchema() {
    return this._def.keyType;
  }
  get valueSchema() {
    return this._def.valueType;
  }
  _parse(e) {
    const { status: t, ctx: r } = this._processInputParams(e);
    if (r.parsedType !== j.map)
      return U(r, {
        code: Z.invalid_type,
        expected: j.map,
        received: r.parsedType
      }), ie;
    const s = this._def.keyType, i = this._def.valueType, o = [...r.data.entries()].map(([a, l], c) => ({
      key: s._parse(new Ft(r, a, r.path, [c, "key"])),
      value: i._parse(new Ft(r, l, r.path, [c, "value"]))
    }));
    if (r.common.async) {
      const a = /* @__PURE__ */ new Map();
      return Promise.resolve().then(async () => {
        for (const l of o) {
          const c = await l.key, d = await l.value;
          if (c.status === "aborted" || d.status === "aborted")
            return ie;
          (c.status === "dirty" || d.status === "dirty") && t.dirty(), a.set(c.value, d.value);
        }
        return { status: t.value, value: a };
      });
    } else {
      const a = /* @__PURE__ */ new Map();
      for (const l of o) {
        const c = l.key, d = l.value;
        if (c.status === "aborted" || d.status === "aborted")
          return ie;
        (c.status === "dirty" || d.status === "dirty") && t.dirty(), a.set(c.value, d.value);
      }
      return { status: t.value, value: a };
    }
  }
}
_i.create = (n, e, t) => new _i({
  valueType: e,
  keyType: n,
  typeName: ee.ZodMap,
  ...ae(t)
});
class er extends fe {
  _parse(e) {
    const { status: t, ctx: r } = this._processInputParams(e);
    if (r.parsedType !== j.set)
      return U(r, {
        code: Z.invalid_type,
        expected: j.set,
        received: r.parsedType
      }), ie;
    const s = this._def;
    s.minSize !== null && r.data.size < s.minSize.value && (U(r, {
      code: Z.too_small,
      minimum: s.minSize.value,
      type: "set",
      inclusive: !0,
      exact: !1,
      message: s.minSize.message
    }), t.dirty()), s.maxSize !== null && r.data.size > s.maxSize.value && (U(r, {
      code: Z.too_big,
      maximum: s.maxSize.value,
      type: "set",
      inclusive: !0,
      exact: !1,
      message: s.maxSize.message
    }), t.dirty());
    const i = this._def.valueType;
    function o(l) {
      const c = /* @__PURE__ */ new Set();
      for (const d of l) {
        if (d.status === "aborted")
          return ie;
        d.status === "dirty" && t.dirty(), c.add(d.value);
      }
      return { status: t.value, value: c };
    }
    const a = [...r.data.values()].map((l, c) => i._parse(new Ft(r, l, r.path, c)));
    return r.common.async ? Promise.all(a).then((l) => o(l)) : o(a);
  }
  min(e, t) {
    return new er({
      ...this._def,
      minSize: { value: e, message: Q.toString(t) }
    });
  }
  max(e, t) {
    return new er({
      ...this._def,
      maxSize: { value: e, message: Q.toString(t) }
    });
  }
  size(e, t) {
    return this.min(e, t).max(e, t);
  }
  nonempty(e) {
    return this.min(1, e);
  }
}
er.create = (n, e) => new er({
  valueType: n,
  minSize: null,
  maxSize: null,
  typeName: ee.ZodSet,
  ...ae(e)
});
class Mr extends fe {
  constructor() {
    super(...arguments), this.validate = this.implement;
  }
  _parse(e) {
    const { ctx: t } = this._processInputParams(e);
    if (t.parsedType !== j.function)
      return U(t, {
        code: Z.invalid_type,
        expected: j.function,
        received: t.parsedType
      }), ie;
    function r(a, l) {
      return Si({
        data: a,
        path: t.path,
        errorMaps: [
          t.common.contextualErrorMap,
          t.schemaErrorMap,
          Ei(),
          hs
        ].filter((c) => !!c),
        issueData: {
          code: Z.invalid_arguments,
          argumentsError: l
        }
      });
    }
    function s(a, l) {
      return Si({
        data: a,
        path: t.path,
        errorMaps: [
          t.common.contextualErrorMap,
          t.schemaErrorMap,
          Ei(),
          hs
        ].filter((c) => !!c),
        issueData: {
          code: Z.invalid_return_type,
          returnTypeError: l
        }
      });
    }
    const i = { errorMap: t.common.contextualErrorMap }, o = t.data;
    if (this._def.returns instanceof Hr) {
      const a = this;
      return st(async function(...l) {
        const c = new Et([]), d = await a._def.args.parseAsync(l, i).catch((h) => {
          throw c.addIssue(r(l, h)), c;
        }), f = await Reflect.apply(o, this, d);
        return await a._def.returns._def.type.parseAsync(f, i).catch((h) => {
          throw c.addIssue(s(f, h)), c;
        });
      });
    } else {
      const a = this;
      return st(function(...l) {
        const c = a._def.args.safeParse(l, i);
        if (!c.success)
          throw new Et([r(l, c.error)]);
        const d = Reflect.apply(o, this, c.data), f = a._def.returns.safeParse(d, i);
        if (!f.success)
          throw new Et([s(d, f.error)]);
        return f.data;
      });
    }
  }
  parameters() {
    return this._def.args;
  }
  returnType() {
    return this._def.returns;
  }
  args(...e) {
    return new Mr({
      ...this._def,
      args: jt.create(e).rest(qn.create())
    });
  }
  returns(e) {
    return new Mr({
      ...this._def,
      returns: e
    });
  }
  implement(e) {
    return this.parse(e);
  }
  strictImplement(e) {
    return this.parse(e);
  }
  static create(e, t, r) {
    return new Mr({
      args: e || jt.create([]).rest(qn.create()),
      returns: t || qn.create(),
      typeName: ee.ZodFunction,
      ...ae(r)
    });
  }
}
class Ns extends fe {
  get schema() {
    return this._def.getter();
  }
  _parse(e) {
    const { ctx: t } = this._processInputParams(e);
    return this._def.getter()._parse({ data: t.data, path: t.path, parent: t });
  }
}
Ns.create = (n, e) => new Ns({
  getter: n,
  typeName: ee.ZodLazy,
  ...ae(e)
});
class ks extends fe {
  _parse(e) {
    if (e.data !== this._def.value) {
      const t = this._getOrReturnCtx(e);
      return U(t, {
        received: t.data,
        code: Z.invalid_literal,
        expected: this._def.value
      }), ie;
    }
    return { status: "valid", value: e.data };
  }
  get value() {
    return this._def.value;
  }
}
ks.create = (n, e) => new ks({
  value: n,
  typeName: ee.ZodLiteral,
  ...ae(e)
});
function W0(n, e) {
  return new Rn({
    values: n,
    typeName: ee.ZodEnum,
    ...ae(e)
  });
}
class Rn extends fe {
  _parse(e) {
    if (typeof e.data != "string") {
      const t = this._getOrReturnCtx(e), r = this._def.values;
      return U(t, {
        expected: pe.joinValues(r),
        received: t.parsedType,
        code: Z.invalid_type
      }), ie;
    }
    if (this._def.values.indexOf(e.data) === -1) {
      const t = this._getOrReturnCtx(e), r = this._def.values;
      return U(t, {
        received: t.data,
        code: Z.invalid_enum_value,
        options: r
      }), ie;
    }
    return st(e.data);
  }
  get options() {
    return this._def.values;
  }
  get enum() {
    const e = {};
    for (const t of this._def.values)
      e[t] = t;
    return e;
  }
  get Values() {
    const e = {};
    for (const t of this._def.values)
      e[t] = t;
    return e;
  }
  get Enum() {
    const e = {};
    for (const t of this._def.values)
      e[t] = t;
    return e;
  }
  extract(e) {
    return Rn.create(e);
  }
  exclude(e) {
    return Rn.create(this.options.filter((t) => !e.includes(t)));
  }
}
Rn.create = W0;
class Ms extends fe {
  _parse(e) {
    const t = pe.getValidEnumValues(this._def.values), r = this._getOrReturnCtx(e);
    if (r.parsedType !== j.string && r.parsedType !== j.number) {
      const s = pe.objectValues(t);
      return U(r, {
        expected: pe.joinValues(s),
        received: r.parsedType,
        code: Z.invalid_type
      }), ie;
    }
    if (t.indexOf(e.data) === -1) {
      const s = pe.objectValues(t);
      return U(r, {
        received: r.data,
        code: Z.invalid_enum_value,
        options: s
      }), ie;
    }
    return st(e.data);
  }
  get enum() {
    return this._def.values;
  }
}
Ms.create = (n, e) => new Ms({
  values: n,
  typeName: ee.ZodNativeEnum,
  ...ae(e)
});
class Hr extends fe {
  unwrap() {
    return this._def.type;
  }
  _parse(e) {
    const { ctx: t } = this._processInputParams(e);
    if (t.parsedType !== j.promise && t.common.async === !1)
      return U(t, {
        code: Z.invalid_type,
        expected: j.promise,
        received: t.parsedType
      }), ie;
    const r = t.parsedType === j.promise ? t.data : Promise.resolve(t.data);
    return st(r.then((s) => this._def.type.parseAsync(s, {
      path: t.path,
      errorMap: t.common.contextualErrorMap
    })));
  }
}
Hr.create = (n, e) => new Hr({
  type: n,
  typeName: ee.ZodPromise,
  ...ae(e)
});
class Ot extends fe {
  innerType() {
    return this._def.schema;
  }
  sourceType() {
    return this._def.schema._def.typeName === ee.ZodEffects ? this._def.schema.sourceType() : this._def.schema;
  }
  _parse(e) {
    const { status: t, ctx: r } = this._processInputParams(e), s = this._def.effect || null, i = {
      addIssue: (o) => {
        U(r, o), o.fatal ? t.abort() : t.dirty();
      },
      get path() {
        return r.path;
      }
    };
    if (i.addIssue = i.addIssue.bind(i), s.type === "preprocess") {
      const o = s.transform(r.data, i);
      return r.common.issues.length ? {
        status: "dirty",
        value: r.data
      } : r.common.async ? Promise.resolve(o).then((a) => this._def.schema._parseAsync({
        data: a,
        path: r.path,
        parent: r
      })) : this._def.schema._parseSync({
        data: o,
        path: r.path,
        parent: r
      });
    }
    if (s.type === "refinement") {
      const o = (a) => {
        const l = s.refinement(a, i);
        if (r.common.async)
          return Promise.resolve(l);
        if (l instanceof Promise)
          throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
        return a;
      };
      if (r.common.async === !1) {
        const a = this._def.schema._parseSync({
          data: r.data,
          path: r.path,
          parent: r
        });
        return a.status === "aborted" ? ie : (a.status === "dirty" && t.dirty(), o(a.value), { status: t.value, value: a.value });
      } else
        return this._def.schema._parseAsync({ data: r.data, path: r.path, parent: r }).then((a) => a.status === "aborted" ? ie : (a.status === "dirty" && t.dirty(), o(a.value).then(() => ({ status: t.value, value: a.value }))));
    }
    if (s.type === "transform")
      if (r.common.async === !1) {
        const o = this._def.schema._parseSync({
          data: r.data,
          path: r.path,
          parent: r
        });
        if (!ps(o))
          return o;
        const a = s.transform(o.value, i);
        if (a instanceof Promise)
          throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");
        return { status: t.value, value: a };
      } else
        return this._def.schema._parseAsync({ data: r.data, path: r.path, parent: r }).then((o) => ps(o) ? Promise.resolve(s.transform(o.value, i)).then((a) => ({ status: t.value, value: a })) : o);
    pe.assertNever(s);
  }
}
Ot.create = (n, e, t) => new Ot({
  schema: n,
  typeName: ee.ZodEffects,
  effect: e,
  ...ae(t)
});
Ot.createWithPreprocess = (n, e, t) => new Ot({
  schema: e,
  effect: { type: "preprocess", transform: n },
  typeName: ee.ZodEffects,
  ...ae(t)
});
class Yt extends fe {
  _parse(e) {
    return this._getType(e) === j.undefined ? st(void 0) : this._def.innerType._parse(e);
  }
  unwrap() {
    return this._def.innerType;
  }
}
Yt.create = (n, e) => new Yt({
  innerType: n,
  typeName: ee.ZodOptional,
  ...ae(e)
});
class tr extends fe {
  _parse(e) {
    return this._getType(e) === j.null ? st(null) : this._def.innerType._parse(e);
  }
  unwrap() {
    return this._def.innerType;
  }
}
tr.create = (n, e) => new tr({
  innerType: n,
  typeName: ee.ZodNullable,
  ...ae(e)
});
class Cs extends fe {
  _parse(e) {
    const { ctx: t } = this._processInputParams(e);
    let r = t.data;
    return t.parsedType === j.undefined && (r = this._def.defaultValue()), this._def.innerType._parse({
      data: r,
      path: t.path,
      parent: t
    });
  }
  removeDefault() {
    return this._def.innerType;
  }
}
Cs.create = (n, e) => new Cs({
  innerType: n,
  typeName: ee.ZodDefault,
  defaultValue: typeof e.default == "function" ? e.default : () => e.default,
  ...ae(e)
});
class Di extends fe {
  _parse(e) {
    const { ctx: t } = this._processInputParams(e), r = {
      ...t,
      common: {
        ...t.common,
        issues: []
      }
    }, s = this._def.innerType._parse({
      data: r.data,
      path: r.path,
      parent: {
        ...r
      }
    });
    return Ai(s) ? s.then((i) => ({
      status: "valid",
      value: i.status === "valid" ? i.value : this._def.catchValue({
        get error() {
          return new Et(r.common.issues);
        },
        input: r.data
      })
    })) : {
      status: "valid",
      value: s.status === "valid" ? s.value : this._def.catchValue({
        get error() {
          return new Et(r.common.issues);
        },
        input: r.data
      })
    };
  }
  removeCatch() {
    return this._def.innerType;
  }
}
Di.create = (n, e) => new Di({
  innerType: n,
  typeName: ee.ZodCatch,
  catchValue: typeof e.catch == "function" ? e.catch : () => e.catch,
  ...ae(e)
});
class Hi extends fe {
  _parse(e) {
    if (this._getType(e) !== j.nan) {
      const r = this._getOrReturnCtx(e);
      return U(r, {
        code: Z.invalid_type,
        expected: j.nan,
        received: r.parsedType
      }), ie;
    }
    return { status: "valid", value: e.data };
  }
}
Hi.create = (n) => new Hi({
  typeName: ee.ZodNaN,
  ...ae(n)
});
const dN = Symbol("zod_brand");
class q0 extends fe {
  _parse(e) {
    const { ctx: t } = this._processInputParams(e), r = t.data;
    return this._def.type._parse({
      data: r,
      path: t.path,
      parent: t
    });
  }
  unwrap() {
    return this._def.type;
  }
}
class _s extends fe {
  _parse(e) {
    const { status: t, ctx: r } = this._processInputParams(e);
    if (r.common.async)
      return (async () => {
        const i = await this._def.in._parseAsync({
          data: r.data,
          path: r.path,
          parent: r
        });
        return i.status === "aborted" ? ie : i.status === "dirty" ? (t.dirty(), B0(i.value)) : this._def.out._parseAsync({
          data: i.value,
          path: r.path,
          parent: r
        });
      })();
    {
      const s = this._def.in._parseSync({
        data: r.data,
        path: r.path,
        parent: r
      });
      return s.status === "aborted" ? ie : s.status === "dirty" ? (t.dirty(), {
        status: "dirty",
        value: s.value
      }) : this._def.out._parseSync({
        data: s.value,
        path: r.path,
        parent: r
      });
    }
  }
  static create(e, t) {
    return new _s({
      in: e,
      out: t,
      typeName: ee.ZodPipeline
    });
  }
}
class Ii extends fe {
  _parse(e) {
    const t = this._def.innerType._parse(e);
    return ps(t) && (t.value = Object.freeze(t.value)), t;
  }
}
Ii.create = (n, e) => new Ii({
  innerType: n,
  typeName: ee.ZodReadonly,
  ...ae(e)
});
const K0 = (n, e = {}, t) => n ? Dr.create().superRefine((r, s) => {
  var i, o;
  if (!n(r)) {
    const a = typeof e == "function" ? e(r) : typeof e == "string" ? { message: e } : e, l = (o = (i = a.fatal) !== null && i !== void 0 ? i : t) !== null && o !== void 0 ? o : !0, c = typeof a == "string" ? { message: a } : a;
    s.addIssue({ code: "custom", ...c, fatal: l });
  }
}) : Dr.create(), fN = {
  object: _e.lazycreate
};
var ee;
(function(n) {
  n.ZodString = "ZodString", n.ZodNumber = "ZodNumber", n.ZodNaN = "ZodNaN", n.ZodBigInt = "ZodBigInt", n.ZodBoolean = "ZodBoolean", n.ZodDate = "ZodDate", n.ZodSymbol = "ZodSymbol", n.ZodUndefined = "ZodUndefined", n.ZodNull = "ZodNull", n.ZodAny = "ZodAny", n.ZodUnknown = "ZodUnknown", n.ZodNever = "ZodNever", n.ZodVoid = "ZodVoid", n.ZodArray = "ZodArray", n.ZodObject = "ZodObject", n.ZodUnion = "ZodUnion", n.ZodDiscriminatedUnion = "ZodDiscriminatedUnion", n.ZodIntersection = "ZodIntersection", n.ZodTuple = "ZodTuple", n.ZodRecord = "ZodRecord", n.ZodMap = "ZodMap", n.ZodSet = "ZodSet", n.ZodFunction = "ZodFunction", n.ZodLazy = "ZodLazy", n.ZodLiteral = "ZodLiteral", n.ZodEnum = "ZodEnum", n.ZodEffects = "ZodEffects", n.ZodNativeEnum = "ZodNativeEnum", n.ZodOptional = "ZodOptional", n.ZodNullable = "ZodNullable", n.ZodDefault = "ZodDefault", n.ZodCatch = "ZodCatch", n.ZodPromise = "ZodPromise", n.ZodBranded = "ZodBranded", n.ZodPipeline = "ZodPipeline", n.ZodReadonly = "ZodReadonly";
})(ee || (ee = {}));
const mN = (n, e = {
  message: `Input not instance of ${n.name}`
}) => K0((t) => t instanceof n, e), J0 = Ct.create, G0 = Mn.create, hN = Hi.create, pN = Cn.create, Y0 = gs.create, gN = Xn.create, bN = Oi.create, yN = bs.create, vN = ys.create, xN = Dr.create, wN = qn.create, NN = Qt.create, kN = Ti.create, MN = St.create, CN = _e.create, RN = _e.strictCreate, EN = vs.create, SN = Qi.create, AN = xs.create, ON = jt.create, TN = ws.create, _N = _i.create, DN = er.create, HN = Mr.create, IN = Ns.create, PN = ks.create, LN = Rn.create, ZN = Ms.create, $N = Hr.create, Ku = Ot.create, VN = Yt.create, zN = tr.create, FN = Ot.createWithPreprocess, jN = _s.create, UN = () => J0().optional(), BN = () => G0().optional(), WN = () => Y0().optional(), qN = {
  string: (n) => Ct.create({ ...n, coerce: !0 }),
  number: (n) => Mn.create({ ...n, coerce: !0 }),
  boolean: (n) => gs.create({
    ...n,
    coerce: !0
  }),
  bigint: (n) => Cn.create({ ...n, coerce: !0 }),
  date: (n) => Xn.create({ ...n, coerce: !0 })
}, KN = ie;
var Do = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  defaultErrorMap: hs,
  setErrorMap: Qw,
  getErrorMap: Ei,
  makeIssue: Si,
  EMPTY_PATH: Xw,
  addIssueToContext: U,
  ParseStatus: Ye,
  INVALID: ie,
  DIRTY: B0,
  OK: st,
  isAborted: ya,
  isDirty: va,
  isValid: ps,
  isAsync: Ai,
  get util() {
    return pe;
  },
  get objectUtil() {
    return ba;
  },
  ZodParsedType: j,
  getParsedType: hn,
  ZodType: fe,
  ZodString: Ct,
  ZodNumber: Mn,
  ZodBigInt: Cn,
  ZodBoolean: gs,
  ZodDate: Xn,
  ZodSymbol: Oi,
  ZodUndefined: bs,
  ZodNull: ys,
  ZodAny: Dr,
  ZodUnknown: qn,
  ZodNever: Qt,
  ZodVoid: Ti,
  ZodArray: St,
  ZodObject: _e,
  ZodUnion: vs,
  ZodDiscriminatedUnion: Qi,
  ZodIntersection: xs,
  ZodTuple: jt,
  ZodRecord: ws,
  ZodMap: _i,
  ZodSet: er,
  ZodFunction: Mr,
  ZodLazy: Ns,
  ZodLiteral: ks,
  ZodEnum: Rn,
  ZodNativeEnum: Ms,
  ZodPromise: Hr,
  ZodEffects: Ot,
  ZodTransformer: Ot,
  ZodOptional: Yt,
  ZodNullable: tr,
  ZodDefault: Cs,
  ZodCatch: Di,
  ZodNaN: Hi,
  BRAND: dN,
  ZodBranded: q0,
  ZodPipeline: _s,
  ZodReadonly: Ii,
  custom: K0,
  Schema: fe,
  ZodSchema: fe,
  late: fN,
  get ZodFirstPartyTypeKind() {
    return ee;
  },
  coerce: qN,
  any: xN,
  array: MN,
  bigint: pN,
  boolean: Y0,
  date: gN,
  discriminatedUnion: SN,
  effect: Ku,
  enum: LN,
  function: HN,
  instanceof: mN,
  intersection: AN,
  lazy: IN,
  literal: PN,
  map: _N,
  nan: hN,
  nativeEnum: ZN,
  never: NN,
  null: vN,
  nullable: zN,
  number: G0,
  object: CN,
  oboolean: WN,
  onumber: BN,
  optional: VN,
  ostring: UN,
  pipeline: jN,
  preprocess: FN,
  promise: $N,
  record: TN,
  set: DN,
  strictObject: RN,
  string: J0,
  symbol: bN,
  transformer: Ku,
  tuple: ON,
  undefined: yN,
  union: EN,
  unknown: wN,
  void: kN,
  NEVER: KN,
  ZodIssueCode: Z,
  quotelessJson: Yw,
  ZodError: Et
});
const Ju = ({ className: n, ...e }) => /* @__PURE__ */ g("div", { className: T("animate-pulse rounded-md bg-secondary", n), ...e }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/skeleton.tsx",
  lineNumber: 4,
  columnNumber: 3
}, void 0), Q0 = sr(
  "inline-flex items-center justify-center rounded text-sm font-medium transition-colors hover:bg-secondary/60 hover:text-secondary-foreground focus-visible:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-secondary data-[state=on]:text-secondary-foreground",
  {
    variants: {
      variant: {
        default: "bg-transparent",
        outline: "border bg-transparent hover:bg-secondary/60 hover:text-secondary-foreground"
      },
      size: {
        sm: "size-8",
        md: "size-9",
        lg: "size-10"
      }
    },
    defaultVariants: {
      variant: "default",
      size: "md"
    }
  }
), $e = R(({ className: n, variant: e, size: t, ...r }, s) => /* @__PURE__ */ g(
  Qu.Root,
  {
    ref: s,
    className: T(Q0({ variant: e, size: t, className: n })),
    ...r
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/toggle.tsx",
    lineNumber: 12,
    columnNumber: 3
  },
  void 0
));
$e.displayName = Qu.Root.displayName;
const ak = Rr.Provider, JN = Rr.Root, GN = Rr.Trigger, X0 = R(({ className: n, children: e, sideOffset: t = 6, ...r }, s) => /* @__PURE__ */ g(Rr.Portal, { children: /* @__PURE__ */ g(
  Rr.Content,
  {
    ref: s,
    sideOffset: t,
    className: T(
      "z-50 overflow-hidden rounded bg-primary px-3 py-1.5 text-xs text-primary-foreground shadow-sm animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      n
    ),
    ...r,
    children: e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/tooltip.tsx",
    lineNumber: 16,
    columnNumber: 5
  },
  void 0
) }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/tooltip.tsx",
  lineNumber: 15,
  columnNumber: 3
}, void 0));
X0.displayName = Rr.Content.displayName;
const Re = ({ content: n, children: e, ...t }) => /* @__PURE__ */ g(JN, { children: [
  /* @__PURE__ */ g(GN, { asChild: !0, children: e }, void 0, !1, {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/tooltip.tsx",
    lineNumber: 38,
    columnNumber: 5
  }, void 0),
  /* @__PURE__ */ g(X0, { ...t, children: n }, void 0, !1, {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/tooltip.tsx",
    lineNumber: 39,
    columnNumber: 5
  }, void 0)
] }, void 0, !0, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/tooltip.tsx",
  lineNumber: 37,
  columnNumber: 3
}, void 0), YN = Do.object({
  src: Do.string(),
  alt: Do.string().optional()
}), QN = ({ onInsert: n }) => {
  const e = cm({
    resolver: xb(YN),
    defaultValues: { src: "", alt: "" }
  }), t = (r) => {
    n(r), e.reset();
  };
  return /* @__PURE__ */ g(hb, { ...e, children: /* @__PURE__ */ g("form", { onSubmit: e.handleSubmit(t), className: "space-y-3", children: [
    /* @__PURE__ */ g("p", { className: "prose prose-sm prose-zinc dark:prose-invert", children: "Insert an image from an external URL and use it on your resume." }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 75,
      columnNumber: 9
    }, void 0),
    /* @__PURE__ */ g(
      Ec,
      {
        name: "src",
        control: e.control,
        render: ({ field: r }) => /* @__PURE__ */ g(Vo, { children: [
          /* @__PURE__ */ g(zo, { children: "URL" }, void 0, !1, {
            fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
            lineNumber: 84,
            columnNumber: 15
          }, void 0),
          /* @__PURE__ */ g(Fo, { children: /* @__PURE__ */ g(Gs, { placeholder: "http://...", ...r }, void 0, !1, {
            fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
            lineNumber: 86,
            columnNumber: 17
          }, void 0) }, void 0, !1, {
            fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
            lineNumber: 85,
            columnNumber: 15
          }, void 0),
          /* @__PURE__ */ g(cf, {}, void 0, !1, {
            fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
            lineNumber: 88,
            columnNumber: 15
          }, void 0)
        ] }, void 0, !0, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 83,
          columnNumber: 13
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 79,
        columnNumber: 9
      },
      void 0
    ),
    /* @__PURE__ */ g(
      Ec,
      {
        name: "alt",
        control: e.control,
        render: ({ field: r }) => /* @__PURE__ */ g(Vo, { children: [
          /* @__PURE__ */ g(zo, { children: "Description" }, void 0, !1, {
            fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
            lineNumber: 98,
            columnNumber: 15
          }, void 0),
          /* @__PURE__ */ g(Fo, { children: /* @__PURE__ */ g(Gs, { ...r }, void 0, !1, {
            fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
            lineNumber: 100,
            columnNumber: 17
          }, void 0) }, void 0, !1, {
            fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
            lineNumber: 99,
            columnNumber: 15
          }, void 0)
        ] }, void 0, !0, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 97,
          columnNumber: 13
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 93,
        columnNumber: 9
      },
      void 0
    ),
    /* @__PURE__ */ g("div", { className: "!mt-5 ml-auto max-w-fit", children: /* @__PURE__ */ g(Nt, { type: "submit", variant: "secondary", size: "sm", children: "Insert Image" }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 107,
      columnNumber: 11
    }, void 0) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 106,
      columnNumber: 9
    }, void 0)
  ] }, void 0, !0, {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
    lineNumber: 74,
    columnNumber: 7
  }, void 0) }, void 0, !1, {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
    lineNumber: 73,
    columnNumber: 5
  }, void 0);
}, XN = ({ editor: n }) => {
  const e = qr(() => {
    const t = n.getAttributes("link").href, r = window.prompt("URL", t);
    if (r !== null) {
      if (r === "") {
        n.chain().focus().extendMarkRange("link").unsetLink().run();
        return;
      }
      n.chain().focus().extendMarkRange("link").setLink({ href: r }).run();
    }
  }, [n]);
  return /* @__PURE__ */ g("div", { className: "flex flex-wrap gap-0.5 border p-1", children: [
    /* @__PURE__ */ g(Re, { content: "Bold", children: /* @__PURE__ */ g(
      $e,
      {
        size: "sm",
        pressed: n.isActive("bold"),
        disabled: !n.can().chain().focus().toggleBold().run(),
        onPressedChange: () => n.chain().focus().toggleBold().run(),
        children: /* @__PURE__ */ g(Md, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 146,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 140,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 139,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Italic", children: /* @__PURE__ */ g(
      $e,
      {
        size: "sm",
        pressed: n.isActive("italic"),
        disabled: !n.can().chain().focus().toggleItalic().run(),
        onPressedChange: () => n.chain().focus().toggleItalic().run(),
        children: /* @__PURE__ */ g(Ad, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 157,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 151,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 150,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Strikethrough", children: /* @__PURE__ */ g(
      $e,
      {
        size: "sm",
        pressed: n.isActive("strike"),
        disabled: !n.can().chain().focus().toggleStrike().run(),
        onPressedChange: () => n.chain().focus().toggleStrike().run(),
        children: /* @__PURE__ */ g(Td, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 168,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 162,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 161,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Underline", children: /* @__PURE__ */ g(
      $e,
      {
        size: "sm",
        pressed: n.isActive("underline"),
        disabled: !n.can().chain().focus().toggleUnderline().run(),
        onPressedChange: () => n.chain().focus().toggleUnderline().run(),
        children: /* @__PURE__ */ g(vd, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 179,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 173,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 172,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Highlight", children: /* @__PURE__ */ g(
      $e,
      {
        size: "sm",
        pressed: n.isActive("highlight"),
        disabled: !n.can().chain().focus().toggleHighlight().run(),
        onPressedChange: () => n.chain().focus().toggleHighlight().run(),
        children: /* @__PURE__ */ g(ud, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 190,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 184,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 183,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Hyperlink", children: /* @__PURE__ */ g(Nt, { type: "button", size: "sm", variant: "ghost", className: "px-2", onClick: e, children: /* @__PURE__ */ g(md, {}, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 196,
      columnNumber: 11
    }, void 0) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 195,
      columnNumber: 9
    }, void 0) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 194,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Inline Code", children: /* @__PURE__ */ g(
      $e,
      {
        size: "sm",
        pressed: n.isActive("code"),
        disabled: !n.can().chain().focus().toggleCode().run(),
        onPressedChange: () => n.chain().focus().toggleCode().run(),
        children: /* @__PURE__ */ g(ad, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 207,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 201,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 200,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Code Block", children: /* @__PURE__ */ g(
      $e,
      {
        size: "sm",
        pressed: n.isActive("codeBlock"),
        disabled: !n.can().chain().focus().toggleCodeBlock().run(),
        onPressedChange: () => n.chain().focus().toggleCodeBlock().run(),
        children: /* @__PURE__ */ g(od, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 218,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 212,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 211,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Heading 1", children: /* @__PURE__ */ g(
      $e,
      {
        size: "sm",
        pressed: n.isActive("heading", { level: 1 }),
        disabled: !n.can().chain().focus().toggleHeading({ level: 1 }).run(),
        onPressedChange: () => n.chain().focus().toggleHeading({ level: 1 }).run(),
        children: /* @__PURE__ */ g(Cd, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 229,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 223,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 222,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Heading 2", children: /* @__PURE__ */ g(
      $e,
      {
        size: "sm",
        pressed: n.isActive("heading", { level: 2 }),
        disabled: !n.can().chain().focus().toggleHeading({ level: 2 }).run(),
        onPressedChange: () => n.chain().focus().toggleHeading({ level: 2 }).run(),
        children: /* @__PURE__ */ g(Ed, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 240,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 234,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 233,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Heading 3", children: /* @__PURE__ */ g(
      $e,
      {
        size: "sm",
        pressed: n.isActive("heading", { level: 3 }),
        disabled: !n.can().chain().focus().toggleHeading({ level: 3 }).run(),
        onPressedChange: () => n.chain().focus().toggleHeading({ level: 3 }).run(),
        children: /* @__PURE__ */ g(Rd, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 251,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 245,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 244,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Paragraph", children: /* @__PURE__ */ g(
      $e,
      {
        size: "sm",
        pressed: n.isActive("paragraph"),
        onPressedChange: () => n.chain().focus().setParagraph().run(),
        children: /* @__PURE__ */ g(yd, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 261,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 256,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 255,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Align Left", children: /* @__PURE__ */ g(
      $e,
      {
        size: "sm",
        pressed: n.isActive({ textAlign: "left" }),
        disabled: !n.can().chain().focus().setTextAlign("left").run(),
        onPressedChange: () => n.chain().focus().setTextAlign("left").run(),
        children: /* @__PURE__ */ g(Nd, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 272,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 266,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 265,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Align Center", children: /* @__PURE__ */ g(
      $e,
      {
        size: "sm",
        pressed: n.isActive({ textAlign: "center" }),
        disabled: !n.can().chain().focus().setTextAlign("center").run(),
        onPressedChange: () => n.chain().focus().setTextAlign("center").run(),
        children: /* @__PURE__ */ g(xd, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 283,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 277,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 276,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Align Right", children: /* @__PURE__ */ g(
      $e,
      {
        size: "sm",
        pressed: n.isActive({ textAlign: "right" }),
        disabled: !n.can().chain().focus().setTextAlign("right").run(),
        onPressedChange: () => n.chain().focus().setTextAlign("right").run(),
        children: /* @__PURE__ */ g(kd, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 294,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 288,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 287,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Align Justify", children: /* @__PURE__ */ g(
      $e,
      {
        size: "sm",
        pressed: n.isActive({ textAlign: "justify" }),
        disabled: !n.can().chain().focus().setTextAlign("justify").run(),
        onPressedChange: () => n.chain().focus().setTextAlign("justify").run(),
        children: /* @__PURE__ */ g(wd, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 305,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 299,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 298,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Bullet List", children: /* @__PURE__ */ g(
      $e,
      {
        size: "sm",
        pressed: n.isActive("bulletList"),
        disabled: !n.can().chain().focus().toggleBulletList().run(),
        onPressedChange: () => n.chain().focus().toggleBulletList().run(),
        children: /* @__PURE__ */ g(hd, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 316,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 310,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 309,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Numbered List", children: /* @__PURE__ */ g(
      $e,
      {
        size: "sm",
        pressed: n.isActive("orderedList"),
        disabled: !n.can().chain().focus().toggleOrderedList().run(),
        onPressedChange: () => n.chain().focus().toggleOrderedList().run(),
        children: /* @__PURE__ */ g(pd, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 327,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 321,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 320,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Outdent", children: /* @__PURE__ */ g(
      Nt,
      {
        size: "sm",
        variant: "ghost",
        className: "px-2",
        onClick: () => n.chain().focus().liftListItem("listItem").run(),
        disabled: !n.can().chain().focus().liftListItem("listItem").run(),
        children: /* @__PURE__ */ g(Od, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 339,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 332,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 331,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Indent", children: /* @__PURE__ */ g(
      Nt,
      {
        size: "sm",
        variant: "ghost",
        className: "px-2",
        onClick: () => n.chain().focus().sinkListItem("listItem").run(),
        disabled: !n.can().chain().focus().sinkListItem("listItem").run(),
        children: /* @__PURE__ */ g(Sd, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 351,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 344,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 343,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(nf, { children: [
      /* @__PURE__ */ g(Re, { content: "Insert Image", children: /* @__PURE__ */ g(sm, { asChild: !0, children: /* @__PURE__ */ g(Nt, { size: "sm", variant: "ghost", className: "px-2", children: /* @__PURE__ */ g(dd, {}, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 359,
        columnNumber: 15
      }, void 0) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 358,
        columnNumber: 13
      }, void 0) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 357,
        columnNumber: 11
      }, void 0) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 356,
        columnNumber: 9
      }, void 0),
      /* @__PURE__ */ g(Sa, { className: "w-80", children: /* @__PURE__ */ g(QN, { onInsert: (t) => n.chain().focus().setImage(t).run() }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 364,
        columnNumber: 11
      }, void 0) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 363,
        columnNumber: 9
      }, void 0)
    ] }, void 0, !0, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 355,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Insert Break Line", children: /* @__PURE__ */ g(
      Nt,
      {
        size: "sm",
        variant: "ghost",
        className: "px-2",
        onClick: () => n.chain().focus().setHardBreak().run(),
        disabled: !n.can().chain().focus().setHardBreak().run(),
        children: /* @__PURE__ */ g(fd, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 376,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 369,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 368,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Insert Horizontal Rule", children: /* @__PURE__ */ g(
      Nt,
      {
        size: "sm",
        variant: "ghost",
        className: "px-2",
        onClick: () => n.chain().focus().setHorizontalRule().run(),
        disabled: !n.can().chain().focus().setHorizontalRule().run(),
        children: /* @__PURE__ */ g(bd, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 388,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 381,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 380,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Undo", children: /* @__PURE__ */ g(
      Nt,
      {
        size: "sm",
        variant: "ghost",
        className: "px-2",
        disabled: !n.can().undo(),
        onClick: () => n.chain().focus().undo().run(),
        children: /* @__PURE__ */ g(sd, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 400,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 393,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 392,
      columnNumber: 7
    }, void 0),
    /* @__PURE__ */ g(Re, { content: "Redo", children: /* @__PURE__ */ g(
      Nt,
      {
        size: "sm",
        variant: "ghost",
        className: "px-2",
        disabled: !n.can().redo(),
        onClick: () => n.chain().focus().redo().run(),
        children: /* @__PURE__ */ g(rd, {}, void 0, !1, {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 412,
          columnNumber: 11
        }, void 0)
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 405,
        columnNumber: 9
      },
      void 0
    ) }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 404,
      columnNumber: 7
    }, void 0)
  ] }, void 0, !0, {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
    lineNumber: 138,
    columnNumber: 5
  }, void 0);
}, e3 = R(
  ({ content: n, onChange: e, footer: t, hideToolbar: r = !1, className: s, editorClassName: i, ...o }, a) => {
    const l = Kx({
      extensions: [
        Gw,
        gx,
        zx,
        hx,
        $x.configure({ openOnClick: !1 }),
        Vx.configure({ types: ["heading", "paragraph"] })
      ],
      editorProps: {
        attributes: {
          class: T(
            "prose prose-sm prose-zinc max-h-[200px] max-w-none overflow-y-scroll dark:prose-invert focus:outline-none [&_*]:my-2",
            i
          )
        }
      },
      content: n,
      parseOptions: { preserveWhitespace: "full" },
      onUpdate: ({ editor: c }) => e == null ? void 0 : e(c.getHTML())
    });
    return l ? /* @__PURE__ */ g("div", { children: [
      !r && /* @__PURE__ */ g(XN, { editor: l }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 470,
        columnNumber: 26
      }, void 0),
      /* @__PURE__ */ g(
        Bx,
        {
          editor: l,
          className: T(
            "grid min-h-[160px] w-full rounded-sm border bg-transparent px-3 py-2 text-sm placeholder:opacity-80 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-primary disabled:cursor-not-allowed disabled:opacity-50",
            r && "pt-2",
            s
          ),
          ...o
        },
        void 0,
        !1,
        {
          fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
          lineNumber: 472,
          columnNumber: 9
        },
        void 0
      ),
      t == null ? void 0 : t(l)
    ] }, void 0, !0, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 469,
      columnNumber: 7
    }, void 0) : /* @__PURE__ */ g("div", { className: "space-y-2", children: [
      /* @__PURE__ */ g(Ju, { className: T("h-[42px] w-full", r && "hidden") }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 462,
        columnNumber: 11
      }, void 0),
      /* @__PURE__ */ g(Ju, { className: "h-[90px] w-full" }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
        lineNumber: 463,
        columnNumber: 11
      }, void 0)
    ] }, void 0, !0, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/rich-input.tsx",
      lineNumber: 461,
      columnNumber: 9
    }, void 0);
  }
);
e3.displayName = "RichInput";
const lk = Ve.Root, ck = Ve.Group, uk = Ve.Value, t3 = R(({ className: n, children: e, ...t }, r) => /* @__PURE__ */ g(
  Ve.Trigger,
  {
    ref: r,
    className: T(
      "flex h-9 w-full items-center justify-between rounded border border-border bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-secondary-foreground focus:outline-none focus:ring-1 focus:ring-primary disabled:cursor-not-allowed disabled:opacity-50",
      n
    ),
    ...t,
    children: [
      e,
      /* @__PURE__ */ g(Ve.Icon, { asChild: !0, children: /* @__PURE__ */ g(id, { className: "size-4 opacity-50" }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/select.tsx",
        lineNumber: 26,
        columnNumber: 7
      }, void 0) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/select.tsx",
        lineNumber: 25,
        columnNumber: 5
      }, void 0)
    ]
  },
  void 0,
  !0,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/select.tsx",
    lineNumber: 16,
    columnNumber: 3
  },
  void 0
));
t3.displayName = Ve.Trigger.displayName;
const n3 = R(({ className: n, children: e, position: t = "popper", ...r }, s) => /* @__PURE__ */ g(Ve.Portal, { children: /* @__PURE__ */ g(
  Ve.Content,
  {
    ref: s,
    className: T(
      "relative z-50 min-w-[8rem] overflow-hidden rounded border border-border bg-background text-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      t === "popper" && "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
      n
    ),
    position: t,
    ...r,
    children: /* @__PURE__ */ g(
      Ve.Viewport,
      {
        className: T(
          "p-1",
          t === "popper" && "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
        ),
        children: e
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/select.tsx",
        lineNumber: 49,
        columnNumber: 7
      },
      void 0
    )
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/select.tsx",
    lineNumber: 38,
    columnNumber: 5
  },
  void 0
) }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/select.tsx",
  lineNumber: 37,
  columnNumber: 3
}, void 0));
n3.displayName = Ve.Content.displayName;
const r3 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  Ve.Label,
  {
    ref: t,
    className: T("px-2 py-1.5 text-sm font-semibold", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/select.tsx",
    lineNumber: 68,
    columnNumber: 3
  },
  void 0
));
r3.displayName = Ve.Label.displayName;
const s3 = R(({ className: n, children: e, ...t }, r) => /* @__PURE__ */ g(
  Ve.Item,
  {
    ref: r,
    className: T(
      "relative flex w-full cursor-default select-none items-center rounded py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-secondary focus:text-secondary-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      n
    ),
    ...t,
    children: [
      /* @__PURE__ */ g("span", { className: "absolute right-2 flex size-3.5 items-center justify-center", children: /* @__PURE__ */ g(Ve.ItemIndicator, { children: /* @__PURE__ */ g(rr, { className: "size-4" }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/select.tsx",
        lineNumber: 91,
        columnNumber: 9
      }, void 0) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/select.tsx",
        lineNumber: 90,
        columnNumber: 7
      }, void 0) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/select.tsx",
        lineNumber: 89,
        columnNumber: 5
      }, void 0),
      /* @__PURE__ */ g(Ve.ItemText, { children: e }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/select.tsx",
        lineNumber: 94,
        columnNumber: 5
      }, void 0)
    ]
  },
  void 0,
  !0,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/select.tsx",
    lineNumber: 81,
    columnNumber: 3
  },
  void 0
));
s3.displayName = Ve.Item.displayName;
const i3 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  Ve.Separator,
  {
    ref: t,
    className: T("-mx-1 my-1 h-px opacity-60", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/select.tsx",
    lineNumber: 104,
    columnNumber: 3
  },
  void 0
));
i3.displayName = Ve.Separator.displayName;
const o3 = R(({ className: n, orientation: e = "horizontal", decorative: t = !0, ...r }, s) => /* @__PURE__ */ g(
  Xu.Root,
  {
    ref: s,
    decorative: t,
    orientation: e,
    className: T(
      "shrink-0 bg-border",
      e === "horizontal" ? "h-[1px] w-full" : "h-full w-[1px]",
      n
    ),
    ...r
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/separator.tsx",
    lineNumber: 9,
    columnNumber: 3
  },
  void 0
));
o3.displayName = Xu.Root.displayName;
const a3 = sr(
  "fixed z-50 gap-4 bg-background p-4 shadow-sm transition ease-in-out focus:outline-none data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out",
  {
    variants: {
      side: {
        top: "inset-x-0 top-0 w-screen border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",
        bottom: "inset-x-0 bottom-0 w-screen border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",
        left: "inset-y-0 left-0 h-screen w-11/12 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",
        right: "inset-y-0 right-0 h-screen w-11/12 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm"
      }
    },
    defaultVariants: {
      side: "right"
    }
  }
), dk = be.Root, fk = be.Trigger, mk = be.Close, em = (n) => /* @__PURE__ */ g(be.Portal, { ...n }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/sheet.tsx",
  lineNumber: 16,
  columnNumber: 3
}, void 0);
em.displayName = be.Portal.displayName;
const tm = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  be.Overlay,
  {
    className: T(
      "fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      n
    ),
    ...e,
    ref: t
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/sheet.tsx",
    lineNumber: 25,
    columnNumber: 3
  },
  void 0
));
tm.displayName = be.Overlay.displayName;
const l3 = R(({ side: n = "right", className: e, children: t, showClose: r = !0, ...s }, i) => /* @__PURE__ */ g(em, { children: [
  /* @__PURE__ */ g(tm, {}, void 0, !1, {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/sheet.tsx",
    lineNumber: 48,
    columnNumber: 5
  }, void 0),
  /* @__PURE__ */ g(be.Content, { ref: i, className: T(a3({ side: n }), e), ...s, children: [
    t,
    r && /* @__PURE__ */ g(be.Close, { className: "absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary", children: [
      /* @__PURE__ */ g(Pi, { className: "size-4" }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/sheet.tsx",
        lineNumber: 54,
        columnNumber: 11
      }, void 0),
      /* @__PURE__ */ g("span", { className: "sr-only", children: "Close" }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/sheet.tsx",
        lineNumber: 55,
        columnNumber: 11
      }, void 0)
    ] }, void 0, !0, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/sheet.tsx",
      lineNumber: 53,
      columnNumber: 9
    }, void 0)
  ] }, void 0, !0, {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/sheet.tsx",
    lineNumber: 49,
    columnNumber: 5
  }, void 0)
] }, void 0, !0, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/sheet.tsx",
  lineNumber: 47,
  columnNumber: 3
}, void 0));
l3.displayName = be.Content.displayName;
const c3 = ({ className: n, ...e }) => /* @__PURE__ */ g("div", { className: T("flex flex-col space-y-2 text-center sm:text-left", n), ...e }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/sheet.tsx",
  lineNumber: 65,
  columnNumber: 3
}, void 0);
c3.displayName = "SheetHeader";
const u3 = ({ className: n, ...e }) => /* @__PURE__ */ g(
  "div",
  {
    className: T("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/sheet.tsx",
    lineNumber: 71,
    columnNumber: 3
  },
  void 0
);
u3.displayName = "SheetFooter";
const d3 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  be.Title,
  {
    ref: t,
    className: T("text-base font-medium text-foreground", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/sheet.tsx",
    lineNumber: 83,
    columnNumber: 3
  },
  void 0
));
d3.displayName = be.Title.displayName;
const f3 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(be.Description, { ref: t, className: T("opacity-60", n), ...e }, void 0, !1, {
  fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/sheet.tsx",
  lineNumber: 96,
  columnNumber: 3
}, void 0));
f3.displayName = be.Description.displayName;
const m3 = ({
  className: n,
  defaultValue: e = !1,
  ...t
}) => {
  const { value: r, setValue: s } = fb(e);
  return vr(() => {
    const i = (a) => a.key === "Control" && s(!0), o = (a) => a.key === "Control" && s(!1);
    return document.addEventListener("keydown", i), document.addEventListener("keyup", o), () => {
      document.removeEventListener("keydown", i), document.removeEventListener("keyup", o);
    };
  }, [s]), /* @__PURE__ */ g(
    "span",
    {
      className: T(
        "ml-auto scale-0 text-xs tracking-widest opacity-0 transition-[opacity]",
        r && "scale-100 opacity-60",
        n
      ),
      ...t
    },
    void 0,
    !1,
    {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/shortcut.tsx",
      lineNumber: 36,
      columnNumber: 5
    },
    void 0
  );
};
m3.displayName = "KeyboardShortcut";
const h3 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  jr.Root,
  {
    ref: t,
    className: T("relative flex w-full touch-none select-none items-center", n),
    ...e,
    children: [
      /* @__PURE__ */ g(jr.Track, { className: "relative h-2.5 w-full grow overflow-hidden rounded-full bg-secondary", children: /* @__PURE__ */ g(jr.Range, { className: "absolute h-full bg-primary" }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/slider.tsx",
        lineNumber: 15,
        columnNumber: 7
      }, void 0) }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/slider.tsx",
        lineNumber: 14,
        columnNumber: 5
      }, void 0),
      /* @__PURE__ */ g(jr.Thumb, { className: "block size-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50" }, void 0, !1, {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/slider.tsx",
        lineNumber: 17,
        columnNumber: 5
      }, void 0)
    ]
  },
  void 0,
  !0,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/slider.tsx",
    lineNumber: 9,
    columnNumber: 3
  },
  void 0
));
h3.displayName = jr.Root.displayName;
const p3 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  Po.Root,
  {
    ref: t,
    className: T(
      "peer inline-flex h-[24px] w-[44px] shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-border",
      n
    ),
    ...e,
    children: /* @__PURE__ */ g(
      Po.Thumb,
      {
        className: T(
          "pointer-events-none block size-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0"
        )
      },
      void 0,
      !1,
      {
        fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/switch.tsx",
        lineNumber: 17,
        columnNumber: 5
      },
      void 0
    )
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/switch.tsx",
    lineNumber: 9,
    columnNumber: 3
  },
  void 0
));
p3.displayName = Po.Root.displayName;
const hk = nr.Root, g3 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  nr.List,
  {
    ref: t,
    className: T(
      "inline-flex h-9 items-center justify-center rounded bg-secondary-accent px-0.5 text-foreground",
      n
    ),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/tabs.tsx",
    lineNumber: 11,
    columnNumber: 3
  },
  void 0
));
g3.displayName = nr.List.displayName;
const b3 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  nr.Trigger,
  {
    ref: t,
    className: T(
      "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-4 py-1 text-sm font-medium transition-all focus-visible:outline-none focus-visible:ring-0 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
      n
    ),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/tabs.tsx",
    lineNumber: 27,
    columnNumber: 3
  },
  void 0
));
b3.displayName = nr.Trigger.displayName;
const y3 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  nr.Content,
  {
    ref: t,
    className: T("mt-3 focus-visible:outline-none focus-visible:ring-0", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/tabs.tsx",
    lineNumber: 43,
    columnNumber: 3
  },
  void 0
));
y3.displayName = nr.Content.displayName;
const v3 = sr(
  "group pointer-events-auto relative flex w-full items-center justify-between space-x-2 overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full",
  {
    variants: {
      variant: {
        default: "border bg-background text-foreground",
        primary: "group/primary border-primary bg-primary text-primary-foreground",
        secondary: "group/secondary border-secondary bg-secondary text-secondary-foreground",
        error: "group/error border-error bg-error text-error-foreground",
        warning: "group/warning border-warning bg-warning text-warning-foreground",
        info: "group/info border-info bg-info text-info-foreground",
        success: "group/success border-success bg-success text-success-foreground"
      }
    },
    defaultVariants: {
      variant: "default"
    }
  }
), pk = ft.Provider, x3 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  ft.Viewport,
  {
    ref: t,
    className: T(
      "fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]",
      n
    ),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/toast.tsx",
    lineNumber: 15,
    columnNumber: 3
  },
  void 0
));
x3.displayName = ft.Viewport.displayName;
const w3 = R(({ className: n, variant: e, ...t }, r) => /* @__PURE__ */ g(
  ft.Root,
  {
    ref: r,
    className: T(v3({ variant: e }), n),
    ...t
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/toast.tsx",
    lineNumber: 32,
    columnNumber: 5
  },
  void 0
));
w3.displayName = ft.Root.displayName;
const N3 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  ft.Action,
  {
    ref: t,
    className: T(
      "inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors hover:bg-secondary focus:outline-none focus:ring-1 focus:ring-primary disabled:pointer-events-none disabled:opacity-50",
      "group/primary:border-border/40 group-hover/primary:border-primary/30 group-hover/primary:bg-primary group-hover/primary:text-primary-foreground group-focus/primary:ring-primary",
      "group/secondary:border-border/40 group-hover/secondary:border-secondary/30 group-hover/secondary:bg-secondary group-hover/secondary:text-secondary-foreground group-focus/secondary:ring-secondary",
      "group/error:border-border/40 group-hover/error:border-error/30 group-hover/error:bg-error group-hover/error:text-error-foreground group-focus/error:ring-error",
      "group/warning:border-border/40 group-hover/warning:border-warning/30 group-hover/warning:bg-warning group-hover/warning:text-warning-foreground group-focus/warning:ring-warning",
      "group/info:border-border/40 group-hover/info:border-info/30 group-hover/info:bg-info group-hover/info:text-info-foreground group-focus/info:ring-info",
      "group/success:border-border/40 group-hover/success:border-success/30 group-hover/success:bg-success group-hover/success:text-success-foreground group-focus/success:ring-success",
      n
    ),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/toast.tsx",
    lineNumber: 46,
    columnNumber: 3
  },
  void 0
));
N3.displayName = ft.Action.displayName;
const k3 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  ft.Close,
  {
    ref: t,
    className: T(
      "absolute right-1 top-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-1 group-hover:opacity-100",
      "group/primary:text-primary group-hover/primary:text-primary-foreground group-focus/primary:ring-primary group-focus/primary:ring-offset-primary",
      "group/secondary:text-secondary group-hover/secondary:text-secondary-foreground group-focus/secondary:ring-secondary group-focus/secondary:ring-offset-secondary",
      "group/error:text-error group-hover/error:text-error-foreground group-focus/error:ring-error group-focus/error:ring-offset-error",
      "group/warning:text-warning group-hover/warning:text-warning-foreground group-focus/warning:ring-warning group-focus/warning:ring-offset-warning",
      "group/info:text-info group-hover/info:text-info-foreground group-focus/info:ring-info group-focus/info:ring-offset-info",
      "group/success:text-success group-hover/success:text-success-foreground group-focus/success:ring-success group-focus/success:ring-offset-success",
      n
    ),
    "toast-close": "",
    ...e,
    children: /* @__PURE__ */ g(Pi, { className: "size-4" }, void 0, !1, {
      fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/toast.tsx",
      lineNumber: 83,
      columnNumber: 5
    }, void 0)
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/toast.tsx",
    lineNumber: 68,
    columnNumber: 3
  },
  void 0
));
k3.displayName = ft.Close.displayName;
const M3 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  ft.Title,
  {
    ref: t,
    className: T("text-sm font-semibold [&+div]:text-xs", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/toast.tsx",
    lineNumber: 93,
    columnNumber: 3
  },
  void 0
));
M3.displayName = ft.Title.displayName;
const C3 = R(({ className: n, ...e }, t) => /* @__PURE__ */ g(
  ft.Description,
  {
    ref: t,
    className: T("line-clamp-2 text-sm opacity-90", n),
    ...e
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/toast.tsx",
    lineNumber: 106,
    columnNumber: 3
  },
  void 0
));
C3.displayName = ft.Description.displayName;
const gk = ed.Root, bk = R(({ className: n, variant: e, size: t, ...r }, s) => /* @__PURE__ */ g(
  ed.Item,
  {
    ref: s,
    className: T(
      Q0({ variant: e, size: t, className: n }),
      "rounded-none first:rounded-l last:rounded-r"
    ),
    ...r
  },
  void 0,
  !1,
  {
    fileName: "C:/Users/lenovo/Downloads/React_resume/Reactive-Resume/libs/ui/src/components/toggle-group.tsx",
    lineNumber: 15,
    columnNumber: 3
  },
  void 0
));
export {
  _3 as Accordion,
  W2 as AccordionContent,
  U2 as AccordionItem,
  B2 as AccordionTrigger,
  J2 as Alert,
  Y2 as AlertDescription,
  D3 as AlertDialog,
  r8 as AlertDialogAction,
  s8 as AlertDialogCancel,
  Q2 as AlertDialogContent,
  n8 as AlertDialogDescription,
  e8 as AlertDialogFooter,
  X2 as AlertDialogHeader,
  zd as AlertDialogOverlay,
  Vd as AlertDialogPortal,
  t8 as AlertDialogTitle,
  H3 as AlertDialogTrigger,
  G2 as AlertTitle,
  I3 as AspectRatio,
  i8 as Avatar,
  a8 as AvatarFallback,
  o8 as AvatarImage,
  P3 as Badge,
  L3 as BadgeInput,
  Nt as Button,
  c8 as Card,
  m8 as CardContent,
  f8 as CardDescription,
  h8 as CardFooter,
  u8 as CardHeader,
  d8 as CardTitle,
  p8 as Checkbox,
  z3 as Combobox,
  Ea as Command,
  $3 as CommandDialog,
  Xd as CommandEmpty,
  ef as CommandGroup,
  Qd as CommandInput,
  tf as CommandItem,
  B8 as CommandList,
  W8 as CommandSeparator,
  F3 as ContextMenu,
  eb as ContextMenuCheckboxItem,
  Q8 as ContextMenuContent,
  U3 as ContextMenuGroup,
  X8 as ContextMenuItem,
  nb as ContextMenuLabel,
  B3 as ContextMenuPortal,
  q3 as ContextMenuRadioGroup,
  tb as ContextMenuRadioItem,
  rb as ContextMenuSeparator,
  W3 as ContextMenuSub,
  Y8 as ContextMenuSubContent,
  G8 as ContextMenuSubTrigger,
  j3 as ContextMenuTrigger,
  V8 as Dialog,
  Yd as DialogContent,
  U8 as DialogDescription,
  F8 as DialogFooter,
  z8 as DialogHeader,
  Gd as DialogOverlay,
  Jd as DialogPortal,
  j8 as DialogTitle,
  Z3 as DialogTrigger,
  K3 as DropdownMenu,
  lb as DropdownMenuCheckboxItem,
  ob as DropdownMenuContent,
  G3 as DropdownMenuGroup,
  ab as DropdownMenuItem,
  ub as DropdownMenuLabel,
  Y3 as DropdownMenuPortal,
  X3 as DropdownMenuRadioGroup,
  cb as DropdownMenuRadioItem,
  db as DropdownMenuSeparator,
  Q3 as DropdownMenuSub,
  ib as DropdownMenuSubContent,
  sb as DropdownMenuSubTrigger,
  J3 as DropdownMenuTrigger,
  hb as Form,
  Fo as FormControl,
  pb as FormDescription,
  Ec as FormField,
  Vo as FormItem,
  zo as FormLabel,
  cf as FormMessage,
  ek as HoverCard,
  gb as HoverCardContent,
  tk as HoverCardTrigger,
  Gs as Input,
  m3 as KeyboardShortcut,
  lf as Label,
  sk as Panel,
  rk as PanelGroup,
  ik as PanelResizeHandle,
  nf as Popover,
  V3 as PopoverArrow,
  Sa as PopoverContent,
  q8 as PopoverTrigger,
  nk as Portal,
  e3 as RichInput,
  rf as ScrollArea,
  sf as ScrollBar,
  lk as Select,
  n3 as SelectContent,
  ck as SelectGroup,
  s3 as SelectItem,
  r3 as SelectLabel,
  i3 as SelectSeparator,
  t3 as SelectTrigger,
  uk as SelectValue,
  o3 as Separator,
  dk as Sheet,
  mk as SheetClose,
  l3 as SheetContent,
  f3 as SheetDescription,
  u3 as SheetFooter,
  c3 as SheetHeader,
  tm as SheetOverlay,
  em as SheetPortal,
  d3 as SheetTitle,
  fk as SheetTrigger,
  Ju as Skeleton,
  h3 as Slider,
  p3 as Switch,
  hk as Tabs,
  y3 as TabsContent,
  g3 as TabsList,
  b3 as TabsTrigger,
  w3 as Toast,
  N3 as ToastAction,
  k3 as ToastClose,
  C3 as ToastDescription,
  pk as ToastProvider,
  M3 as ToastTitle,
  x3 as ToastViewport,
  $e as Toggle,
  gk as ToggleGroup,
  bk as ToggleGroupItem,
  Re as Tooltip,
  X0 as TooltipContent,
  ak as TooltipProvider,
  JN as TooltipRoot,
  GN as TooltipTrigger,
  K2 as alertVariants,
  l8 as badgeVariants,
  Ca as buttonVariants,
  mb as labelVariants,
  a3 as sheetVariants,
  v3 as toastVariants,
  Q0 as toggleVariants
};
